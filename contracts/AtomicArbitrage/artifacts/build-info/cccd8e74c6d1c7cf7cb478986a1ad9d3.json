{
	"id": "cccd8e74c6d1c7cf7cb478986a1ad9d3",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.25",
	"solcLongVersion": "0.8.25+commit.b61c2a91",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/AtomicArbitrage/benchmark.sol": {
				"content": "//SPDX-License-Identifier: Unlicense\npragma solidity >=0.7.5;\npragma abicoder v2;\n\nimport \"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\";\nimport \"@uniswap/lib/contracts/libraries/TransferHelper.sol\";\nimport \"@uniswap/swap-router-contracts/contracts/interfaces/IV3SwapRouter.sol\";\n\ncontract Arbitrage {\n\n    uint256 constant MAX_UINT = 2**256 - 1;\n\n    address private constant SWAP_ROUTER = 0x3bFA4769FB09eefC5a80d6E87c3B9C650f7Ae48E;\n\n    address private constant LUSD = 0xD28627157e141FE80320b6022E9345a882bc71Bf;\n    address public constant TIGER = 0xE0Ca845dC9Cb425970F9D4F88771dE30058322B0;\n\n    IV3SwapRouter public immutable swapRouter = IV3SwapRouter(SWAP_ROUTER);\n\n    function doArbitrage(uint256 amountIn)\n        external\n        returns (uint256 amountOut)\n    {\n\n        // Use TransferHelper to transfer LUSD from your wallet to the smart contract\n        // Make sure that you approve this contract to spend LUSD through the LUSD contract\n        TransferHelper.safeTransferFrom(\n            LUSD, // Token \n            msg.sender, // Sender\n            address(this), // Recipient\n            amountIn // Amount\n        );\n\n        // Approve the SwapRouter to transfer our LUSD\n        TransferHelper.safeApprove(LUSD, address(swapRouter), amountIn);\n\n        // Create transaction for swapping LUSD to TIGER \n        // Using Pool 1 or Pool 2??\n        IV3SwapRouter.ExactInputSingleParams memory params = IV3SwapRouter\n            .ExactInputSingleParams({\n                tokenIn: LUSD,\n                tokenOut: TIGER,\n                fee: 500, // Set to 500 if pool 1 and 3000 if pool 2\n                recipient: address(this),// Who is receiving the TIGER //\n                amountIn: amountIn,\n                amountOutMinimum: 0,\n                sqrtPriceLimitX96: 0\n            });\n\n        \n        // Execute transaction and store amount of TIGER received\n        // Remember: in the intermediary steps, LUSD/TIGER is stored \n        // directly in the smart contract\n        uint256 amountOut1 = swapRouter.exactInputSingle(params);\n\n        // Approve the SwapRouter to transfer our new TIGER\n        TransferHelper.safeApprove(TIGER, address(swapRouter), MAX_UINT);\n\n        // Create transaction for swapping TIGER to LUSD \n        // Using Pool 1 or Pool 2 ?? \n        IV3SwapRouter.ExactInputSingleParams memory params2 = IV3SwapRouter\n            .ExactInputSingleParams({\n                tokenIn: TIGER,\n                tokenOut: LUSD,\n                fee: 500, // Set to 500 if pool 1 and 3000 if pool 2\n                recipient: msg.sender, // Who is receiving the LUSD? This is the last step of the arbitrage. // \n                amountIn: amountOut1, // Think about what value we would like to send \n                // (hint: there are various reasons why the estimated amount  \n                // of LUSD does not align with the amount of LUSD received)\n                amountOutMinimum: 0,\n                sqrtPriceLimitX96: 0\n            });\n\n        // Execute transaction and store amount of TIGER received\n        amountOut = swapRouter.exactInputSingle(params2);\n    }\n}"
			},
			"@uniswap/swap-router-contracts/contracts/interfaces/IV3SwapRouter.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.7.5;\npragma abicoder v2;\n\nimport '@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol';\n\n/// @title Router token swapping functionality\n/// @notice Functions for swapping tokens via Uniswap V3\ninterface IV3SwapRouter is IUniswapV3SwapCallback {\n    struct ExactInputSingleParams {\n        address tokenIn;\n        address tokenOut;\n        uint24 fee;\n        address recipient;\n        uint256 amountIn;\n        uint256 amountOutMinimum;\n        uint160 sqrtPriceLimitX96;\n    }\n\n    /// @notice Swaps `amountIn` of one token for as much as possible of another token\n    /// @dev Setting `amountIn` to 0 will cause the contract to look up its own balance,\n    /// and swap the entire amount, enabling contracts to send tokens before calling this function.\n    /// @param params The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\n    /// @return amountOut The amount of the received token\n    function exactInputSingle(ExactInputSingleParams calldata params) external payable returns (uint256 amountOut);\n\n    struct ExactInputParams {\n        bytes path;\n        address recipient;\n        uint256 amountIn;\n        uint256 amountOutMinimum;\n    }\n\n    /// @notice Swaps `amountIn` of one token for as much as possible of another along the specified path\n    /// @dev Setting `amountIn` to 0 will cause the contract to look up its own balance,\n    /// and swap the entire amount, enabling contracts to send tokens before calling this function.\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\n    /// @return amountOut The amount of the received token\n    function exactInput(ExactInputParams calldata params) external payable returns (uint256 amountOut);\n\n    struct ExactOutputSingleParams {\n        address tokenIn;\n        address tokenOut;\n        uint24 fee;\n        address recipient;\n        uint256 amountOut;\n        uint256 amountInMaximum;\n        uint160 sqrtPriceLimitX96;\n    }\n\n    /// @notice Swaps as little as possible of one token for `amountOut` of another token\n    /// that may remain in the router after the swap.\n    /// @param params The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\n    /// @return amountIn The amount of the input token\n    function exactOutputSingle(ExactOutputSingleParams calldata params) external payable returns (uint256 amountIn);\n\n    struct ExactOutputParams {\n        bytes path;\n        address recipient;\n        uint256 amountOut;\n        uint256 amountInMaximum;\n    }\n\n    /// @notice Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\n    /// that may remain in the router after the swap.\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\n    /// @return amountIn The amount of the input token\n    function exactOutput(ExactOutputParams calldata params) external payable returns (uint256 amountIn);\n}\n"
			},
			"@uniswap/lib/contracts/libraries/TransferHelper.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0-or-later\n\npragma solidity >=0.6.0;\n\n// helper methods for interacting with ERC20 tokens and sending ETH that do not consistently return true/false\nlibrary TransferHelper {\n    function safeApprove(\n        address token,\n        address to,\n        uint256 value\n    ) internal {\n        // bytes4(keccak256(bytes('approve(address,uint256)')));\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0x095ea7b3, to, value));\n        require(\n            success && (data.length == 0 || abi.decode(data, (bool))),\n            'TransferHelper::safeApprove: approve failed'\n        );\n    }\n\n    function safeTransfer(\n        address token,\n        address to,\n        uint256 value\n    ) internal {\n        // bytes4(keccak256(bytes('transfer(address,uint256)')));\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0xa9059cbb, to, value));\n        require(\n            success && (data.length == 0 || abi.decode(data, (bool))),\n            'TransferHelper::safeTransfer: transfer failed'\n        );\n    }\n\n    function safeTransferFrom(\n        address token,\n        address from,\n        address to,\n        uint256 value\n    ) internal {\n        // bytes4(keccak256(bytes('transferFrom(address,address,uint256)')));\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0x23b872dd, from, to, value));\n        require(\n            success && (data.length == 0 || abi.decode(data, (bool))),\n            'TransferHelper::transferFrom: transferFrom failed'\n        );\n    }\n\n    function safeTransferETH(address to, uint256 value) internal {\n        (bool success, ) = to.call{value: value}(new bytes(0));\n        require(success, 'TransferHelper::safeTransferETH: ETH transfer failed');\n    }\n}\n"
			},
			"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.7.5;\npragma abicoder v2;\n\nimport '@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol';\n\n/// @title Router token swapping functionality\n/// @notice Functions for swapping tokens via Uniswap V3\ninterface ISwapRouter is IUniswapV3SwapCallback {\n    struct ExactInputSingleParams {\n        address tokenIn;\n        address tokenOut;\n        uint24 fee;\n        address recipient;\n        uint256 deadline;\n        uint256 amountIn;\n        uint256 amountOutMinimum;\n        uint160 sqrtPriceLimitX96;\n    }\n\n    /// @notice Swaps `amountIn` of one token for as much as possible of another token\n    /// @param params The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\n    /// @return amountOut The amount of the received token\n    function exactInputSingle(ExactInputSingleParams calldata params) external payable returns (uint256 amountOut);\n\n    struct ExactInputParams {\n        bytes path;\n        address recipient;\n        uint256 deadline;\n        uint256 amountIn;\n        uint256 amountOutMinimum;\n    }\n\n    /// @notice Swaps `amountIn` of one token for as much as possible of another along the specified path\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\n    /// @return amountOut The amount of the received token\n    function exactInput(ExactInputParams calldata params) external payable returns (uint256 amountOut);\n\n    struct ExactOutputSingleParams {\n        address tokenIn;\n        address tokenOut;\n        uint24 fee;\n        address recipient;\n        uint256 deadline;\n        uint256 amountOut;\n        uint256 amountInMaximum;\n        uint160 sqrtPriceLimitX96;\n    }\n\n    /// @notice Swaps as little as possible of one token for `amountOut` of another token\n    /// @param params The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\n    /// @return amountIn The amount of the input token\n    function exactOutputSingle(ExactOutputSingleParams calldata params) external payable returns (uint256 amountIn);\n\n    struct ExactOutputParams {\n        bytes path;\n        address recipient;\n        uint256 deadline;\n        uint256 amountOut;\n        uint256 amountInMaximum;\n    }\n\n    /// @notice Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\n    /// @return amountIn The amount of the input token\n    function exactOutput(ExactOutputParams calldata params) external payable returns (uint256 amountIn);\n}\n"
			},
			"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Callback for IUniswapV3PoolActions#swap\n/// @notice Any contract that calls IUniswapV3PoolActions#swap must implement this interface\ninterface IUniswapV3SwapCallback {\n    /// @notice Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\n    /// @dev In the implementation you must pay the pool tokens owed for the swap.\n    /// The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\n    /// amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\n    /// @param amount0Delta The amount of token0 that was sent (negative) or must be received (positive) by the pool by\n    /// the end of the swap. If positive, the callback must send that amount of token0 to the pool.\n    /// @param amount1Delta The amount of token1 that was sent (negative) or must be received (positive) by the pool by\n    /// the end of the swap. If positive, the callback must send that amount of token1 to the pool.\n    /// @param data Any data passed through by the caller via the IUniswapV3PoolActions#swap call\n    function uniswapV3SwapCallback(\n        int256 amount0Delta,\n        int256 amount1Delta,\n        bytes calldata data\n    ) external;\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@uniswap/lib/contracts/libraries/TransferHelper.sol": {
				"TransferHelper": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@uniswap/lib/contracts/libraries/TransferHelper.sol\":183:1804  library TransferHelper {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@uniswap/lib/contracts/libraries/TransferHelper.sol\":183:1804  library TransferHelper {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220f33e2fc27f121b4e326a4a6e0f004e7fc90eac770069a7f5fa4da13ed922bcdf64736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220f33e2fc27f121b4e326a4a6e0f004e7fc90eac770069a7f5fa4da13ed922bcdf64736f6c63430008190033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURN RETURNDATACOPY 0x2F 0xC2 PUSH32 0x121B4E326A4A6E0F004E7FC90EAC770069A7F5FA4DA13ED922BCDF64736F6C63 NUMBER STOP ADDMOD NOT STOP CALLER ",
							"sourceMap": "183:1621:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220f33e2fc27f121b4e326a4a6e0f004e7fc90eac770069a7f5fa4da13ed922bcdf64736f6c63430008190033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURN RETURNDATACOPY 0x2F 0xC2 PUSH32 0x121B4E326A4A6E0F004E7FC90EAC770069A7F5FA4DA13ED922BCDF64736F6C63 NUMBER STOP ADDMOD NOT STOP CALLER ",
							"sourceMap": "183:1621:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"safeApprove(address,address,uint256)": "infinite",
								"safeTransfer(address,address,uint256)": "infinite",
								"safeTransferETH(address,uint256)": "infinite",
								"safeTransferFrom(address,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 183,
									"end": 1804,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 183,
									"end": 1804,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 183,
									"end": 1804,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 183,
									"end": 1804,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 183,
									"end": 1804,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 183,
									"end": 1804,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 183,
									"end": 1804,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 183,
									"end": 1804,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 183,
									"end": 1804,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 183,
									"end": 1804,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 183,
									"end": 1804,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 183,
									"end": 1804,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 183,
									"end": 1804,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 183,
									"end": 1804,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 183,
									"end": 1804,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 183,
									"end": 1804,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 183,
									"end": 1804,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 183,
									"end": 1804,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 183,
									"end": 1804,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 183,
									"end": 1804,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 183,
									"end": 1804,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 183,
									"end": 1804,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 183,
									"end": 1804,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 183,
									"end": 1804,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 183,
									"end": 1804,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 183,
									"end": 1804,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 183,
									"end": 1804,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 183,
									"end": 1804,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 183,
									"end": 1804,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 183,
									"end": 1804,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 183,
									"end": 1804,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 183,
									"end": 1804,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 183,
									"end": 1804,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 183,
									"end": 1804,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 183,
									"end": 1804,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f33e2fc27f121b4e326a4a6e0f004e7fc90eac770069a7f5fa4da13ed922bcdf64736f6c63430008190033",
									".code": [
										{
											"begin": 183,
											"end": 1804,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 183,
											"end": 1804,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 183,
											"end": 1804,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 183,
											"end": 1804,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 183,
											"end": 1804,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 183,
											"end": 1804,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 183,
											"end": 1804,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 183,
											"end": 1804,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 183,
											"end": 1804,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"@uniswap/lib/contracts/libraries/TransferHelper.sol",
								"@uniswap/swap-router-contracts/contracts/interfaces/IV3SwapRouter.sol",
								"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
								"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
								"contracts/AtomicArbitrage/benchmark.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/lib/contracts/libraries/TransferHelper.sol\":\"TransferHelper\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/lib/contracts/libraries/TransferHelper.sol\":{\"keccak256\":\"0xaff99b54915f57e2a4e71b8d15afd4ee425410e5a6f45c07517ae1beb806f8bd\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://15432ec031f4cfa6709921289e198b030a0c5eac75b5a3e0eb64827a2b3b5595\",\"dweb:/ipfs/QmZvR1KuuDvuzXFiADCngTKyMCTy31uhq9U6CazP59B55j\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@uniswap/swap-router-contracts/contracts/interfaces/IV3SwapRouter.sol": {
				"IV3SwapRouter": {
					"abi": [
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bytes",
											"name": "path",
											"type": "bytes"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "amountIn",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountOutMinimum",
											"type": "uint256"
										}
									],
									"internalType": "struct IV3SwapRouter.ExactInputParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "exactInput",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "tokenIn",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "tokenOut",
											"type": "address"
										},
										{
											"internalType": "uint24",
											"name": "fee",
											"type": "uint24"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "amountIn",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountOutMinimum",
											"type": "uint256"
										},
										{
											"internalType": "uint160",
											"name": "sqrtPriceLimitX96",
											"type": "uint160"
										}
									],
									"internalType": "struct IV3SwapRouter.ExactInputSingleParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "exactInputSingle",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bytes",
											"name": "path",
											"type": "bytes"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "amountOut",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountInMaximum",
											"type": "uint256"
										}
									],
									"internalType": "struct IV3SwapRouter.ExactOutputParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "exactOutput",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "tokenIn",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "tokenOut",
											"type": "address"
										},
										{
											"internalType": "uint24",
											"name": "fee",
											"type": "uint24"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "amountOut",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountInMaximum",
											"type": "uint256"
										},
										{
											"internalType": "uint160",
											"name": "sqrtPriceLimitX96",
											"type": "uint160"
										}
									],
									"internalType": "struct IV3SwapRouter.ExactOutputSingleParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "exactOutputSingle",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int256",
									"name": "amount0Delta",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "amount1Delta",
									"type": "int256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "uniswapV3SwapCallback",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"exactInput((bytes,address,uint256,uint256))": {
								"details": "Setting `amountIn` to 0 will cause the contract to look up its own balance, and swap the entire amount, enabling contracts to send tokens before calling this function.",
								"params": {
									"params": "The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata"
								},
								"returns": {
									"amountOut": "The amount of the received token"
								}
							},
							"exactInputSingle((address,address,uint24,address,uint256,uint256,uint160))": {
								"details": "Setting `amountIn` to 0 will cause the contract to look up its own balance, and swap the entire amount, enabling contracts to send tokens before calling this function.",
								"params": {
									"params": "The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata"
								},
								"returns": {
									"amountOut": "The amount of the received token"
								}
							},
							"exactOutput((bytes,address,uint256,uint256))": {
								"params": {
									"params": "The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata"
								},
								"returns": {
									"amountIn": "The amount of the input token"
								}
							},
							"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint160))": {
								"params": {
									"params": "The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata"
								},
								"returns": {
									"amountIn": "The amount of the input token"
								}
							},
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"details": "In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.",
								"params": {
									"amount0Delta": "The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.",
									"amount1Delta": "The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.",
									"data": "Any data passed through by the caller via the IUniswapV3PoolActions#swap call"
								}
							}
						},
						"title": "Router token swapping functionality",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"exactInput((bytes,address,uint256,uint256))": "b858183f",
							"exactInputSingle((address,address,uint24,address,uint256,uint256,uint160))": "04e45aaf",
							"exactOutput((bytes,address,uint256,uint256))": "09b81346",
							"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint160))": "5023b4df",
							"uniswapV3SwapCallback(int256,int256,bytes)": "fa461e33"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMinimum\",\"type\":\"uint256\"}],\"internalType\":\"struct IV3SwapRouter.ExactInputParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactInput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMinimum\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct IV3SwapRouter.ExactInputSingleParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactInputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMaximum\",\"type\":\"uint256\"}],\"internalType\":\"struct IV3SwapRouter.ExactOutputParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactOutput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMaximum\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct IV3SwapRouter.ExactOutputSingleParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactOutputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"amount0Delta\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1Delta\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"uniswapV3SwapCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"exactInput((bytes,address,uint256,uint256))\":{\"details\":\"Setting `amountIn` to 0 will cause the contract to look up its own balance, and swap the entire amount, enabling contracts to send tokens before calling this function.\",\"params\":{\"params\":\"The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\"},\"returns\":{\"amountOut\":\"The amount of the received token\"}},\"exactInputSingle((address,address,uint24,address,uint256,uint256,uint160))\":{\"details\":\"Setting `amountIn` to 0 will cause the contract to look up its own balance, and swap the entire amount, enabling contracts to send tokens before calling this function.\",\"params\":{\"params\":\"The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\"},\"returns\":{\"amountOut\":\"The amount of the received token\"}},\"exactOutput((bytes,address,uint256,uint256))\":{\"params\":{\"params\":\"The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\"},\"returns\":{\"amountIn\":\"The amount of the input token\"}},\"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint160))\":{\"params\":{\"params\":\"The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\"},\"returns\":{\"amountIn\":\"The amount of the input token\"}},\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"details\":\"In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\",\"params\":{\"amount0Delta\":\"The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.\",\"amount1Delta\":\"The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.\",\"data\":\"Any data passed through by the caller via the IUniswapV3PoolActions#swap call\"}}},\"title\":\"Router token swapping functionality\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"exactInput((bytes,address,uint256,uint256))\":{\"notice\":\"Swaps `amountIn` of one token for as much as possible of another along the specified path\"},\"exactInputSingle((address,address,uint24,address,uint256,uint256,uint160))\":{\"notice\":\"Swaps `amountIn` of one token for as much as possible of another token\"},\"exactOutput((bytes,address,uint256,uint256))\":{\"notice\":\"Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed) that may remain in the router after the swap.\"},\"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint160))\":{\"notice\":\"Swaps as little as possible of one token for `amountOut` of another token that may remain in the router after the swap.\"},\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"notice\":\"Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\"}},\"notice\":\"Functions for swapping tokens via Uniswap V3\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/swap-router-contracts/contracts/interfaces/IV3SwapRouter.sol\":\"IV3SwapRouter\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/swap-router-contracts/contracts/interfaces/IV3SwapRouter.sol\":{\"keccak256\":\"0xa2300af2b82af292216a8f3f301a86e65463655fff9fb791515e3fd2ccf4a14c\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a0a9bece58527fb5c1773d86666c7a71884a78f413e230dfa8c8a7f8ea564ef9\",\"dweb:/ipfs/QmbDhvpoZJN1KntxUUxkYV89RPTwqVBiyHBkvVh4QHSveo\"]},\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"exactInput((bytes,address,uint256,uint256))": {
								"notice": "Swaps `amountIn` of one token for as much as possible of another along the specified path"
							},
							"exactInputSingle((address,address,uint24,address,uint256,uint256,uint160))": {
								"notice": "Swaps `amountIn` of one token for as much as possible of another token"
							},
							"exactOutput((bytes,address,uint256,uint256))": {
								"notice": "Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed) that may remain in the router after the swap."
							},
							"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint160))": {
								"notice": "Swaps as little as possible of one token for `amountOut` of another token that may remain in the router after the swap."
							},
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"notice": "Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap."
							}
						},
						"notice": "Functions for swapping tokens via Uniswap V3",
						"version": 1
					}
				}
			},
			"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol": {
				"IUniswapV3SwapCallback": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "int256",
									"name": "amount0Delta",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "amount1Delta",
									"type": "int256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "uniswapV3SwapCallback",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"details": "In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.",
								"params": {
									"amount0Delta": "The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.",
									"amount1Delta": "The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.",
									"data": "Any data passed through by the caller via the IUniswapV3PoolActions#swap call"
								}
							}
						},
						"title": "Callback for IUniswapV3PoolActions#swap",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"uniswapV3SwapCallback(int256,int256,bytes)": "fa461e33"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"amount0Delta\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1Delta\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"uniswapV3SwapCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"details\":\"In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\",\"params\":{\"amount0Delta\":\"The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.\",\"amount1Delta\":\"The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.\",\"data\":\"Any data passed through by the caller via the IUniswapV3PoolActions#swap call\"}}},\"title\":\"Callback for IUniswapV3PoolActions#swap\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"notice\":\"Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\"}},\"notice\":\"Any contract that calls IUniswapV3PoolActions#swap must implement this interface\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":\"IUniswapV3SwapCallback\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"notice": "Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap."
							}
						},
						"notice": "Any contract that calls IUniswapV3PoolActions#swap must implement this interface",
						"version": 1
					}
				}
			},
			"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol": {
				"ISwapRouter": {
					"abi": [
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bytes",
											"name": "path",
											"type": "bytes"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountIn",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountOutMinimum",
											"type": "uint256"
										}
									],
									"internalType": "struct ISwapRouter.ExactInputParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "exactInput",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "tokenIn",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "tokenOut",
											"type": "address"
										},
										{
											"internalType": "uint24",
											"name": "fee",
											"type": "uint24"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountIn",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountOutMinimum",
											"type": "uint256"
										},
										{
											"internalType": "uint160",
											"name": "sqrtPriceLimitX96",
											"type": "uint160"
										}
									],
									"internalType": "struct ISwapRouter.ExactInputSingleParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "exactInputSingle",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bytes",
											"name": "path",
											"type": "bytes"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountOut",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountInMaximum",
											"type": "uint256"
										}
									],
									"internalType": "struct ISwapRouter.ExactOutputParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "exactOutput",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "tokenIn",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "tokenOut",
											"type": "address"
										},
										{
											"internalType": "uint24",
											"name": "fee",
											"type": "uint24"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountOut",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountInMaximum",
											"type": "uint256"
										},
										{
											"internalType": "uint160",
											"name": "sqrtPriceLimitX96",
											"type": "uint160"
										}
									],
									"internalType": "struct ISwapRouter.ExactOutputSingleParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "exactOutputSingle",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int256",
									"name": "amount0Delta",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "amount1Delta",
									"type": "int256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "uniswapV3SwapCallback",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"exactInput((bytes,address,uint256,uint256,uint256))": {
								"params": {
									"params": "The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata"
								},
								"returns": {
									"amountOut": "The amount of the received token"
								}
							},
							"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": {
								"params": {
									"params": "The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata"
								},
								"returns": {
									"amountOut": "The amount of the received token"
								}
							},
							"exactOutput((bytes,address,uint256,uint256,uint256))": {
								"params": {
									"params": "The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata"
								},
								"returns": {
									"amountIn": "The amount of the input token"
								}
							},
							"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": {
								"params": {
									"params": "The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata"
								},
								"returns": {
									"amountIn": "The amount of the input token"
								}
							},
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"details": "In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.",
								"params": {
									"amount0Delta": "The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.",
									"amount1Delta": "The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.",
									"data": "Any data passed through by the caller via the IUniswapV3PoolActions#swap call"
								}
							}
						},
						"title": "Router token swapping functionality",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"exactInput((bytes,address,uint256,uint256,uint256))": "c04b8d59",
							"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": "414bf389",
							"exactOutput((bytes,address,uint256,uint256,uint256))": "f28c0498",
							"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": "db3e2198",
							"uniswapV3SwapCallback(int256,int256,bytes)": "fa461e33"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMinimum\",\"type\":\"uint256\"}],\"internalType\":\"struct ISwapRouter.ExactInputParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactInput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMinimum\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct ISwapRouter.ExactInputSingleParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactInputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMaximum\",\"type\":\"uint256\"}],\"internalType\":\"struct ISwapRouter.ExactOutputParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactOutput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMaximum\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct ISwapRouter.ExactOutputSingleParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactOutputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"amount0Delta\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1Delta\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"uniswapV3SwapCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"exactInput((bytes,address,uint256,uint256,uint256))\":{\"params\":{\"params\":\"The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\"},\"returns\":{\"amountOut\":\"The amount of the received token\"}},\"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"params\":{\"params\":\"The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\"},\"returns\":{\"amountOut\":\"The amount of the received token\"}},\"exactOutput((bytes,address,uint256,uint256,uint256))\":{\"params\":{\"params\":\"The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\"},\"returns\":{\"amountIn\":\"The amount of the input token\"}},\"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"params\":{\"params\":\"The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\"},\"returns\":{\"amountIn\":\"The amount of the input token\"}},\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"details\":\"In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\",\"params\":{\"amount0Delta\":\"The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.\",\"amount1Delta\":\"The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.\",\"data\":\"Any data passed through by the caller via the IUniswapV3PoolActions#swap call\"}}},\"title\":\"Router token swapping functionality\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"exactInput((bytes,address,uint256,uint256,uint256))\":{\"notice\":\"Swaps `amountIn` of one token for as much as possible of another along the specified path\"},\"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"notice\":\"Swaps `amountIn` of one token for as much as possible of another token\"},\"exactOutput((bytes,address,uint256,uint256,uint256))\":{\"notice\":\"Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\"},\"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"notice\":\"Swaps as little as possible of one token for `amountOut` of another token\"},\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"notice\":\"Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\"}},\"notice\":\"Functions for swapping tokens via Uniswap V3\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":\"ISwapRouter\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]},\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"keccak256\":\"0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53\",\"dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"exactInput((bytes,address,uint256,uint256,uint256))": {
								"notice": "Swaps `amountIn` of one token for as much as possible of another along the specified path"
							},
							"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": {
								"notice": "Swaps `amountIn` of one token for as much as possible of another token"
							},
							"exactOutput((bytes,address,uint256,uint256,uint256))": {
								"notice": "Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)"
							},
							"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": {
								"notice": "Swaps as little as possible of one token for `amountOut` of another token"
							},
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"notice": "Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap."
							}
						},
						"notice": "Functions for swapping tokens via Uniswap V3",
						"version": 1
					}
				}
			},
			"contracts/AtomicArbitrage/benchmark.sol": {
				"Arbitrage": {
					"abi": [
						{
							"inputs": [],
							"name": "TIGER",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"name": "doArbitrage",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "swapRouter",
							"outputs": [
								{
									"internalType": "contract IV3SwapRouter",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/AtomicArbitrage/benchmark.sol\":295:3134  contract Arbitrage {... */\n  mstore(0x40, 0xa0)\n    /* \"contracts/AtomicArbitrage/benchmark.sol\":405:447  0x3bFA4769FB09eefC5a80d6E87c3B9C650f7Ae48E */\n  0x3bfa4769fb09eefc5a80d6e87c3b9c650f7ae48e\n    /* \"contracts/AtomicArbitrage/benchmark.sol\":615:685  IV3SwapRouter public immutable swapRouter = IV3SwapRouter(SWAP_ROUTER) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  swap1\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n    /* \"contracts/AtomicArbitrage/benchmark.sol\":295:3134  contract Arbitrage {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0xd2483bf6dbbdac2be2b685a2afd3e6196faede851e974fc0eec54dafa7363ba5\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/AtomicArbitrage/benchmark.sol\":295:3134  contract Arbitrage {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xa048600d\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xc31c9c07\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xf8bb9160\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/AtomicArbitrage/benchmark.sol\":692:3132  function doArbitrage(uint256 amountIn)... */\n    tag_3:\n      tag_6\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_7\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_7:\n      tag_9\n      jump\t// in\n    tag_6:\n      mload(0x40)\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/AtomicArbitrage/benchmark.sol\":615:685  IV3SwapRouter public immutable swapRouter = IV3SwapRouter(SWAP_ROUTER) */\n    tag_4:\n      tag_12\n      tag_13\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      tag_14\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/AtomicArbitrage/benchmark.sol\":534:608  address public constant TIGER = 0xE0Ca845dC9Cb425970F9D4F88771dE30058322B0 */\n    tag_5:\n      tag_16\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/AtomicArbitrage/benchmark.sol\":692:3132  function doArbitrage(uint256 amountIn)... */\n    tag_9:\n        /* \"contracts/AtomicArbitrage/benchmark.sol\":765:782  uint256 amountOut */\n      0x00\n        /* \"contracts/AtomicArbitrage/benchmark.sol\":977:1152  TransferHelper.safeTransferFrom(... */\n      tag_21\n        /* \"contracts/AtomicArbitrage/benchmark.sol\":486:528  0xD28627157e141FE80320b6022E9345a882bc71Bf */\n      0xd28627157e141fe80320b6022e9345a882bc71bf\n        /* \"contracts/AtomicArbitrage/benchmark.sol\":1050:1060  msg.sender */\n      caller\n        /* \"contracts/AtomicArbitrage/benchmark.sol\":1092:1096  this */\n      address\n        /* \"contracts/AtomicArbitrage/benchmark.sol\":1124:1132  amountIn */\n      dup6\n        /* \"contracts/AtomicArbitrage/benchmark.sol\":977:1008  TransferHelper.safeTransferFrom */\n      tag_22\n        /* \"contracts/AtomicArbitrage/benchmark.sol\":977:1152  TransferHelper.safeTransferFrom(... */\n      jump\t// in\n    tag_21:\n        /* \"contracts/AtomicArbitrage/benchmark.sol\":1218:1281  TransferHelper.safeApprove(LUSD, address(swapRouter), amountIn) */\n      tag_23\n        /* \"contracts/AtomicArbitrage/benchmark.sol\":486:528  0xD28627157e141FE80320b6022E9345a882bc71Bf */\n      0xd28627157e141fe80320b6022e9345a882bc71bf\n        /* \"contracts/AtomicArbitrage/benchmark.sol\":1259:1269  swapRouter */\n      immutable(\"0xd2483bf6dbbdac2be2b685a2afd3e6196faede851e974fc0eec54dafa7363ba5\")\n        /* \"contracts/AtomicArbitrage/benchmark.sol\":1272:1280  amountIn */\n      dup5\n        /* \"contracts/AtomicArbitrage/benchmark.sol\":1218:1244  TransferHelper.safeApprove */\n      tag_24\n        /* \"contracts/AtomicArbitrage/benchmark.sol\":1218:1281  TransferHelper.safeApprove(LUSD, address(swapRouter), amountIn) */\n      jump\t// in\n    tag_23:\n        /* \"contracts/AtomicArbitrage/benchmark.sol\":1386:1436  IV3SwapRouter.ExactInputSingleParams memory params */\n      0x00\n        /* \"contracts/AtomicArbitrage/benchmark.sol\":1439:1822  IV3SwapRouter... */\n      mload(0x40)\n      dup1\n      0xe0\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/AtomicArbitrage/benchmark.sol\":486:528  0xD28627157e141FE80320b6022E9345a882bc71Bf */\n      0xd28627157e141fe80320b6022e9345a882bc71bf\n        /* \"contracts/AtomicArbitrage/benchmark.sol\":1439:1822  IV3SwapRouter... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/AtomicArbitrage/benchmark.sol\":566:608  0xE0Ca845dC9Cb425970F9D4F88771dE30058322B0 */\n      0xe0ca845dc9cb425970f9d4f88771de30058322b0\n        /* \"contracts/AtomicArbitrage/benchmark.sol\":1439:1822  IV3SwapRouter... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/AtomicArbitrage/benchmark.sol\":1576:1579  500 */\n      0x01f4\n        /* \"contracts/AtomicArbitrage/benchmark.sol\":1439:1822  IV3SwapRouter... */\n      0xffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/AtomicArbitrage/benchmark.sol\":1659:1663  this */\n      address\n        /* \"contracts/AtomicArbitrage/benchmark.sol\":1439:1822  IV3SwapRouter... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/AtomicArbitrage/benchmark.sol\":1724:1732  amountIn */\n      dup5\n        /* \"contracts/AtomicArbitrage/benchmark.sol\":1439:1822  IV3SwapRouter... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/AtomicArbitrage/benchmark.sol\":1768:1769  0 */\n      0x00\n        /* \"contracts/AtomicArbitrage/benchmark.sol\":1439:1822  IV3SwapRouter... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/AtomicArbitrage/benchmark.sol\":1806:1807  0 */\n      0x00\n        /* \"contracts/AtomicArbitrage/benchmark.sol\":1439:1822  IV3SwapRouter... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n        /* \"contracts/AtomicArbitrage/benchmark.sol\":1386:1822  IV3SwapRouter.ExactInputSingleParams memory params = IV3SwapRouter... */\n      swap1\n      pop\n        /* \"contracts/AtomicArbitrage/benchmark.sol\":2020:2038  uint256 amountOut1 */\n      0x00\n        /* \"contracts/AtomicArbitrage/benchmark.sol\":2041:2051  swapRouter */\n      immutable(\"0xd2483bf6dbbdac2be2b685a2afd3e6196faede851e974fc0eec54dafa7363ba5\")\n        /* \"contracts/AtomicArbitrage/benchmark.sol\":2041:2068  swapRouter.exactInputSingle */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x04e45aaf\n        /* \"contracts/AtomicArbitrage/benchmark.sol\":2069:2075  params */\n      dup4\n        /* \"contracts/AtomicArbitrage/benchmark.sol\":2041:2076  swapRouter.exactInputSingle(params) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_28\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_28:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n        /* \"contracts/AtomicArbitrage/benchmark.sol\":2020:2076  uint256 amountOut1 = swapRouter.exactInputSingle(params) */\n      swap1\n      pop\n        /* \"contracts/AtomicArbitrage/benchmark.sol\":2147:2211  TransferHelper.safeApprove(TIGER, address(swapRouter), MAX_UINT) */\n      tag_31\n        /* \"contracts/AtomicArbitrage/benchmark.sol\":566:608  0xE0Ca845dC9Cb425970F9D4F88771dE30058322B0 */\n      0xe0ca845dc9cb425970f9d4f88771de30058322b0\n        /* \"contracts/AtomicArbitrage/benchmark.sol\":2189:2199  swapRouter */\n      immutable(\"0xd2483bf6dbbdac2be2b685a2afd3e6196faede851e974fc0eec54dafa7363ba5\")\n        /* \"contracts/AtomicArbitrage/benchmark.sol\":349:359  2**256 - 1 */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"contracts/AtomicArbitrage/benchmark.sol\":2147:2173  TransferHelper.safeApprove */\n      tag_24\n        /* \"contracts/AtomicArbitrage/benchmark.sol\":2147:2211  TransferHelper.safeApprove(TIGER, address(swapRouter), MAX_UINT) */\n      jump\t// in\n    tag_31:\n        /* \"contracts/AtomicArbitrage/benchmark.sol\":2318:2369  IV3SwapRouter.ExactInputSingleParams memory params2 */\n      0x00\n        /* \"contracts/AtomicArbitrage/benchmark.sol\":2372:3000  IV3SwapRouter... */\n      mload(0x40)\n      dup1\n      0xe0\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/AtomicArbitrage/benchmark.sol\":566:608  0xE0Ca845dC9Cb425970F9D4F88771dE30058322B0 */\n      0xe0ca845dc9cb425970f9d4f88771de30058322b0\n        /* \"contracts/AtomicArbitrage/benchmark.sol\":2372:3000  IV3SwapRouter... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/AtomicArbitrage/benchmark.sol\":486:528  0xD28627157e141FE80320b6022E9345a882bc71Bf */\n      0xd28627157e141fe80320b6022e9345a882bc71bf\n        /* \"contracts/AtomicArbitrage/benchmark.sol\":2372:3000  IV3SwapRouter... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/AtomicArbitrage/benchmark.sol\":2509:2512  500 */\n      0x01f4\n        /* \"contracts/AtomicArbitrage/benchmark.sol\":2372:3000  IV3SwapRouter... */\n      0xffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/AtomicArbitrage/benchmark.sol\":2584:2594  msg.sender */\n      caller\n        /* \"contracts/AtomicArbitrage/benchmark.sol\":2372:3000  IV3SwapRouter... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/AtomicArbitrage/benchmark.sol\":2696:2706  amountOut1 */\n      dup4\n        /* \"contracts/AtomicArbitrage/benchmark.sol\":2372:3000  IV3SwapRouter... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/AtomicArbitrage/benchmark.sol\":2946:2947  0 */\n      0x00\n        /* \"contracts/AtomicArbitrage/benchmark.sol\":2372:3000  IV3SwapRouter... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/AtomicArbitrage/benchmark.sol\":2984:2985  0 */\n      0x00\n        /* \"contracts/AtomicArbitrage/benchmark.sol\":2372:3000  IV3SwapRouter... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n        /* \"contracts/AtomicArbitrage/benchmark.sol\":2318:3000  IV3SwapRouter.ExactInputSingleParams memory params2 = IV3SwapRouter... */\n      swap1\n      pop\n        /* \"contracts/AtomicArbitrage/benchmark.sol\":3089:3099  swapRouter */\n      immutable(\"0xd2483bf6dbbdac2be2b685a2afd3e6196faede851e974fc0eec54dafa7363ba5\")\n        /* \"contracts/AtomicArbitrage/benchmark.sol\":3089:3116  swapRouter.exactInputSingle */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x04e45aaf\n        /* \"contracts/AtomicArbitrage/benchmark.sol\":3117:3124  params2 */\n      dup3\n        /* \"contracts/AtomicArbitrage/benchmark.sol\":3089:3125  swapRouter.exactInputSingle(params2) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_32\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_32:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_34\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_34:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_35\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_35:\n        /* \"contracts/AtomicArbitrage/benchmark.sol\":3077:3125  amountOut = swapRouter.exactInputSingle(params2) */\n      swap4\n      pop\n        /* \"contracts/AtomicArbitrage/benchmark.sol\":788:3132  {... */\n      pop\n      pop\n      pop\n        /* \"contracts/AtomicArbitrage/benchmark.sol\":692:3132  function doArbitrage(uint256 amountIn)... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/AtomicArbitrage/benchmark.sol\":615:685  IV3SwapRouter public immutable swapRouter = IV3SwapRouter(SWAP_ROUTER) */\n    tag_13:\n      immutable(\"0xd2483bf6dbbdac2be2b685a2afd3e6196faede851e974fc0eec54dafa7363ba5\")\n      dup2\n      jump\t// out\n        /* \"contracts/AtomicArbitrage/benchmark.sol\":534:608  address public constant TIGER = 0xE0Ca845dC9Cb425970F9D4F88771dE30058322B0 */\n    tag_17:\n        /* \"contracts/AtomicArbitrage/benchmark.sol\":566:608  0xE0Ca845dC9Cb425970F9D4F88771dE30058322B0 */\n      0xe0ca845dc9cb425970f9d4f88771de30058322b0\n        /* \"contracts/AtomicArbitrage/benchmark.sol\":534:608  address public constant TIGER = 0xE0Ca845dC9Cb425970F9D4F88771dE30058322B0 */\n      dup2\n      jump\t// out\n        /* \"@uniswap/lib/contracts/libraries/TransferHelper.sol\":1096:1582  function safeTransferFrom(... */\n    tag_22:\n        /* \"@uniswap/lib/contracts/libraries/TransferHelper.sol\":1314:1326  bool success */\n      0x00\n        /* \"@uniswap/lib/contracts/libraries/TransferHelper.sol\":1328:1345  bytes memory data */\n      dup1\n        /* \"@uniswap/lib/contracts/libraries/TransferHelper.sol\":1349:1354  token */\n      dup6\n        /* \"@uniswap/lib/contracts/libraries/TransferHelper.sol\":1349:1359  token.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@uniswap/lib/contracts/libraries/TransferHelper.sol\":1383:1393  0x23b872dd */\n      0x23b872dd\n        /* \"@uniswap/lib/contracts/libraries/TransferHelper.sol\":1395:1399  from */\n      dup7\n        /* \"@uniswap/lib/contracts/libraries/TransferHelper.sol\":1401:1403  to */\n      dup7\n        /* \"@uniswap/lib/contracts/libraries/TransferHelper.sol\":1405:1410  value */\n      dup7\n        /* \"@uniswap/lib/contracts/libraries/TransferHelper.sol\":1360:1411  abi.encodeWithSelector(0x23b872dd, from, to, value) */\n      add(0x24, mload(0x40))\n      tag_37\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@uniswap/lib/contracts/libraries/TransferHelper.sol\":1349:1412  token.call(abi.encodeWithSelector(0x23b872dd, from, to, value)) */\n      mload(0x40)\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup7\n      gas\n      call\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_43\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_42)\n    tag_43:\n      0x60\n      swap2\n      pop\n    tag_42:\n      pop\n        /* \"@uniswap/lib/contracts/libraries/TransferHelper.sol\":1313:1412  (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0x23b872dd, from, to, value)) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@uniswap/lib/contracts/libraries/TransferHelper.sol\":1443:1450  success */\n      dup2\n        /* \"@uniswap/lib/contracts/libraries/TransferHelper.sol\":1443:1500  success && (data.length == 0 || abi.decode(data, (bool))) */\n      dup1\n      iszero\n      tag_44\n      jumpi\n      pop\n        /* \"@uniswap/lib/contracts/libraries/TransferHelper.sol\":1470:1471  0 */\n      0x00\n        /* \"@uniswap/lib/contracts/libraries/TransferHelper.sol\":1455:1459  data */\n      dup2\n        /* \"@uniswap/lib/contracts/libraries/TransferHelper.sol\":1455:1466  data.length */\n      mload\n        /* \"@uniswap/lib/contracts/libraries/TransferHelper.sol\":1455:1471  data.length == 0 */\n      eq\n        /* \"@uniswap/lib/contracts/libraries/TransferHelper.sol\":1455:1499  data.length == 0 || abi.decode(data, (bool)) */\n      dup1\n      tag_45\n      jumpi\n      pop\n        /* \"@uniswap/lib/contracts/libraries/TransferHelper.sol\":1486:1490  data */\n      dup1\n        /* \"@uniswap/lib/contracts/libraries/TransferHelper.sol\":1475:1499  abi.decode(data, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_46\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_46:\n        /* \"@uniswap/lib/contracts/libraries/TransferHelper.sol\":1455:1499  data.length == 0 || abi.decode(data, (bool)) */\n    tag_45:\n        /* \"@uniswap/lib/contracts/libraries/TransferHelper.sol\":1443:1500  success && (data.length == 0 || abi.decode(data, (bool))) */\n    tag_44:\n        /* \"@uniswap/lib/contracts/libraries/TransferHelper.sol\":1422:1575  require(... */\n      tag_48\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_49\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_48:\n        /* \"@uniswap/lib/contracts/libraries/TransferHelper.sol\":1225:1582  {... */\n      pop\n      pop\n        /* \"@uniswap/lib/contracts/libraries/TransferHelper.sol\":1096:1582  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@uniswap/lib/contracts/libraries/TransferHelper.sol\":212:646  function safeApprove(... */\n    tag_24:\n        /* \"@uniswap/lib/contracts/libraries/TransferHelper.sol\":390:402  bool success */\n      0x00\n        /* \"@uniswap/lib/contracts/libraries/TransferHelper.sol\":404:421  bytes memory data */\n      dup1\n        /* \"@uniswap/lib/contracts/libraries/TransferHelper.sol\":425:430  token */\n      dup5\n        /* \"@uniswap/lib/contracts/libraries/TransferHelper.sol\":425:435  token.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@uniswap/lib/contracts/libraries/TransferHelper.sol\":459:469  0x095ea7b3 */\n      0x095ea7b3\n        /* \"@uniswap/lib/contracts/libraries/TransferHelper.sol\":471:473  to */\n      dup6\n        /* \"@uniswap/lib/contracts/libraries/TransferHelper.sol\":475:480  value */\n      dup6\n        /* \"@uniswap/lib/contracts/libraries/TransferHelper.sol\":436:481  abi.encodeWithSelector(0x095ea7b3, to, value) */\n      add(0x24, mload(0x40))\n      tag_52\n      swap3\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@uniswap/lib/contracts/libraries/TransferHelper.sol\":425:482  token.call(abi.encodeWithSelector(0x095ea7b3, to, value)) */\n      mload(0x40)\n      tag_54\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_54:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup7\n      gas\n      call\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_57\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_56)\n    tag_57:\n      0x60\n      swap2\n      pop\n    tag_56:\n      pop\n        /* \"@uniswap/lib/contracts/libraries/TransferHelper.sol\":389:482  (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0x095ea7b3, to, value)) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@uniswap/lib/contracts/libraries/TransferHelper.sol\":513:520  success */\n      dup2\n        /* \"@uniswap/lib/contracts/libraries/TransferHelper.sol\":513:570  success && (data.length == 0 || abi.decode(data, (bool))) */\n      dup1\n      iszero\n      tag_58\n      jumpi\n      pop\n        /* \"@uniswap/lib/contracts/libraries/TransferHelper.sol\":540:541  0 */\n      0x00\n        /* \"@uniswap/lib/contracts/libraries/TransferHelper.sol\":525:529  data */\n      dup2\n        /* \"@uniswap/lib/contracts/libraries/TransferHelper.sol\":525:536  data.length */\n      mload\n        /* \"@uniswap/lib/contracts/libraries/TransferHelper.sol\":525:541  data.length == 0 */\n      eq\n        /* \"@uniswap/lib/contracts/libraries/TransferHelper.sol\":525:569  data.length == 0 || abi.decode(data, (bool)) */\n      dup1\n      tag_59\n      jumpi\n      pop\n        /* \"@uniswap/lib/contracts/libraries/TransferHelper.sol\":556:560  data */\n      dup1\n        /* \"@uniswap/lib/contracts/libraries/TransferHelper.sol\":545:569  abi.decode(data, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_60\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_60:\n        /* \"@uniswap/lib/contracts/libraries/TransferHelper.sol\":525:569  data.length == 0 || abi.decode(data, (bool)) */\n    tag_59:\n        /* \"@uniswap/lib/contracts/libraries/TransferHelper.sol\":513:570  success && (data.length == 0 || abi.decode(data, (bool))) */\n    tag_58:\n        /* \"@uniswap/lib/contracts/libraries/TransferHelper.sol\":492:639  require(... */\n      tag_61\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_62\n      swap1\n      tag_63\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_61:\n        /* \"@uniswap/lib/contracts/libraries/TransferHelper.sol\":314:646  {... */\n      pop\n      pop\n        /* \"@uniswap/lib/contracts/libraries/TransferHelper.sol\":212:646  function safeApprove(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_65:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_67:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_68:\n        /* \"#utility.yul\":490:514   */\n      tag_104\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_67\n      jump\t// in\n    tag_104:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_105\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      dup1\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_105:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_69:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_107\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_68\n      jump\t// in\n    tag_107:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:1019   */\n    tag_8:\n        /* \"#utility.yul\":749:755   */\n      0x00\n        /* \"#utility.yul\":798:800   */\n      0x20\n        /* \"#utility.yul\":786:795   */\n      dup3\n        /* \"#utility.yul\":777:784   */\n      dup5\n        /* \"#utility.yul\":773:796   */\n      sub\n        /* \"#utility.yul\":769:801   */\n      slt\n        /* \"#utility.yul\":766:885   */\n      iszero\n      tag_109\n      jumpi\n        /* \"#utility.yul\":804:883   */\n      tag_110\n      tag_65\n      jump\t// in\n    tag_110:\n        /* \"#utility.yul\":766:885   */\n    tag_109:\n        /* \"#utility.yul\":924:925   */\n      0x00\n        /* \"#utility.yul\":949:1002   */\n      tag_111\n        /* \"#utility.yul\":994:1001   */\n      dup5\n        /* \"#utility.yul\":985:991   */\n      dup3\n        /* \"#utility.yul\":974:983   */\n      dup6\n        /* \"#utility.yul\":970:992   */\n      add\n        /* \"#utility.yul\":949:1002   */\n      tag_69\n      jump\t// in\n    tag_111:\n        /* \"#utility.yul\":939:1002   */\n      swap2\n      pop\n        /* \"#utility.yul\":895:1012   */\n      pop\n        /* \"#utility.yul\":690:1019   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1025:1143   */\n    tag_70:\n        /* \"#utility.yul\":1112:1136   */\n      tag_113\n        /* \"#utility.yul\":1130:1135   */\n      dup2\n        /* \"#utility.yul\":1112:1136   */\n      tag_67\n      jump\t// in\n    tag_113:\n        /* \"#utility.yul\":1107:1110   */\n      dup3\n        /* \"#utility.yul\":1100:1137   */\n      mstore\n        /* \"#utility.yul\":1025:1143   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1149:1371   */\n    tag_11:\n        /* \"#utility.yul\":1242:1246   */\n      0x00\n        /* \"#utility.yul\":1280:1282   */\n      0x20\n        /* \"#utility.yul\":1269:1278   */\n      dup3\n        /* \"#utility.yul\":1265:1283   */\n      add\n        /* \"#utility.yul\":1257:1283   */\n      swap1\n      pop\n        /* \"#utility.yul\":1293:1364   */\n      tag_115\n        /* \"#utility.yul\":1361:1362   */\n      0x00\n        /* \"#utility.yul\":1350:1359   */\n      dup4\n        /* \"#utility.yul\":1346:1363   */\n      add\n        /* \"#utility.yul\":1337:1343   */\n      dup5\n        /* \"#utility.yul\":1293:1364   */\n      tag_70\n      jump\t// in\n    tag_115:\n        /* \"#utility.yul\":1149:1371   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1377:1503   */\n    tag_71:\n        /* \"#utility.yul\":1414:1421   */\n      0x00\n        /* \"#utility.yul\":1454:1496   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1447:1452   */\n      dup3\n        /* \"#utility.yul\":1443:1497   */\n      and\n        /* \"#utility.yul\":1432:1497   */\n      swap1\n      pop\n        /* \"#utility.yul\":1377:1503   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1509:1569   */\n    tag_72:\n        /* \"#utility.yul\":1537:1540   */\n      0x00\n        /* \"#utility.yul\":1558:1563   */\n      dup2\n        /* \"#utility.yul\":1551:1563   */\n      swap1\n      pop\n        /* \"#utility.yul\":1509:1569   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1575:1717   */\n    tag_73:\n        /* \"#utility.yul\":1625:1634   */\n      0x00\n        /* \"#utility.yul\":1658:1711   */\n      tag_119\n        /* \"#utility.yul\":1676:1710   */\n      tag_120\n        /* \"#utility.yul\":1685:1709   */\n      tag_121\n        /* \"#utility.yul\":1703:1708   */\n      dup5\n        /* \"#utility.yul\":1685:1709   */\n      tag_71\n      jump\t// in\n    tag_121:\n        /* \"#utility.yul\":1676:1710   */\n      tag_72\n      jump\t// in\n    tag_120:\n        /* \"#utility.yul\":1658:1711   */\n      tag_71\n      jump\t// in\n    tag_119:\n        /* \"#utility.yul\":1645:1711   */\n      swap1\n      pop\n        /* \"#utility.yul\":1575:1717   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1723:1849   */\n    tag_74:\n        /* \"#utility.yul\":1773:1782   */\n      0x00\n        /* \"#utility.yul\":1806:1843   */\n      tag_123\n        /* \"#utility.yul\":1837:1842   */\n      dup3\n        /* \"#utility.yul\":1806:1843   */\n      tag_73\n      jump\t// in\n    tag_123:\n        /* \"#utility.yul\":1793:1843   */\n      swap1\n      pop\n        /* \"#utility.yul\":1723:1849   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1855:2002   */\n    tag_75:\n        /* \"#utility.yul\":1926:1935   */\n      0x00\n        /* \"#utility.yul\":1959:1996   */\n      tag_125\n        /* \"#utility.yul\":1990:1995   */\n      dup3\n        /* \"#utility.yul\":1959:1996   */\n      tag_74\n      jump\t// in\n    tag_125:\n        /* \"#utility.yul\":1946:1996   */\n      swap1\n      pop\n        /* \"#utility.yul\":1855:2002   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2008:2181   */\n    tag_76:\n        /* \"#utility.yul\":2116:2174   */\n      tag_127\n        /* \"#utility.yul\":2168:2173   */\n      dup2\n        /* \"#utility.yul\":2116:2174   */\n      tag_75\n      jump\t// in\n    tag_127:\n        /* \"#utility.yul\":2111:2114   */\n      dup3\n        /* \"#utility.yul\":2104:2175   */\n      mstore\n        /* \"#utility.yul\":2008:2181   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2187:2451   */\n    tag_15:\n        /* \"#utility.yul\":2301:2305   */\n      0x00\n        /* \"#utility.yul\":2339:2341   */\n      0x20\n        /* \"#utility.yul\":2328:2337   */\n      dup3\n        /* \"#utility.yul\":2324:2342   */\n      add\n        /* \"#utility.yul\":2316:2342   */\n      swap1\n      pop\n        /* \"#utility.yul\":2352:2444   */\n      tag_129\n        /* \"#utility.yul\":2441:2442   */\n      0x00\n        /* \"#utility.yul\":2430:2439   */\n      dup4\n        /* \"#utility.yul\":2426:2443   */\n      add\n        /* \"#utility.yul\":2417:2423   */\n      dup5\n        /* \"#utility.yul\":2352:2444   */\n      tag_76\n      jump\t// in\n    tag_129:\n        /* \"#utility.yul\":2187:2451   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2457:2553   */\n    tag_77:\n        /* \"#utility.yul\":2494:2501   */\n      0x00\n        /* \"#utility.yul\":2523:2547   */\n      tag_131\n        /* \"#utility.yul\":2541:2546   */\n      dup3\n        /* \"#utility.yul\":2523:2547   */\n      tag_71\n      jump\t// in\n    tag_131:\n        /* \"#utility.yul\":2512:2547   */\n      swap1\n      pop\n        /* \"#utility.yul\":2457:2553   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2559:2677   */\n    tag_78:\n        /* \"#utility.yul\":2646:2670   */\n      tag_133\n        /* \"#utility.yul\":2664:2669   */\n      dup2\n        /* \"#utility.yul\":2646:2670   */\n      tag_77\n      jump\t// in\n    tag_133:\n        /* \"#utility.yul\":2641:2644   */\n      dup3\n        /* \"#utility.yul\":2634:2671   */\n      mstore\n        /* \"#utility.yul\":2559:2677   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2683:2905   */\n    tag_19:\n        /* \"#utility.yul\":2776:2780   */\n      0x00\n        /* \"#utility.yul\":2814:2816   */\n      0x20\n        /* \"#utility.yul\":2803:2812   */\n      dup3\n        /* \"#utility.yul\":2799:2817   */\n      add\n        /* \"#utility.yul\":2791:2817   */\n      swap1\n      pop\n        /* \"#utility.yul\":2827:2898   */\n      tag_135\n        /* \"#utility.yul\":2895:2896   */\n      0x00\n        /* \"#utility.yul\":2884:2893   */\n      dup4\n        /* \"#utility.yul\":2880:2897   */\n      add\n        /* \"#utility.yul\":2871:2877   */\n      dup5\n        /* \"#utility.yul\":2827:2898   */\n      tag_78\n      jump\t// in\n    tag_135:\n        /* \"#utility.yul\":2683:2905   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2911:3019   */\n    tag_79:\n        /* \"#utility.yul\":2988:3012   */\n      tag_137\n        /* \"#utility.yul\":3006:3011   */\n      dup2\n        /* \"#utility.yul\":2988:3012   */\n      tag_77\n      jump\t// in\n    tag_137:\n        /* \"#utility.yul\":2983:2986   */\n      dup3\n        /* \"#utility.yul\":2976:3013   */\n      mstore\n        /* \"#utility.yul\":2911:3019   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3025:3116   */\n    tag_80:\n        /* \"#utility.yul\":3061:3068   */\n      0x00\n        /* \"#utility.yul\":3101:3109   */\n      0xffffff\n        /* \"#utility.yul\":3094:3099   */\n      dup3\n        /* \"#utility.yul\":3090:3110   */\n      and\n        /* \"#utility.yul\":3079:3110   */\n      swap1\n      pop\n        /* \"#utility.yul\":3025:3116   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3122:3227   */\n    tag_81:\n        /* \"#utility.yul\":3197:3220   */\n      tag_140\n        /* \"#utility.yul\":3214:3219   */\n      dup2\n        /* \"#utility.yul\":3197:3220   */\n      tag_80\n      jump\t// in\n    tag_140:\n        /* \"#utility.yul\":3192:3195   */\n      dup3\n        /* \"#utility.yul\":3185:3221   */\n      mstore\n        /* \"#utility.yul\":3122:3227   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3233:3341   */\n    tag_82:\n        /* \"#utility.yul\":3310:3334   */\n      tag_142\n        /* \"#utility.yul\":3328:3333   */\n      dup2\n        /* \"#utility.yul\":3310:3334   */\n      tag_67\n      jump\t// in\n    tag_142:\n        /* \"#utility.yul\":3305:3308   */\n      dup3\n        /* \"#utility.yul\":3298:3335   */\n      mstore\n        /* \"#utility.yul\":3233:3341   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3347:3455   */\n    tag_83:\n        /* \"#utility.yul\":3424:3448   */\n      tag_144\n        /* \"#utility.yul\":3442:3447   */\n      dup2\n        /* \"#utility.yul\":3424:3448   */\n      tag_71\n      jump\t// in\n    tag_144:\n        /* \"#utility.yul\":3419:3422   */\n      dup3\n        /* \"#utility.yul\":3412:3449   */\n      mstore\n        /* \"#utility.yul\":3347:3455   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3559:5002   */\n    tag_84:\n        /* \"#utility.yul\":3734:3738   */\n      0xe0\n        /* \"#utility.yul\":3729:3732   */\n      dup3\n        /* \"#utility.yul\":3725:3739   */\n      add\n        /* \"#utility.yul\":3824:3828   */\n      0x00\n        /* \"#utility.yul\":3817:3822   */\n      dup3\n        /* \"#utility.yul\":3813:3829   */\n      add\n        /* \"#utility.yul\":3807:3830   */\n      mload\n        /* \"#utility.yul\":3843:3906   */\n      tag_146\n        /* \"#utility.yul\":3900:3904   */\n      0x00\n        /* \"#utility.yul\":3895:3898   */\n      dup6\n        /* \"#utility.yul\":3891:3905   */\n      add\n        /* \"#utility.yul\":3877:3889   */\n      dup3\n        /* \"#utility.yul\":3843:3906   */\n      tag_79\n      jump\t// in\n    tag_146:\n        /* \"#utility.yul\":3749:3916   */\n      pop\n        /* \"#utility.yul\":4002:4006   */\n      0x20\n        /* \"#utility.yul\":3995:4000   */\n      dup3\n        /* \"#utility.yul\":3991:4007   */\n      add\n        /* \"#utility.yul\":3985:4008   */\n      mload\n        /* \"#utility.yul\":4021:4084   */\n      tag_147\n        /* \"#utility.yul\":4078:4082   */\n      0x20\n        /* \"#utility.yul\":4073:4076   */\n      dup6\n        /* \"#utility.yul\":4069:4083   */\n      add\n        /* \"#utility.yul\":4055:4067   */\n      dup3\n        /* \"#utility.yul\":4021:4084   */\n      tag_79\n      jump\t// in\n    tag_147:\n        /* \"#utility.yul\":3926:4094   */\n      pop\n        /* \"#utility.yul\":4175:4179   */\n      0x40\n        /* \"#utility.yul\":4168:4173   */\n      dup3\n        /* \"#utility.yul\":4164:4180   */\n      add\n        /* \"#utility.yul\":4158:4181   */\n      mload\n        /* \"#utility.yul\":4194:4255   */\n      tag_148\n        /* \"#utility.yul\":4249:4253   */\n      0x40\n        /* \"#utility.yul\":4244:4247   */\n      dup6\n        /* \"#utility.yul\":4240:4254   */\n      add\n        /* \"#utility.yul\":4226:4238   */\n      dup3\n        /* \"#utility.yul\":4194:4255   */\n      tag_81\n      jump\t// in\n    tag_148:\n        /* \"#utility.yul\":4104:4265   */\n      pop\n        /* \"#utility.yul\":4352:4356   */\n      0x60\n        /* \"#utility.yul\":4345:4350   */\n      dup3\n        /* \"#utility.yul\":4341:4357   */\n      add\n        /* \"#utility.yul\":4335:4358   */\n      mload\n        /* \"#utility.yul\":4371:4434   */\n      tag_149\n        /* \"#utility.yul\":4428:4432   */\n      0x60\n        /* \"#utility.yul\":4423:4426   */\n      dup6\n        /* \"#utility.yul\":4419:4433   */\n      add\n        /* \"#utility.yul\":4405:4417   */\n      dup3\n        /* \"#utility.yul\":4371:4434   */\n      tag_79\n      jump\t// in\n    tag_149:\n        /* \"#utility.yul\":4275:4444   */\n      pop\n        /* \"#utility.yul\":4530:4534   */\n      0x80\n        /* \"#utility.yul\":4523:4528   */\n      dup3\n        /* \"#utility.yul\":4519:4535   */\n      add\n        /* \"#utility.yul\":4513:4536   */\n      mload\n        /* \"#utility.yul\":4549:4612   */\n      tag_150\n        /* \"#utility.yul\":4606:4610   */\n      0x80\n        /* \"#utility.yul\":4601:4604   */\n      dup6\n        /* \"#utility.yul\":4597:4611   */\n      add\n        /* \"#utility.yul\":4583:4595   */\n      dup3\n        /* \"#utility.yul\":4549:4612   */\n      tag_82\n      jump\t// in\n    tag_150:\n        /* \"#utility.yul\":4454:4622   */\n      pop\n        /* \"#utility.yul\":4716:4720   */\n      0xa0\n        /* \"#utility.yul\":4709:4714   */\n      dup3\n        /* \"#utility.yul\":4705:4721   */\n      add\n        /* \"#utility.yul\":4699:4722   */\n      mload\n        /* \"#utility.yul\":4735:4798   */\n      tag_151\n        /* \"#utility.yul\":4792:4796   */\n      0xa0\n        /* \"#utility.yul\":4787:4790   */\n      dup6\n        /* \"#utility.yul\":4783:4797   */\n      add\n        /* \"#utility.yul\":4769:4781   */\n      dup3\n        /* \"#utility.yul\":4735:4798   */\n      tag_82\n      jump\t// in\n    tag_151:\n        /* \"#utility.yul\":4632:4808   */\n      pop\n        /* \"#utility.yul\":4903:4907   */\n      0xc0\n        /* \"#utility.yul\":4896:4901   */\n      dup3\n        /* \"#utility.yul\":4892:4908   */\n      add\n        /* \"#utility.yul\":4886:4909   */\n      mload\n        /* \"#utility.yul\":4922:4985   */\n      tag_152\n        /* \"#utility.yul\":4979:4983   */\n      0xc0\n        /* \"#utility.yul\":4974:4977   */\n      dup6\n        /* \"#utility.yul\":4970:4984   */\n      add\n        /* \"#utility.yul\":4956:4968   */\n      dup3\n        /* \"#utility.yul\":4922:4985   */\n      tag_83\n      jump\t// in\n    tag_152:\n        /* \"#utility.yul\":4818:4995   */\n      pop\n        /* \"#utility.yul\":3703:5002   */\n      pop\n        /* \"#utility.yul\":3559:5002   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5008:5387   */\n    tag_26:\n        /* \"#utility.yul\":5179:5183   */\n      0x00\n        /* \"#utility.yul\":5217:5220   */\n      0xe0\n        /* \"#utility.yul\":5206:5215   */\n      dup3\n        /* \"#utility.yul\":5202:5221   */\n      add\n        /* \"#utility.yul\":5194:5221   */\n      swap1\n      pop\n        /* \"#utility.yul\":5231:5380   */\n      tag_154\n        /* \"#utility.yul\":5377:5378   */\n      0x00\n        /* \"#utility.yul\":5366:5375   */\n      dup4\n        /* \"#utility.yul\":5362:5379   */\n      add\n        /* \"#utility.yul\":5353:5359   */\n      dup5\n        /* \"#utility.yul\":5231:5380   */\n      tag_84\n      jump\t// in\n    tag_154:\n        /* \"#utility.yul\":5008:5387   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5393:5536   */\n    tag_85:\n        /* \"#utility.yul\":5450:5455   */\n      0x00\n        /* \"#utility.yul\":5481:5487   */\n      dup2\n        /* \"#utility.yul\":5475:5488   */\n      mload\n        /* \"#utility.yul\":5466:5488   */\n      swap1\n      pop\n        /* \"#utility.yul\":5497:5530   */\n      tag_156\n        /* \"#utility.yul\":5524:5529   */\n      dup2\n        /* \"#utility.yul\":5497:5530   */\n      tag_68\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":5393:5536   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5542:5893   */\n    tag_30:\n        /* \"#utility.yul\":5612:5618   */\n      0x00\n        /* \"#utility.yul\":5661:5663   */\n      0x20\n        /* \"#utility.yul\":5649:5658   */\n      dup3\n        /* \"#utility.yul\":5640:5647   */\n      dup5\n        /* \"#utility.yul\":5636:5659   */\n      sub\n        /* \"#utility.yul\":5632:5664   */\n      slt\n        /* \"#utility.yul\":5629:5748   */\n      iszero\n      tag_158\n      jumpi\n        /* \"#utility.yul\":5667:5746   */\n      tag_159\n      tag_65\n      jump\t// in\n    tag_159:\n        /* \"#utility.yul\":5629:5748   */\n    tag_158:\n        /* \"#utility.yul\":5787:5788   */\n      0x00\n        /* \"#utility.yul\":5812:5876   */\n      tag_160\n        /* \"#utility.yul\":5868:5875   */\n      dup5\n        /* \"#utility.yul\":5859:5865   */\n      dup3\n        /* \"#utility.yul\":5848:5857   */\n      dup6\n        /* \"#utility.yul\":5844:5866   */\n      add\n        /* \"#utility.yul\":5812:5876   */\n      tag_85\n      jump\t// in\n    tag_160:\n        /* \"#utility.yul\":5802:5876   */\n      swap2\n      pop\n        /* \"#utility.yul\":5758:5886   */\n      pop\n        /* \"#utility.yul\":5542:5893   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5899:6341   */\n    tag_38:\n        /* \"#utility.yul\":6048:6052   */\n      0x00\n        /* \"#utility.yul\":6086:6088   */\n      0x60\n        /* \"#utility.yul\":6075:6084   */\n      dup3\n        /* \"#utility.yul\":6071:6089   */\n      add\n        /* \"#utility.yul\":6063:6089   */\n      swap1\n      pop\n        /* \"#utility.yul\":6099:6170   */\n      tag_162\n        /* \"#utility.yul\":6167:6168   */\n      0x00\n        /* \"#utility.yul\":6156:6165   */\n      dup4\n        /* \"#utility.yul\":6152:6169   */\n      add\n        /* \"#utility.yul\":6143:6149   */\n      dup7\n        /* \"#utility.yul\":6099:6170   */\n      tag_78\n      jump\t// in\n    tag_162:\n        /* \"#utility.yul\":6180:6252   */\n      tag_163\n        /* \"#utility.yul\":6248:6250   */\n      0x20\n        /* \"#utility.yul\":6237:6246   */\n      dup4\n        /* \"#utility.yul\":6233:6251   */\n      add\n        /* \"#utility.yul\":6224:6230   */\n      dup6\n        /* \"#utility.yul\":6180:6252   */\n      tag_78\n      jump\t// in\n    tag_163:\n        /* \"#utility.yul\":6262:6334   */\n      tag_164\n        /* \"#utility.yul\":6330:6332   */\n      0x40\n        /* \"#utility.yul\":6319:6328   */\n      dup4\n        /* \"#utility.yul\":6315:6333   */\n      add\n        /* \"#utility.yul\":6306:6312   */\n      dup5\n        /* \"#utility.yul\":6262:6334   */\n      tag_70\n      jump\t// in\n    tag_164:\n        /* \"#utility.yul\":5899:6341   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6347:6445   */\n    tag_86:\n        /* \"#utility.yul\":6398:6404   */\n      0x00\n        /* \"#utility.yul\":6432:6437   */\n      dup2\n        /* \"#utility.yul\":6426:6438   */\n      mload\n        /* \"#utility.yul\":6416:6438   */\n      swap1\n      pop\n        /* \"#utility.yul\":6347:6445   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6451:6598   */\n    tag_87:\n        /* \"#utility.yul\":6552:6563   */\n      0x00\n        /* \"#utility.yul\":6589:6592   */\n      dup2\n        /* \"#utility.yul\":6574:6592   */\n      swap1\n      pop\n        /* \"#utility.yul\":6451:6598   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6604:6743   */\n    tag_88:\n        /* \"#utility.yul\":6693:6699   */\n      dup3\n        /* \"#utility.yul\":6688:6691   */\n      dup2\n        /* \"#utility.yul\":6683:6686   */\n      dup4\n        /* \"#utility.yul\":6677:6700   */\n      mcopy\n        /* \"#utility.yul\":6734:6735   */\n      0x00\n        /* \"#utility.yul\":6725:6731   */\n      dup4\n        /* \"#utility.yul\":6720:6723   */\n      dup4\n        /* \"#utility.yul\":6716:6732   */\n      add\n        /* \"#utility.yul\":6709:6736   */\n      mstore\n        /* \"#utility.yul\":6604:6743   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6749:7135   */\n    tag_89:\n        /* \"#utility.yul\":6853:6856   */\n      0x00\n        /* \"#utility.yul\":6881:6919   */\n      tag_169\n        /* \"#utility.yul\":6913:6918   */\n      dup3\n        /* \"#utility.yul\":6881:6919   */\n      tag_86\n      jump\t// in\n    tag_169:\n        /* \"#utility.yul\":6935:7023   */\n      tag_170\n        /* \"#utility.yul\":7016:7022   */\n      dup2\n        /* \"#utility.yul\":7011:7014   */\n      dup6\n        /* \"#utility.yul\":6935:7023   */\n      tag_87\n      jump\t// in\n    tag_170:\n        /* \"#utility.yul\":6928:7023   */\n      swap4\n      pop\n        /* \"#utility.yul\":7032:7097   */\n      tag_171\n        /* \"#utility.yul\":7090:7096   */\n      dup2\n        /* \"#utility.yul\":7085:7088   */\n      dup6\n        /* \"#utility.yul\":7078:7082   */\n      0x20\n        /* \"#utility.yul\":7071:7076   */\n      dup7\n        /* \"#utility.yul\":7067:7083   */\n      add\n        /* \"#utility.yul\":7032:7097   */\n      tag_88\n      jump\t// in\n    tag_171:\n        /* \"#utility.yul\":7122:7128   */\n      dup1\n        /* \"#utility.yul\":7117:7120   */\n      dup5\n        /* \"#utility.yul\":7113:7129   */\n      add\n        /* \"#utility.yul\":7106:7129   */\n      swap2\n      pop\n        /* \"#utility.yul\":6857:7135   */\n      pop\n        /* \"#utility.yul\":6749:7135   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7141:7412   */\n    tag_40:\n        /* \"#utility.yul\":7271:7274   */\n      0x00\n        /* \"#utility.yul\":7293:7386   */\n      tag_173\n        /* \"#utility.yul\":7382:7385   */\n      dup3\n        /* \"#utility.yul\":7373:7379   */\n      dup5\n        /* \"#utility.yul\":7293:7386   */\n      tag_89\n      jump\t// in\n    tag_173:\n        /* \"#utility.yul\":7286:7386   */\n      swap2\n      pop\n        /* \"#utility.yul\":7403:7406   */\n      dup2\n        /* \"#utility.yul\":7396:7406   */\n      swap1\n      pop\n        /* \"#utility.yul\":7141:7412   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7418:7508   */\n    tag_90:\n        /* \"#utility.yul\":7452:7459   */\n      0x00\n        /* \"#utility.yul\":7495:7500   */\n      dup2\n        /* \"#utility.yul\":7488:7501   */\n      iszero\n        /* \"#utility.yul\":7481:7502   */\n      iszero\n        /* \"#utility.yul\":7470:7502   */\n      swap1\n      pop\n        /* \"#utility.yul\":7418:7508   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7514:7630   */\n    tag_91:\n        /* \"#utility.yul\":7584:7605   */\n      tag_176\n        /* \"#utility.yul\":7599:7604   */\n      dup2\n        /* \"#utility.yul\":7584:7605   */\n      tag_90\n      jump\t// in\n    tag_176:\n        /* \"#utility.yul\":7577:7582   */\n      dup2\n        /* \"#utility.yul\":7574:7606   */\n      eq\n        /* \"#utility.yul\":7564:7624   */\n      tag_177\n      jumpi\n        /* \"#utility.yul\":7620:7621   */\n      0x00\n        /* \"#utility.yul\":7617:7618   */\n      dup1\n        /* \"#utility.yul\":7610:7622   */\n      revert\n        /* \"#utility.yul\":7564:7624   */\n    tag_177:\n        /* \"#utility.yul\":7514:7630   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7636:7773   */\n    tag_92:\n        /* \"#utility.yul\":7690:7695   */\n      0x00\n        /* \"#utility.yul\":7721:7727   */\n      dup2\n        /* \"#utility.yul\":7715:7728   */\n      mload\n        /* \"#utility.yul\":7706:7728   */\n      swap1\n      pop\n        /* \"#utility.yul\":7737:7767   */\n      tag_179\n        /* \"#utility.yul\":7761:7766   */\n      dup2\n        /* \"#utility.yul\":7737:7767   */\n      tag_91\n      jump\t// in\n    tag_179:\n        /* \"#utility.yul\":7636:7773   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7779:8124   */\n    tag_47:\n        /* \"#utility.yul\":7846:7852   */\n      0x00\n        /* \"#utility.yul\":7895:7897   */\n      0x20\n        /* \"#utility.yul\":7883:7892   */\n      dup3\n        /* \"#utility.yul\":7874:7881   */\n      dup5\n        /* \"#utility.yul\":7870:7893   */\n      sub\n        /* \"#utility.yul\":7866:7898   */\n      slt\n        /* \"#utility.yul\":7863:7982   */\n      iszero\n      tag_181\n      jumpi\n        /* \"#utility.yul\":7901:7980   */\n      tag_182\n      tag_65\n      jump\t// in\n    tag_182:\n        /* \"#utility.yul\":7863:7982   */\n    tag_181:\n        /* \"#utility.yul\":8021:8022   */\n      0x00\n        /* \"#utility.yul\":8046:8107   */\n      tag_183\n        /* \"#utility.yul\":8099:8106   */\n      dup5\n        /* \"#utility.yul\":8090:8096   */\n      dup3\n        /* \"#utility.yul\":8079:8088   */\n      dup6\n        /* \"#utility.yul\":8075:8097   */\n      add\n        /* \"#utility.yul\":8046:8107   */\n      tag_92\n      jump\t// in\n    tag_183:\n        /* \"#utility.yul\":8036:8107   */\n      swap2\n      pop\n        /* \"#utility.yul\":7992:8117   */\n      pop\n        /* \"#utility.yul\":7779:8124   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8130:8299   */\n    tag_93:\n        /* \"#utility.yul\":8214:8225   */\n      0x00\n        /* \"#utility.yul\":8248:8254   */\n      dup3\n        /* \"#utility.yul\":8243:8246   */\n      dup3\n        /* \"#utility.yul\":8236:8255   */\n      mstore\n        /* \"#utility.yul\":8288:8292   */\n      0x20\n        /* \"#utility.yul\":8283:8286   */\n      dup3\n        /* \"#utility.yul\":8279:8293   */\n      add\n        /* \"#utility.yul\":8264:8293   */\n      swap1\n      pop\n        /* \"#utility.yul\":8130:8299   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8305:8541   */\n    tag_94:\n        /* \"#utility.yul\":8445:8479   */\n      0x5472616e7366657248656c7065723a3a7472616e7366657246726f6d3a207472\n        /* \"#utility.yul\":8441:8442   */\n      0x00\n        /* \"#utility.yul\":8433:8439   */\n      dup3\n        /* \"#utility.yul\":8429:8443   */\n      add\n        /* \"#utility.yul\":8422:8480   */\n      mstore\n        /* \"#utility.yul\":8514:8533   */\n      0x616e7366657246726f6d206661696c6564000000000000000000000000000000\n        /* \"#utility.yul\":8509:8511   */\n      0x20\n        /* \"#utility.yul\":8501:8507   */\n      dup3\n        /* \"#utility.yul\":8497:8512   */\n      add\n        /* \"#utility.yul\":8490:8534   */\n      mstore\n        /* \"#utility.yul\":8305:8541   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8547:8913   */\n    tag_95:\n        /* \"#utility.yul\":8689:8692   */\n      0x00\n        /* \"#utility.yul\":8710:8777   */\n      tag_187\n        /* \"#utility.yul\":8774:8776   */\n      0x31\n        /* \"#utility.yul\":8769:8772   */\n      dup4\n        /* \"#utility.yul\":8710:8777   */\n      tag_93\n      jump\t// in\n    tag_187:\n        /* \"#utility.yul\":8703:8777   */\n      swap2\n      pop\n        /* \"#utility.yul\":8786:8879   */\n      tag_188\n        /* \"#utility.yul\":8875:8878   */\n      dup3\n        /* \"#utility.yul\":8786:8879   */\n      tag_94\n      jump\t// in\n    tag_188:\n        /* \"#utility.yul\":8904:8906   */\n      0x40\n        /* \"#utility.yul\":8899:8902   */\n      dup3\n        /* \"#utility.yul\":8895:8907   */\n      add\n        /* \"#utility.yul\":8888:8907   */\n      swap1\n      pop\n        /* \"#utility.yul\":8547:8913   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8919:9338   */\n    tag_50:\n        /* \"#utility.yul\":9085:9089   */\n      0x00\n        /* \"#utility.yul\":9123:9125   */\n      0x20\n        /* \"#utility.yul\":9112:9121   */\n      dup3\n        /* \"#utility.yul\":9108:9126   */\n      add\n        /* \"#utility.yul\":9100:9126   */\n      swap1\n      pop\n        /* \"#utility.yul\":9172:9181   */\n      dup2\n        /* \"#utility.yul\":9166:9170   */\n      dup2\n        /* \"#utility.yul\":9162:9182   */\n      sub\n        /* \"#utility.yul\":9158:9159   */\n      0x00\n        /* \"#utility.yul\":9147:9156   */\n      dup4\n        /* \"#utility.yul\":9143:9160   */\n      add\n        /* \"#utility.yul\":9136:9183   */\n      mstore\n        /* \"#utility.yul\":9200:9331   */\n      tag_190\n        /* \"#utility.yul\":9326:9330   */\n      dup2\n        /* \"#utility.yul\":9200:9331   */\n      tag_95\n      jump\t// in\n    tag_190:\n        /* \"#utility.yul\":9192:9331   */\n      swap1\n      pop\n        /* \"#utility.yul\":8919:9338   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9344:9676   */\n    tag_53:\n        /* \"#utility.yul\":9465:9469   */\n      0x00\n        /* \"#utility.yul\":9503:9505   */\n      0x40\n        /* \"#utility.yul\":9492:9501   */\n      dup3\n        /* \"#utility.yul\":9488:9506   */\n      add\n        /* \"#utility.yul\":9480:9506   */\n      swap1\n      pop\n        /* \"#utility.yul\":9516:9587   */\n      tag_192\n        /* \"#utility.yul\":9584:9585   */\n      0x00\n        /* \"#utility.yul\":9573:9582   */\n      dup4\n        /* \"#utility.yul\":9569:9586   */\n      add\n        /* \"#utility.yul\":9560:9566   */\n      dup6\n        /* \"#utility.yul\":9516:9587   */\n      tag_78\n      jump\t// in\n    tag_192:\n        /* \"#utility.yul\":9597:9669   */\n      tag_193\n        /* \"#utility.yul\":9665:9667   */\n      0x20\n        /* \"#utility.yul\":9654:9663   */\n      dup4\n        /* \"#utility.yul\":9650:9668   */\n      add\n        /* \"#utility.yul\":9641:9647   */\n      dup5\n        /* \"#utility.yul\":9597:9669   */\n      tag_70\n      jump\t// in\n    tag_193:\n        /* \"#utility.yul\":9344:9676   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9682:9912   */\n    tag_96:\n        /* \"#utility.yul\":9822:9856   */\n      0x5472616e7366657248656c7065723a3a73616665417070726f76653a20617070\n        /* \"#utility.yul\":9818:9819   */\n      0x00\n        /* \"#utility.yul\":9810:9816   */\n      dup3\n        /* \"#utility.yul\":9806:9820   */\n      add\n        /* \"#utility.yul\":9799:9857   */\n      mstore\n        /* \"#utility.yul\":9891:9904   */\n      0x726f7665206661696c6564000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9886:9888   */\n      0x20\n        /* \"#utility.yul\":9878:9884   */\n      dup3\n        /* \"#utility.yul\":9874:9889   */\n      add\n        /* \"#utility.yul\":9867:9905   */\n      mstore\n        /* \"#utility.yul\":9682:9912   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9918:10284   */\n    tag_97:\n        /* \"#utility.yul\":10060:10063   */\n      0x00\n        /* \"#utility.yul\":10081:10148   */\n      tag_196\n        /* \"#utility.yul\":10145:10147   */\n      0x2b\n        /* \"#utility.yul\":10140:10143   */\n      dup4\n        /* \"#utility.yul\":10081:10148   */\n      tag_93\n      jump\t// in\n    tag_196:\n        /* \"#utility.yul\":10074:10148   */\n      swap2\n      pop\n        /* \"#utility.yul\":10157:10250   */\n      tag_197\n        /* \"#utility.yul\":10246:10249   */\n      dup3\n        /* \"#utility.yul\":10157:10250   */\n      tag_96\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":10275:10277   */\n      0x40\n        /* \"#utility.yul\":10270:10273   */\n      dup3\n        /* \"#utility.yul\":10266:10278   */\n      add\n        /* \"#utility.yul\":10259:10278   */\n      swap1\n      pop\n        /* \"#utility.yul\":9918:10284   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10290:10709   */\n    tag_63:\n        /* \"#utility.yul\":10456:10460   */\n      0x00\n        /* \"#utility.yul\":10494:10496   */\n      0x20\n        /* \"#utility.yul\":10483:10492   */\n      dup3\n        /* \"#utility.yul\":10479:10497   */\n      add\n        /* \"#utility.yul\":10471:10497   */\n      swap1\n      pop\n        /* \"#utility.yul\":10543:10552   */\n      dup2\n        /* \"#utility.yul\":10537:10541   */\n      dup2\n        /* \"#utility.yul\":10533:10553   */\n      sub\n        /* \"#utility.yul\":10529:10530   */\n      0x00\n        /* \"#utility.yul\":10518:10527   */\n      dup4\n        /* \"#utility.yul\":10514:10531   */\n      add\n        /* \"#utility.yul\":10507:10554   */\n      mstore\n        /* \"#utility.yul\":10571:10702   */\n      tag_199\n        /* \"#utility.yul\":10697:10701   */\n      dup2\n        /* \"#utility.yul\":10571:10702   */\n      tag_97\n      jump\t// in\n    tag_199:\n        /* \"#utility.yul\":10563:10702   */\n      swap1\n      pop\n        /* \"#utility.yul\":10290:10709   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220c86ea7621f364a4de9d406f63a836d9324dcea3ff7a7e81b54c311bb594a9d9664736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60a0604052733bfa4769fb09eefc5a80d6e87c3b9c650f7ae48e73ffffffffffffffffffffffffffffffffffffffff1660809073ffffffffffffffffffffffffffffffffffffffff168152503480156055575f80fd5b50608051610bd06100895f395f818160ea015281816101cf015281816102820152818161038601526104290152610bd05ff3fe608060405234801561000f575f80fd5b506004361061003f575f3560e01c8063a048600d14610043578063c31c9c0714610073578063f8bb916014610091575b5f80fd5b61005d600480360381019061005891906106fd565b6100af565b60405161006a9190610737565b60405180910390f35b61007b610427565b60405161008891906107ca565b60405180910390f35b61009961044b565b6040516100a69190610803565b60405180910390f35b5f6100d073d28627157e141fe80320b6022e9345a882bc71bf333085610463565b61010f73d28627157e141fe80320b6022e9345a882bc71bf7f000000000000000000000000000000000000000000000000000000000000000084610596565b5f6040518060e0016040528073d28627157e141fe80320b6022e9345a882bc71bf73ffffffffffffffffffffffffffffffffffffffff16815260200173e0ca845dc9cb425970f9d4f88771de30058322b073ffffffffffffffffffffffffffffffffffffffff1681526020016101f462ffffff1681526020013073ffffffffffffffffffffffffffffffffffffffff1681526020018481526020015f81526020015f73ffffffffffffffffffffffffffffffffffffffff1681525090505f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166304e45aaf836040518263ffffffff1660e01b815260040161022691906108f2565b6020604051808303815f875af1158015610242573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610266919061091f565b90506102c773e0ca845dc9cb425970f9d4f88771de30058322b07f00000000000000000000000000000000000000000000000000000000000000007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff610596565b5f6040518060e0016040528073e0ca845dc9cb425970f9d4f88771de30058322b073ffffffffffffffffffffffffffffffffffffffff16815260200173d28627157e141fe80320b6022e9345a882bc71bf73ffffffffffffffffffffffffffffffffffffffff1681526020016101f462ffffff1681526020013373ffffffffffffffffffffffffffffffffffffffff1681526020018381526020015f81526020015f73ffffffffffffffffffffffffffffffffffffffff1681525090507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166304e45aaf826040518263ffffffff1660e01b81526004016103dd91906108f2565b6020604051808303815f875af11580156103f9573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061041d919061091f565b9350505050919050565b7f000000000000000000000000000000000000000000000000000000000000000081565b73e0ca845dc9cb425970f9d4f88771de30058322b081565b5f808573ffffffffffffffffffffffffffffffffffffffff166323b872dd8686866040516024016104969392919061094a565b6040516020818303038152906040529060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516104e491906109d1565b5f604051808303815f865af19150503d805f811461051d576040519150601f19603f3d011682016040523d82523d5f602084013e610522565b606091505b509150915081801561054f57505f8151148061054e57508080602001905181019061054d9190610a1c565b5b5b61058e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058590610ac7565b60405180910390fd5b505050505050565b5f808473ffffffffffffffffffffffffffffffffffffffff1663095ea7b385856040516024016105c7929190610ae5565b6040516020818303038152906040529060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505060405161061591906109d1565b5f604051808303815f865af19150503d805f811461064e576040519150601f19603f3d011682016040523d82523d5f602084013e610653565b606091505b509150915081801561068057505f8151148061067f57508080602001905181019061067e9190610a1c565b5b5b6106bf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106b690610b7c565b60405180910390fd5b5050505050565b5f80fd5b5f819050919050565b6106dc816106ca565b81146106e6575f80fd5b50565b5f813590506106f7816106d3565b92915050565b5f60208284031215610712576107116106c6565b5b5f61071f848285016106e9565b91505092915050565b610731816106ca565b82525050565b5f60208201905061074a5f830184610728565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f819050919050565b5f61079261078d61078884610750565b61076f565b610750565b9050919050565b5f6107a382610778565b9050919050565b5f6107b482610799565b9050919050565b6107c4816107aa565b82525050565b5f6020820190506107dd5f8301846107bb565b92915050565b5f6107ed82610750565b9050919050565b6107fd816107e3565b82525050565b5f6020820190506108165f8301846107f4565b92915050565b610825816107e3565b82525050565b5f62ffffff82169050919050565b6108428161082b565b82525050565b610851816106ca565b82525050565b61086081610750565b82525050565b60e082015f82015161087a5f85018261081c565b50602082015161088d602085018261081c565b5060408201516108a06040850182610839565b5060608201516108b3606085018261081c565b5060808201516108c66080850182610848565b5060a08201516108d960a0850182610848565b5060c08201516108ec60c0850182610857565b50505050565b5f60e0820190506109055f830184610866565b92915050565b5f81519050610919816106d3565b92915050565b5f60208284031215610934576109336106c6565b5b5f6109418482850161090b565b91505092915050565b5f60608201905061095d5f8301866107f4565b61096a60208301856107f4565b6109776040830184610728565b949350505050565b5f81519050919050565b5f81905092915050565b8281835e5f83830152505050565b5f6109ab8261097f565b6109b58185610989565b93506109c5818560208601610993565b80840191505092915050565b5f6109dc82846109a1565b915081905092915050565b5f8115159050919050565b6109fb816109e7565b8114610a05575f80fd5b50565b5f81519050610a16816109f2565b92915050565b5f60208284031215610a3157610a306106c6565b5b5f610a3e84828501610a08565b91505092915050565b5f82825260208201905092915050565b7f5472616e7366657248656c7065723a3a7472616e7366657246726f6d3a2074725f8201527f616e7366657246726f6d206661696c6564000000000000000000000000000000602082015250565b5f610ab1603183610a47565b9150610abc82610a57565b604082019050919050565b5f6020820190508181035f830152610ade81610aa5565b9050919050565b5f604082019050610af85f8301856107f4565b610b056020830184610728565b9392505050565b7f5472616e7366657248656c7065723a3a73616665417070726f76653a206170705f8201527f726f7665206661696c6564000000000000000000000000000000000000000000602082015250565b5f610b66602b83610a47565b9150610b7182610b0c565b604082019050919050565b5f6020820190508181035f830152610b9381610b5a565b905091905056fea2646970667358221220c86ea7621f364a4de9d406f63a836d9324dcea3ff7a7e81b54c311bb594a9d9664736f6c63430008190033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE PUSH20 0x3BFA4769FB09EEFC5A80D6E87C3B9C650F7AE48E PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP CALLVALUE DUP1 ISZERO PUSH1 0x55 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x80 MLOAD PUSH2 0xBD0 PUSH2 0x89 PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH1 0xEA ADD MSTORE DUP2 DUP2 PUSH2 0x1CF ADD MSTORE DUP2 DUP2 PUSH2 0x282 ADD MSTORE DUP2 DUP2 PUSH2 0x386 ADD MSTORE PUSH2 0x429 ADD MSTORE PUSH2 0xBD0 PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA048600D EQ PUSH2 0x43 JUMPI DUP1 PUSH4 0xC31C9C07 EQ PUSH2 0x73 JUMPI DUP1 PUSH4 0xF8BB9160 EQ PUSH2 0x91 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x5D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x58 SWAP2 SWAP1 PUSH2 0x6FD JUMP JUMPDEST PUSH2 0xAF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6A SWAP2 SWAP1 PUSH2 0x737 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7B PUSH2 0x427 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x88 SWAP2 SWAP1 PUSH2 0x7CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x99 PUSH2 0x44B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA6 SWAP2 SWAP1 PUSH2 0x803 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH2 0xD0 PUSH20 0xD28627157E141FE80320B6022E9345A882BC71BF CALLER ADDRESS DUP6 PUSH2 0x463 JUMP JUMPDEST PUSH2 0x10F PUSH20 0xD28627157E141FE80320B6022E9345A882BC71BF PUSH32 0x0 DUP5 PUSH2 0x596 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 PUSH20 0xD28627157E141FE80320B6022E9345A882BC71BF PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH20 0xE0CA845DC9CB425970F9D4F88771DE30058322B0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1F4 PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 POP PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x4E45AAF DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x226 SWAP2 SWAP1 PUSH2 0x8F2 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x242 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x266 SWAP2 SWAP1 PUSH2 0x91F JUMP JUMPDEST SWAP1 POP PUSH2 0x2C7 PUSH20 0xE0CA845DC9CB425970F9D4F88771DE30058322B0 PUSH32 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x596 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 PUSH20 0xE0CA845DC9CB425970F9D4F88771DE30058322B0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH20 0xD28627157E141FE80320B6022E9345A882BC71BF PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1F4 PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x4E45AAF DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3DD SWAP2 SWAP1 PUSH2 0x8F2 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3F9 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x41D SWAP2 SWAP1 PUSH2 0x91F JUMP JUMPDEST SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH20 0xE0CA845DC9CB425970F9D4F88771DE30058322B0 DUP2 JUMP JUMPDEST PUSH0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x496 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x94A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0x4E4 SWAP2 SWAP1 PUSH2 0x9D1 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x51D JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x522 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x54F JUMPI POP PUSH0 DUP2 MLOAD EQ DUP1 PUSH2 0x54E JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x54D SWAP2 SWAP1 PUSH2 0xA1C JUMP JUMPDEST JUMPDEST JUMPDEST PUSH2 0x58E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x585 SWAP1 PUSH2 0xAC7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x5C7 SWAP3 SWAP2 SWAP1 PUSH2 0xAE5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0x615 SWAP2 SWAP1 PUSH2 0x9D1 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x64E JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x653 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x680 JUMPI POP PUSH0 DUP2 MLOAD EQ DUP1 PUSH2 0x67F JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x67E SWAP2 SWAP1 PUSH2 0xA1C JUMP JUMPDEST JUMPDEST JUMPDEST PUSH2 0x6BF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B6 SWAP1 PUSH2 0xB7C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6DC DUP2 PUSH2 0x6CA JUMP JUMPDEST DUP2 EQ PUSH2 0x6E6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x6F7 DUP2 PUSH2 0x6D3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x712 JUMPI PUSH2 0x711 PUSH2 0x6C6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x71F DUP5 DUP3 DUP6 ADD PUSH2 0x6E9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x731 DUP2 PUSH2 0x6CA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x74A PUSH0 DUP4 ADD DUP5 PUSH2 0x728 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x792 PUSH2 0x78D PUSH2 0x788 DUP5 PUSH2 0x750 JUMP JUMPDEST PUSH2 0x76F JUMP JUMPDEST PUSH2 0x750 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x7A3 DUP3 PUSH2 0x778 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x7B4 DUP3 PUSH2 0x799 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7C4 DUP2 PUSH2 0x7AA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x7DD PUSH0 DUP4 ADD DUP5 PUSH2 0x7BB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x7ED DUP3 PUSH2 0x750 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7FD DUP2 PUSH2 0x7E3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x816 PUSH0 DUP4 ADD DUP5 PUSH2 0x7F4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x825 DUP2 PUSH2 0x7E3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH3 0xFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x842 DUP2 PUSH2 0x82B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x851 DUP2 PUSH2 0x6CA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x860 DUP2 PUSH2 0x750 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0xE0 DUP3 ADD PUSH0 DUP3 ADD MLOAD PUSH2 0x87A PUSH0 DUP6 ADD DUP3 PUSH2 0x81C JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x88D PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x81C JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x8A0 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x839 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x8B3 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x81C JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x8C6 PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x848 JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0x8D9 PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0x848 JUMP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MLOAD PUSH2 0x8EC PUSH1 0xC0 DUP6 ADD DUP3 PUSH2 0x857 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x905 PUSH0 DUP4 ADD DUP5 PUSH2 0x866 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x919 DUP2 PUSH2 0x6D3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x934 JUMPI PUSH2 0x933 PUSH2 0x6C6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x941 DUP5 DUP3 DUP6 ADD PUSH2 0x90B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x95D PUSH0 DUP4 ADD DUP7 PUSH2 0x7F4 JUMP JUMPDEST PUSH2 0x96A PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x7F4 JUMP JUMPDEST PUSH2 0x977 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x728 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x9AB DUP3 PUSH2 0x97F JUMP JUMPDEST PUSH2 0x9B5 DUP2 DUP6 PUSH2 0x989 JUMP JUMPDEST SWAP4 POP PUSH2 0x9C5 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x993 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x9DC DUP3 DUP5 PUSH2 0x9A1 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9FB DUP2 PUSH2 0x9E7 JUMP JUMPDEST DUP2 EQ PUSH2 0xA05 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xA16 DUP2 PUSH2 0x9F2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA31 JUMPI PUSH2 0xA30 PUSH2 0x6C6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xA3E DUP5 DUP3 DUP6 ADD PUSH2 0xA08 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5472616E7366657248656C7065723A3A7472616E7366657246726F6D3A207472 PUSH0 DUP3 ADD MSTORE PUSH32 0x616E7366657246726F6D206661696C6564000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xAB1 PUSH1 0x31 DUP4 PUSH2 0xA47 JUMP JUMPDEST SWAP2 POP PUSH2 0xABC DUP3 PUSH2 0xA57 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xADE DUP2 PUSH2 0xAA5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xAF8 PUSH0 DUP4 ADD DUP6 PUSH2 0x7F4 JUMP JUMPDEST PUSH2 0xB05 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x728 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x5472616E7366657248656C7065723A3A73616665417070726F76653A20617070 PUSH0 DUP3 ADD MSTORE PUSH32 0x726F7665206661696C6564000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xB66 PUSH1 0x2B DUP4 PUSH2 0xA47 JUMP JUMPDEST SWAP2 POP PUSH2 0xB71 DUP3 PUSH2 0xB0C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xB93 DUP2 PUSH2 0xB5A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC8 PUSH15 0xA7621F364A4DE9D406F63A836D9324 0xDC 0xEA EXTCODEHASH 0xF7 0xA7 0xE8 SHL SLOAD 0xC3 GT 0xBB MSIZE BLOBBASEFEE SWAP14 SWAP7 PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ",
							"sourceMap": "295:2839:4:-:0;;;405:42;615:70;;;;;;;;;295:2839;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@TIGER_387": {
									"entryPoint": 1099,
									"id": 387,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@doArbitrage_486": {
									"entryPoint": 175,
									"id": 486,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@safeApprove_44": {
									"entryPoint": 1430,
									"id": 44,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_133": {
									"entryPoint": 1123,
									"id": 133,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@swapRouter_393": {
									"entryPoint": 1063,
									"id": 393,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 2568,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 1769,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 2315,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 2588,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 1789,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 2335,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address": {
									"entryPoint": 2076,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2036,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 2465,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_contract$_IV3SwapRouter_$251_to_t_address_fromStack": {
									"entryPoint": 1979,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_3f8faf98afe9344b6d4b0e75b0101259bf282914b3b5a9320c6918b6e27ede1c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2725,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_b4dd1eb4be82119fd3a99acfb5dd4c57591eb0ea309359b1af3d65a4460c7123_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2906,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_struct$_ExactInputSingleParams_$181_memory_ptr_to_t_struct$_ExactInputSingleParams_$181_memory_ptr_fromStack": {
									"entryPoint": 2150,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint160_to_t_uint160": {
									"entryPoint": 2135,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint24_to_t_uint24": {
									"entryPoint": 2105,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 2120,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 1832,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 2513,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2051,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 2378,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 2789,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IV3SwapRouter_$251__to_t_address__fromStack_reversed": {
									"entryPoint": 1994,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3f8faf98afe9344b6d4b0e75b0101259bf282914b3b5a9320c6918b6e27ede1c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2759,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b4dd1eb4be82119fd3a99acfb5dd4c57591eb0ea309359b1af3d65a4460c7123__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2940,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_struct$_ExactInputSingleParams_$181_memory_ptr__to_t_struct$_ExactInputSingleParams_$181_memory_ptr__fromStack_reversed": {
									"entryPoint": 2290,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 1847,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 2431,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 2441,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2631,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2019,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 2535,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1872,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint24": {
									"entryPoint": 2091,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1738,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IV3SwapRouter_$251_to_t_address": {
									"entryPoint": 1962,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 1945,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 1912,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 2451,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 1903,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1734,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_3f8faf98afe9344b6d4b0e75b0101259bf282914b3b5a9320c6918b6e27ede1c": {
									"entryPoint": 2647,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_b4dd1eb4be82119fd3a99acfb5dd4c57591eb0ea309359b1af3d65a4460c7123": {
									"entryPoint": 2828,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 2546,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1747,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:10712:5",
										"nodeType": "YulBlock",
										"src": "0:10712:5",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:5",
													"nodeType": "YulBlock",
													"src": "47:35:5",
													"statements": [
														{
															"nativeSrc": "57:19:5",
															"nodeType": "YulAssignment",
															"src": "57:19:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:5",
																		"nodeType": "YulLiteral",
																		"src": "73:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:5"
																},
																"nativeSrc": "67:9:5",
																"nodeType": "YulFunctionCall",
																"src": "67:9:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:5"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:5",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:5",
														"nodeType": "YulTypedName",
														"src": "40:6:5",
														"type": ""
													}
												],
												"src": "7:75:5"
											},
											{
												"body": {
													"nativeSrc": "177:28:5",
													"nodeType": "YulBlock",
													"src": "177:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:5",
																		"nodeType": "YulLiteral",
																		"src": "194:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:5",
																		"nodeType": "YulLiteral",
																		"src": "197:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:5"
																},
																"nativeSrc": "187:12:5",
																"nodeType": "YulFunctionCall",
																"src": "187:12:5"
															},
															"nativeSrc": "187:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:5"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:5"
											},
											{
												"body": {
													"nativeSrc": "300:28:5",
													"nodeType": "YulBlock",
													"src": "300:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:5",
																		"nodeType": "YulLiteral",
																		"src": "317:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:5",
																		"nodeType": "YulLiteral",
																		"src": "320:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:5"
																},
																"nativeSrc": "310:12:5",
																"nodeType": "YulFunctionCall",
																"src": "310:12:5"
															},
															"nativeSrc": "310:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:5"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:5"
											},
											{
												"body": {
													"nativeSrc": "379:32:5",
													"nodeType": "YulBlock",
													"src": "379:32:5",
													"statements": [
														{
															"nativeSrc": "389:16:5",
															"nodeType": "YulAssignment",
															"src": "389:16:5",
															"value": {
																"name": "value",
																"nativeSrc": "400:5:5",
																"nodeType": "YulIdentifier",
																"src": "400:5:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "334:77:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:5",
														"nodeType": "YulTypedName",
														"src": "361:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:5",
														"nodeType": "YulTypedName",
														"src": "371:7:5",
														"type": ""
													}
												],
												"src": "334:77:5"
											},
											{
												"body": {
													"nativeSrc": "460:79:5",
													"nodeType": "YulBlock",
													"src": "460:79:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "517:16:5",
																"nodeType": "YulBlock",
																"src": "517:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "526:1:5",
																					"nodeType": "YulLiteral",
																					"src": "526:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "529:1:5",
																					"nodeType": "YulLiteral",
																					"src": "529:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "519:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:5"
																			},
																			"nativeSrc": "519:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:5"
																		},
																		"nativeSrc": "519:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "483:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "508:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "490:17:5",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:5"
																				},
																				"nativeSrc": "490:24:5",
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "480:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:5"
																		},
																		"nativeSrc": "480:35:5",
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "473:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:5"
																},
																"nativeSrc": "473:43:5",
																"nodeType": "YulFunctionCall",
																"src": "473:43:5"
															},
															"nativeSrc": "470:63:5",
															"nodeType": "YulIf",
															"src": "470:63:5"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "417:122:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "453:5:5",
														"nodeType": "YulTypedName",
														"src": "453:5:5",
														"type": ""
													}
												],
												"src": "417:122:5"
											},
											{
												"body": {
													"nativeSrc": "597:87:5",
													"nodeType": "YulBlock",
													"src": "597:87:5",
													"statements": [
														{
															"nativeSrc": "607:29:5",
															"nodeType": "YulAssignment",
															"src": "607:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "629:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "616:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:5"
																},
																"nativeSrc": "616:20:5",
																"nodeType": "YulFunctionCall",
																"src": "616:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "607:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "672:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "645:26:5",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:5"
																},
																"nativeSrc": "645:33:5",
																"nodeType": "YulFunctionCall",
																"src": "645:33:5"
															},
															"nativeSrc": "645:33:5",
															"nodeType": "YulExpressionStatement",
															"src": "645:33:5"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "545:139:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "575:6:5",
														"nodeType": "YulTypedName",
														"src": "575:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "583:3:5",
														"nodeType": "YulTypedName",
														"src": "583:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "591:5:5",
														"nodeType": "YulTypedName",
														"src": "591:5:5",
														"type": ""
													}
												],
												"src": "545:139:5"
											},
											{
												"body": {
													"nativeSrc": "756:263:5",
													"nodeType": "YulBlock",
													"src": "756:263:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "802:83:5",
																"nodeType": "YulBlock",
																"src": "802:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "804:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "804:77:5"
																			},
																			"nativeSrc": "804:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "804:79:5"
																		},
																		"nativeSrc": "804:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "804:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "777:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "777:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "786:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "786:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "773:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "773:3:5"
																		},
																		"nativeSrc": "773:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "773:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "798:2:5",
																		"nodeType": "YulLiteral",
																		"src": "798:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "769:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "769:3:5"
																},
																"nativeSrc": "769:32:5",
																"nodeType": "YulFunctionCall",
																"src": "769:32:5"
															},
															"nativeSrc": "766:119:5",
															"nodeType": "YulIf",
															"src": "766:119:5"
														},
														{
															"nativeSrc": "895:117:5",
															"nodeType": "YulBlock",
															"src": "895:117:5",
															"statements": [
																{
																	"nativeSrc": "910:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "910:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "924:1:5",
																		"nodeType": "YulLiteral",
																		"src": "924:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "914:6:5",
																			"nodeType": "YulTypedName",
																			"src": "914:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "939:63:5",
																	"nodeType": "YulAssignment",
																	"src": "939:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "974:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "974:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "985:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "985:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "970:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "970:3:5"
																				},
																				"nativeSrc": "970:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "970:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "994:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "994:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "949:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "949:20:5"
																		},
																		"nativeSrc": "949:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "949:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "939:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "939:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "690:329:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "726:9:5",
														"nodeType": "YulTypedName",
														"src": "726:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "737:7:5",
														"nodeType": "YulTypedName",
														"src": "737:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "749:6:5",
														"nodeType": "YulTypedName",
														"src": "749:6:5",
														"type": ""
													}
												],
												"src": "690:329:5"
											},
											{
												"body": {
													"nativeSrc": "1090:53:5",
													"nodeType": "YulBlock",
													"src": "1090:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1107:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "1107:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1130:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "1130:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "1112:17:5",
																			"nodeType": "YulIdentifier",
																			"src": "1112:17:5"
																		},
																		"nativeSrc": "1112:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1112:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1100:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1100:6:5"
																},
																"nativeSrc": "1100:37:5",
																"nodeType": "YulFunctionCall",
																"src": "1100:37:5"
															},
															"nativeSrc": "1100:37:5",
															"nodeType": "YulExpressionStatement",
															"src": "1100:37:5"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "1025:118:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1078:5:5",
														"nodeType": "YulTypedName",
														"src": "1078:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1085:3:5",
														"nodeType": "YulTypedName",
														"src": "1085:3:5",
														"type": ""
													}
												],
												"src": "1025:118:5"
											},
											{
												"body": {
													"nativeSrc": "1247:124:5",
													"nodeType": "YulBlock",
													"src": "1247:124:5",
													"statements": [
														{
															"nativeSrc": "1257:26:5",
															"nodeType": "YulAssignment",
															"src": "1257:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1269:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1269:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1280:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1280:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1265:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1265:3:5"
																},
																"nativeSrc": "1265:18:5",
																"nodeType": "YulFunctionCall",
																"src": "1265:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1257:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "1257:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1337:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1337:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1350:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1350:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1361:1:5",
																				"nodeType": "YulLiteral",
																				"src": "1361:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1346:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1346:3:5"
																		},
																		"nativeSrc": "1346:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1346:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "1293:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "1293:43:5"
																},
																"nativeSrc": "1293:71:5",
																"nodeType": "YulFunctionCall",
																"src": "1293:71:5"
															},
															"nativeSrc": "1293:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "1293:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1149:222:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1219:9:5",
														"nodeType": "YulTypedName",
														"src": "1219:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1231:6:5",
														"nodeType": "YulTypedName",
														"src": "1231:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1242:4:5",
														"nodeType": "YulTypedName",
														"src": "1242:4:5",
														"type": ""
													}
												],
												"src": "1149:222:5"
											},
											{
												"body": {
													"nativeSrc": "1422:81:5",
													"nodeType": "YulBlock",
													"src": "1422:81:5",
													"statements": [
														{
															"nativeSrc": "1432:65:5",
															"nodeType": "YulAssignment",
															"src": "1432:65:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1447:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "1447:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1454:42:5",
																		"nodeType": "YulLiteral",
																		"src": "1454:42:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1443:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1443:3:5"
																},
																"nativeSrc": "1443:54:5",
																"nodeType": "YulFunctionCall",
																"src": "1443:54:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1432:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "1432:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1377:126:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1404:5:5",
														"nodeType": "YulTypedName",
														"src": "1404:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1414:7:5",
														"nodeType": "YulTypedName",
														"src": "1414:7:5",
														"type": ""
													}
												],
												"src": "1377:126:5"
											},
											{
												"body": {
													"nativeSrc": "1541:28:5",
													"nodeType": "YulBlock",
													"src": "1541:28:5",
													"statements": [
														{
															"nativeSrc": "1551:12:5",
															"nodeType": "YulAssignment",
															"src": "1551:12:5",
															"value": {
																"name": "value",
																"nativeSrc": "1558:5:5",
																"nodeType": "YulIdentifier",
																"src": "1558:5:5"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1551:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1551:3:5"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "1509:60:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1527:5:5",
														"nodeType": "YulTypedName",
														"src": "1527:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1537:3:5",
														"nodeType": "YulTypedName",
														"src": "1537:3:5",
														"type": ""
													}
												],
												"src": "1509:60:5"
											},
											{
												"body": {
													"nativeSrc": "1635:82:5",
													"nodeType": "YulBlock",
													"src": "1635:82:5",
													"statements": [
														{
															"nativeSrc": "1645:66:5",
															"nodeType": "YulAssignment",
															"src": "1645:66:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1703:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "1703:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "1685:17:5",
																					"nodeType": "YulIdentifier",
																					"src": "1685:17:5"
																				},
																				"nativeSrc": "1685:24:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1685:24:5"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "1676:8:5",
																			"nodeType": "YulIdentifier",
																			"src": "1676:8:5"
																		},
																		"nativeSrc": "1676:34:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1676:34:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1658:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "1658:17:5"
																},
																"nativeSrc": "1658:53:5",
																"nodeType": "YulFunctionCall",
																"src": "1658:53:5"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1645:9:5",
																	"nodeType": "YulIdentifier",
																	"src": "1645:9:5"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "1575:142:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1615:5:5",
														"nodeType": "YulTypedName",
														"src": "1615:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1625:9:5",
														"nodeType": "YulTypedName",
														"src": "1625:9:5",
														"type": ""
													}
												],
												"src": "1575:142:5"
											},
											{
												"body": {
													"nativeSrc": "1783:66:5",
													"nodeType": "YulBlock",
													"src": "1783:66:5",
													"statements": [
														{
															"nativeSrc": "1793:50:5",
															"nodeType": "YulAssignment",
															"src": "1793:50:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1837:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "1837:5:5"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "1806:30:5",
																	"nodeType": "YulIdentifier",
																	"src": "1806:30:5"
																},
																"nativeSrc": "1806:37:5",
																"nodeType": "YulFunctionCall",
																"src": "1806:37:5"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1793:9:5",
																	"nodeType": "YulIdentifier",
																	"src": "1793:9:5"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "1723:126:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1763:5:5",
														"nodeType": "YulTypedName",
														"src": "1763:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1773:9:5",
														"nodeType": "YulTypedName",
														"src": "1773:9:5",
														"type": ""
													}
												],
												"src": "1723:126:5"
											},
											{
												"body": {
													"nativeSrc": "1936:66:5",
													"nodeType": "YulBlock",
													"src": "1936:66:5",
													"statements": [
														{
															"nativeSrc": "1946:50:5",
															"nodeType": "YulAssignment",
															"src": "1946:50:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1990:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "1990:5:5"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "1959:30:5",
																	"nodeType": "YulIdentifier",
																	"src": "1959:30:5"
																},
																"nativeSrc": "1959:37:5",
																"nodeType": "YulFunctionCall",
																"src": "1959:37:5"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1946:9:5",
																	"nodeType": "YulIdentifier",
																	"src": "1946:9:5"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IV3SwapRouter_$251_to_t_address",
												"nativeSrc": "1855:147:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1916:5:5",
														"nodeType": "YulTypedName",
														"src": "1916:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1926:9:5",
														"nodeType": "YulTypedName",
														"src": "1926:9:5",
														"type": ""
													}
												],
												"src": "1855:147:5"
											},
											{
												"body": {
													"nativeSrc": "2094:87:5",
													"nodeType": "YulBlock",
													"src": "2094:87:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2111:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "2111:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2168:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "2168:5:5"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IV3SwapRouter_$251_to_t_address",
																			"nativeSrc": "2116:51:5",
																			"nodeType": "YulIdentifier",
																			"src": "2116:51:5"
																		},
																		"nativeSrc": "2116:58:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2116:58:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2104:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2104:6:5"
																},
																"nativeSrc": "2104:71:5",
																"nodeType": "YulFunctionCall",
																"src": "2104:71:5"
															},
															"nativeSrc": "2104:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "2104:71:5"
														}
													]
												},
												"name": "abi_encode_t_contract$_IV3SwapRouter_$251_to_t_address_fromStack",
												"nativeSrc": "2008:173:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2082:5:5",
														"nodeType": "YulTypedName",
														"src": "2082:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2089:3:5",
														"nodeType": "YulTypedName",
														"src": "2089:3:5",
														"type": ""
													}
												],
												"src": "2008:173:5"
											},
											{
												"body": {
													"nativeSrc": "2306:145:5",
													"nodeType": "YulBlock",
													"src": "2306:145:5",
													"statements": [
														{
															"nativeSrc": "2316:26:5",
															"nodeType": "YulAssignment",
															"src": "2316:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2328:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "2328:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2339:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2339:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2324:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2324:3:5"
																},
																"nativeSrc": "2324:18:5",
																"nodeType": "YulFunctionCall",
																"src": "2324:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2316:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "2316:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2417:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "2417:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2430:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2430:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2441:1:5",
																				"nodeType": "YulLiteral",
																				"src": "2441:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2426:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2426:3:5"
																		},
																		"nativeSrc": "2426:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2426:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IV3SwapRouter_$251_to_t_address_fromStack",
																	"nativeSrc": "2352:64:5",
																	"nodeType": "YulIdentifier",
																	"src": "2352:64:5"
																},
																"nativeSrc": "2352:92:5",
																"nodeType": "YulFunctionCall",
																"src": "2352:92:5"
															},
															"nativeSrc": "2352:92:5",
															"nodeType": "YulExpressionStatement",
															"src": "2352:92:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IV3SwapRouter_$251__to_t_address__fromStack_reversed",
												"nativeSrc": "2187:264:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2278:9:5",
														"nodeType": "YulTypedName",
														"src": "2278:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2290:6:5",
														"nodeType": "YulTypedName",
														"src": "2290:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2301:4:5",
														"nodeType": "YulTypedName",
														"src": "2301:4:5",
														"type": ""
													}
												],
												"src": "2187:264:5"
											},
											{
												"body": {
													"nativeSrc": "2502:51:5",
													"nodeType": "YulBlock",
													"src": "2502:51:5",
													"statements": [
														{
															"nativeSrc": "2512:35:5",
															"nodeType": "YulAssignment",
															"src": "2512:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2541:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "2541:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2523:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "2523:17:5"
																},
																"nativeSrc": "2523:24:5",
																"nodeType": "YulFunctionCall",
																"src": "2523:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2512:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "2512:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "2457:96:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2484:5:5",
														"nodeType": "YulTypedName",
														"src": "2484:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2494:7:5",
														"nodeType": "YulTypedName",
														"src": "2494:7:5",
														"type": ""
													}
												],
												"src": "2457:96:5"
											},
											{
												"body": {
													"nativeSrc": "2624:53:5",
													"nodeType": "YulBlock",
													"src": "2624:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2641:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "2641:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2664:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "2664:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "2646:17:5",
																			"nodeType": "YulIdentifier",
																			"src": "2646:17:5"
																		},
																		"nativeSrc": "2646:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2646:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2634:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2634:6:5"
																},
																"nativeSrc": "2634:37:5",
																"nodeType": "YulFunctionCall",
																"src": "2634:37:5"
															},
															"nativeSrc": "2634:37:5",
															"nodeType": "YulExpressionStatement",
															"src": "2634:37:5"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "2559:118:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2612:5:5",
														"nodeType": "YulTypedName",
														"src": "2612:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2619:3:5",
														"nodeType": "YulTypedName",
														"src": "2619:3:5",
														"type": ""
													}
												],
												"src": "2559:118:5"
											},
											{
												"body": {
													"nativeSrc": "2781:124:5",
													"nodeType": "YulBlock",
													"src": "2781:124:5",
													"statements": [
														{
															"nativeSrc": "2791:26:5",
															"nodeType": "YulAssignment",
															"src": "2791:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2803:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "2803:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2814:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2814:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2799:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2799:3:5"
																},
																"nativeSrc": "2799:18:5",
																"nodeType": "YulFunctionCall",
																"src": "2799:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2791:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "2791:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2871:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "2871:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2884:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2884:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2895:1:5",
																				"nodeType": "YulLiteral",
																				"src": "2895:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2880:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2880:3:5"
																		},
																		"nativeSrc": "2880:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2880:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "2827:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "2827:43:5"
																},
																"nativeSrc": "2827:71:5",
																"nodeType": "YulFunctionCall",
																"src": "2827:71:5"
															},
															"nativeSrc": "2827:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "2827:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "2683:222:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2753:9:5",
														"nodeType": "YulTypedName",
														"src": "2753:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2765:6:5",
														"nodeType": "YulTypedName",
														"src": "2765:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2776:4:5",
														"nodeType": "YulTypedName",
														"src": "2776:4:5",
														"type": ""
													}
												],
												"src": "2683:222:5"
											},
											{
												"body": {
													"nativeSrc": "2966:53:5",
													"nodeType": "YulBlock",
													"src": "2966:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2983:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "2983:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3006:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "3006:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "2988:17:5",
																			"nodeType": "YulIdentifier",
																			"src": "2988:17:5"
																		},
																		"nativeSrc": "2988:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2988:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2976:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2976:6:5"
																},
																"nativeSrc": "2976:37:5",
																"nodeType": "YulFunctionCall",
																"src": "2976:37:5"
															},
															"nativeSrc": "2976:37:5",
															"nodeType": "YulExpressionStatement",
															"src": "2976:37:5"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address",
												"nativeSrc": "2911:108:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2954:5:5",
														"nodeType": "YulTypedName",
														"src": "2954:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2961:3:5",
														"nodeType": "YulTypedName",
														"src": "2961:3:5",
														"type": ""
													}
												],
												"src": "2911:108:5"
											},
											{
												"body": {
													"nativeSrc": "3069:47:5",
													"nodeType": "YulBlock",
													"src": "3069:47:5",
													"statements": [
														{
															"nativeSrc": "3079:31:5",
															"nodeType": "YulAssignment",
															"src": "3079:31:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3094:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "3094:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3101:8:5",
																		"nodeType": "YulLiteral",
																		"src": "3101:8:5",
																		"type": "",
																		"value": "0xffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3090:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3090:3:5"
																},
																"nativeSrc": "3090:20:5",
																"nodeType": "YulFunctionCall",
																"src": "3090:20:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3079:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "3079:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint24",
												"nativeSrc": "3025:91:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3051:5:5",
														"nodeType": "YulTypedName",
														"src": "3051:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3061:7:5",
														"nodeType": "YulTypedName",
														"src": "3061:7:5",
														"type": ""
													}
												],
												"src": "3025:91:5"
											},
											{
												"body": {
													"nativeSrc": "3175:52:5",
													"nodeType": "YulBlock",
													"src": "3175:52:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3192:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "3192:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3214:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "3214:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint24",
																			"nativeSrc": "3197:16:5",
																			"nodeType": "YulIdentifier",
																			"src": "3197:16:5"
																		},
																		"nativeSrc": "3197:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3197:23:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3185:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3185:6:5"
																},
																"nativeSrc": "3185:36:5",
																"nodeType": "YulFunctionCall",
																"src": "3185:36:5"
															},
															"nativeSrc": "3185:36:5",
															"nodeType": "YulExpressionStatement",
															"src": "3185:36:5"
														}
													]
												},
												"name": "abi_encode_t_uint24_to_t_uint24",
												"nativeSrc": "3122:105:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3163:5:5",
														"nodeType": "YulTypedName",
														"src": "3163:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3170:3:5",
														"nodeType": "YulTypedName",
														"src": "3170:3:5",
														"type": ""
													}
												],
												"src": "3122:105:5"
											},
											{
												"body": {
													"nativeSrc": "3288:53:5",
													"nodeType": "YulBlock",
													"src": "3288:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3305:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "3305:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3328:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "3328:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3310:17:5",
																			"nodeType": "YulIdentifier",
																			"src": "3310:17:5"
																		},
																		"nativeSrc": "3310:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3310:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3298:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3298:6:5"
																},
																"nativeSrc": "3298:37:5",
																"nodeType": "YulFunctionCall",
																"src": "3298:37:5"
															},
															"nativeSrc": "3298:37:5",
															"nodeType": "YulExpressionStatement",
															"src": "3298:37:5"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nativeSrc": "3233:108:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3276:5:5",
														"nodeType": "YulTypedName",
														"src": "3276:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3283:3:5",
														"nodeType": "YulTypedName",
														"src": "3283:3:5",
														"type": ""
													}
												],
												"src": "3233:108:5"
											},
											{
												"body": {
													"nativeSrc": "3402:53:5",
													"nodeType": "YulBlock",
													"src": "3402:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3419:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "3419:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3442:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "3442:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint160",
																			"nativeSrc": "3424:17:5",
																			"nodeType": "YulIdentifier",
																			"src": "3424:17:5"
																		},
																		"nativeSrc": "3424:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3424:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3412:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3412:6:5"
																},
																"nativeSrc": "3412:37:5",
																"nodeType": "YulFunctionCall",
																"src": "3412:37:5"
															},
															"nativeSrc": "3412:37:5",
															"nodeType": "YulExpressionStatement",
															"src": "3412:37:5"
														}
													]
												},
												"name": "abi_encode_t_uint160_to_t_uint160",
												"nativeSrc": "3347:108:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3390:5:5",
														"nodeType": "YulTypedName",
														"src": "3390:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3397:3:5",
														"nodeType": "YulTypedName",
														"src": "3397:3:5",
														"type": ""
													}
												],
												"src": "3347:108:5"
											},
											{
												"body": {
													"nativeSrc": "3703:1299:5",
													"nodeType": "YulBlock",
													"src": "3703:1299:5",
													"statements": [
														{
															"nativeSrc": "3713:26:5",
															"nodeType": "YulVariableDeclaration",
															"src": "3713:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3729:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "3729:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3734:4:5",
																		"nodeType": "YulLiteral",
																		"src": "3734:4:5",
																		"type": "",
																		"value": "0xe0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3725:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3725:3:5"
																},
																"nativeSrc": "3725:14:5",
																"nodeType": "YulFunctionCall",
																"src": "3725:14:5"
															},
															"variables": [
																{
																	"name": "tail",
																	"nativeSrc": "3717:4:5",
																	"nodeType": "YulTypedName",
																	"src": "3717:4:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3749:167:5",
															"nodeType": "YulBlock",
															"src": "3749:167:5",
															"statements": [
																{
																	"nativeSrc": "3787:43:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3787:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3817:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "3817:5:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3824:4:5",
																						"nodeType": "YulLiteral",
																						"src": "3824:4:5",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3813:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "3813:3:5"
																				},
																				"nativeSrc": "3813:16:5",
																				"nodeType": "YulFunctionCall",
																				"src": "3813:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3807:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "3807:5:5"
																		},
																		"nativeSrc": "3807:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3807:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "3791:12:5",
																			"nodeType": "YulTypedName",
																			"src": "3791:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "3877:12:5",
																				"nodeType": "YulIdentifier",
																				"src": "3877:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "3895:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "3895:3:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3900:4:5",
																						"nodeType": "YulLiteral",
																						"src": "3900:4:5",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3891:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "3891:3:5"
																				},
																				"nativeSrc": "3891:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "3891:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nativeSrc": "3843:33:5",
																			"nodeType": "YulIdentifier",
																			"src": "3843:33:5"
																		},
																		"nativeSrc": "3843:63:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3843:63:5"
																	},
																	"nativeSrc": "3843:63:5",
																	"nodeType": "YulExpressionStatement",
																	"src": "3843:63:5"
																}
															]
														},
														{
															"nativeSrc": "3926:168:5",
															"nodeType": "YulBlock",
															"src": "3926:168:5",
															"statements": [
																{
																	"nativeSrc": "3965:43:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3965:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3995:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "3995:5:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4002:4:5",
																						"nodeType": "YulLiteral",
																						"src": "4002:4:5",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3991:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "3991:3:5"
																				},
																				"nativeSrc": "3991:16:5",
																				"nodeType": "YulFunctionCall",
																				"src": "3991:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3985:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "3985:5:5"
																		},
																		"nativeSrc": "3985:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3985:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "3969:12:5",
																			"nodeType": "YulTypedName",
																			"src": "3969:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "4055:12:5",
																				"nodeType": "YulIdentifier",
																				"src": "4055:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "4073:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "4073:3:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4078:4:5",
																						"nodeType": "YulLiteral",
																						"src": "4078:4:5",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4069:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "4069:3:5"
																				},
																				"nativeSrc": "4069:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4069:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nativeSrc": "4021:33:5",
																			"nodeType": "YulIdentifier",
																			"src": "4021:33:5"
																		},
																		"nativeSrc": "4021:63:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4021:63:5"
																	},
																	"nativeSrc": "4021:63:5",
																	"nodeType": "YulExpressionStatement",
																	"src": "4021:63:5"
																}
															]
														},
														{
															"nativeSrc": "4104:161:5",
															"nodeType": "YulBlock",
															"src": "4104:161:5",
															"statements": [
																{
																	"nativeSrc": "4138:43:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4138:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4168:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "4168:5:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4175:4:5",
																						"nodeType": "YulLiteral",
																						"src": "4175:4:5",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4164:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "4164:3:5"
																				},
																				"nativeSrc": "4164:16:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4164:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "4158:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "4158:5:5"
																		},
																		"nativeSrc": "4158:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4158:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "4142:12:5",
																			"nodeType": "YulTypedName",
																			"src": "4142:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "4226:12:5",
																				"nodeType": "YulIdentifier",
																				"src": "4226:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "4244:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "4244:3:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4249:4:5",
																						"nodeType": "YulLiteral",
																						"src": "4249:4:5",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4240:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "4240:3:5"
																				},
																				"nativeSrc": "4240:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4240:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint24_to_t_uint24",
																			"nativeSrc": "4194:31:5",
																			"nodeType": "YulIdentifier",
																			"src": "4194:31:5"
																		},
																		"nativeSrc": "4194:61:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4194:61:5"
																	},
																	"nativeSrc": "4194:61:5",
																	"nodeType": "YulExpressionStatement",
																	"src": "4194:61:5"
																}
															]
														},
														{
															"nativeSrc": "4275:169:5",
															"nodeType": "YulBlock",
															"src": "4275:169:5",
															"statements": [
																{
																	"nativeSrc": "4315:43:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4315:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4345:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "4345:5:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4352:4:5",
																						"nodeType": "YulLiteral",
																						"src": "4352:4:5",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4341:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "4341:3:5"
																				},
																				"nativeSrc": "4341:16:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4341:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "4335:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "4335:5:5"
																		},
																		"nativeSrc": "4335:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4335:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "4319:12:5",
																			"nodeType": "YulTypedName",
																			"src": "4319:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "4405:12:5",
																				"nodeType": "YulIdentifier",
																				"src": "4405:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "4423:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "4423:3:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4428:4:5",
																						"nodeType": "YulLiteral",
																						"src": "4428:4:5",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4419:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "4419:3:5"
																				},
																				"nativeSrc": "4419:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4419:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nativeSrc": "4371:33:5",
																			"nodeType": "YulIdentifier",
																			"src": "4371:33:5"
																		},
																		"nativeSrc": "4371:63:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4371:63:5"
																	},
																	"nativeSrc": "4371:63:5",
																	"nodeType": "YulExpressionStatement",
																	"src": "4371:63:5"
																}
															]
														},
														{
															"nativeSrc": "4454:168:5",
															"nodeType": "YulBlock",
															"src": "4454:168:5",
															"statements": [
																{
																	"nativeSrc": "4493:43:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4493:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4523:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "4523:5:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4530:4:5",
																						"nodeType": "YulLiteral",
																						"src": "4530:4:5",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4519:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "4519:3:5"
																				},
																				"nativeSrc": "4519:16:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4519:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "4513:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "4513:5:5"
																		},
																		"nativeSrc": "4513:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4513:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "4497:12:5",
																			"nodeType": "YulTypedName",
																			"src": "4497:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "4583:12:5",
																				"nodeType": "YulIdentifier",
																				"src": "4583:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "4601:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "4601:3:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4606:4:5",
																						"nodeType": "YulLiteral",
																						"src": "4606:4:5",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4597:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "4597:3:5"
																				},
																				"nativeSrc": "4597:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4597:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "4549:33:5",
																			"nodeType": "YulIdentifier",
																			"src": "4549:33:5"
																		},
																		"nativeSrc": "4549:63:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4549:63:5"
																	},
																	"nativeSrc": "4549:63:5",
																	"nodeType": "YulExpressionStatement",
																	"src": "4549:63:5"
																}
															]
														},
														{
															"nativeSrc": "4632:176:5",
															"nodeType": "YulBlock",
															"src": "4632:176:5",
															"statements": [
																{
																	"nativeSrc": "4679:43:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4679:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4709:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "4709:5:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4716:4:5",
																						"nodeType": "YulLiteral",
																						"src": "4716:4:5",
																						"type": "",
																						"value": "0xa0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4705:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "4705:3:5"
																				},
																				"nativeSrc": "4705:16:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4705:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "4699:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "4699:5:5"
																		},
																		"nativeSrc": "4699:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4699:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "4683:12:5",
																			"nodeType": "YulTypedName",
																			"src": "4683:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "4769:12:5",
																				"nodeType": "YulIdentifier",
																				"src": "4769:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "4787:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "4787:3:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4792:4:5",
																						"nodeType": "YulLiteral",
																						"src": "4792:4:5",
																						"type": "",
																						"value": "0xa0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4783:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "4783:3:5"
																				},
																				"nativeSrc": "4783:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4783:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "4735:33:5",
																			"nodeType": "YulIdentifier",
																			"src": "4735:33:5"
																		},
																		"nativeSrc": "4735:63:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4735:63:5"
																	},
																	"nativeSrc": "4735:63:5",
																	"nodeType": "YulExpressionStatement",
																	"src": "4735:63:5"
																}
															]
														},
														{
															"nativeSrc": "4818:177:5",
															"nodeType": "YulBlock",
															"src": "4818:177:5",
															"statements": [
																{
																	"nativeSrc": "4866:43:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4866:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4896:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "4896:5:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4903:4:5",
																						"nodeType": "YulLiteral",
																						"src": "4903:4:5",
																						"type": "",
																						"value": "0xc0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4892:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "4892:3:5"
																				},
																				"nativeSrc": "4892:16:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4892:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "4886:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "4886:5:5"
																		},
																		"nativeSrc": "4886:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4886:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "4870:12:5",
																			"nodeType": "YulTypedName",
																			"src": "4870:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "4956:12:5",
																				"nodeType": "YulIdentifier",
																				"src": "4956:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "4974:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "4974:3:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4979:4:5",
																						"nodeType": "YulLiteral",
																						"src": "4979:4:5",
																						"type": "",
																						"value": "0xc0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4970:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "4970:3:5"
																				},
																				"nativeSrc": "4970:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4970:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint160_to_t_uint160",
																			"nativeSrc": "4922:33:5",
																			"nodeType": "YulIdentifier",
																			"src": "4922:33:5"
																		},
																		"nativeSrc": "4922:63:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4922:63:5"
																	},
																	"nativeSrc": "4922:63:5",
																	"nodeType": "YulExpressionStatement",
																	"src": "4922:63:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_ExactInputSingleParams_$181_memory_ptr_to_t_struct$_ExactInputSingleParams_$181_memory_ptr_fromStack",
												"nativeSrc": "3559:1443:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3690:5:5",
														"nodeType": "YulTypedName",
														"src": "3690:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3697:3:5",
														"nodeType": "YulTypedName",
														"src": "3697:3:5",
														"type": ""
													}
												],
												"src": "3559:1443:5"
											},
											{
												"body": {
													"nativeSrc": "5184:203:5",
													"nodeType": "YulBlock",
													"src": "5184:203:5",
													"statements": [
														{
															"nativeSrc": "5194:27:5",
															"nodeType": "YulAssignment",
															"src": "5194:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5206:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "5206:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5217:3:5",
																		"nodeType": "YulLiteral",
																		"src": "5217:3:5",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5202:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5202:3:5"
																},
																"nativeSrc": "5202:19:5",
																"nodeType": "YulFunctionCall",
																"src": "5202:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5194:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "5194:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5353:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "5353:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5366:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5366:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5377:1:5",
																				"nodeType": "YulLiteral",
																				"src": "5377:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5362:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5362:3:5"
																		},
																		"nativeSrc": "5362:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5362:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_ExactInputSingleParams_$181_memory_ptr_to_t_struct$_ExactInputSingleParams_$181_memory_ptr_fromStack",
																	"nativeSrc": "5231:121:5",
																	"nodeType": "YulIdentifier",
																	"src": "5231:121:5"
																},
																"nativeSrc": "5231:149:5",
																"nodeType": "YulFunctionCall",
																"src": "5231:149:5"
															},
															"nativeSrc": "5231:149:5",
															"nodeType": "YulExpressionStatement",
															"src": "5231:149:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_ExactInputSingleParams_$181_memory_ptr__to_t_struct$_ExactInputSingleParams_$181_memory_ptr__fromStack_reversed",
												"nativeSrc": "5008:379:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5156:9:5",
														"nodeType": "YulTypedName",
														"src": "5156:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5168:6:5",
														"nodeType": "YulTypedName",
														"src": "5168:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5179:4:5",
														"nodeType": "YulTypedName",
														"src": "5179:4:5",
														"type": ""
													}
												],
												"src": "5008:379:5"
											},
											{
												"body": {
													"nativeSrc": "5456:80:5",
													"nodeType": "YulBlock",
													"src": "5456:80:5",
													"statements": [
														{
															"nativeSrc": "5466:22:5",
															"nodeType": "YulAssignment",
															"src": "5466:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5481:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "5481:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "5475:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "5475:5:5"
																},
																"nativeSrc": "5475:13:5",
																"nodeType": "YulFunctionCall",
																"src": "5475:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5466:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "5466:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5524:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "5524:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "5497:26:5",
																	"nodeType": "YulIdentifier",
																	"src": "5497:26:5"
																},
																"nativeSrc": "5497:33:5",
																"nodeType": "YulFunctionCall",
																"src": "5497:33:5"
															},
															"nativeSrc": "5497:33:5",
															"nodeType": "YulExpressionStatement",
															"src": "5497:33:5"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "5393:143:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "5434:6:5",
														"nodeType": "YulTypedName",
														"src": "5434:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5442:3:5",
														"nodeType": "YulTypedName",
														"src": "5442:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "5450:5:5",
														"nodeType": "YulTypedName",
														"src": "5450:5:5",
														"type": ""
													}
												],
												"src": "5393:143:5"
											},
											{
												"body": {
													"nativeSrc": "5619:274:5",
													"nodeType": "YulBlock",
													"src": "5619:274:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "5665:83:5",
																"nodeType": "YulBlock",
																"src": "5665:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5667:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "5667:77:5"
																			},
																			"nativeSrc": "5667:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "5667:79:5"
																		},
																		"nativeSrc": "5667:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "5667:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5640:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "5640:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5649:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5649:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5636:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5636:3:5"
																		},
																		"nativeSrc": "5636:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5636:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5661:2:5",
																		"nodeType": "YulLiteral",
																		"src": "5661:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5632:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5632:3:5"
																},
																"nativeSrc": "5632:32:5",
																"nodeType": "YulFunctionCall",
																"src": "5632:32:5"
															},
															"nativeSrc": "5629:119:5",
															"nodeType": "YulIf",
															"src": "5629:119:5"
														},
														{
															"nativeSrc": "5758:128:5",
															"nodeType": "YulBlock",
															"src": "5758:128:5",
															"statements": [
																{
																	"nativeSrc": "5773:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5773:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5787:1:5",
																		"nodeType": "YulLiteral",
																		"src": "5787:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5777:6:5",
																			"nodeType": "YulTypedName",
																			"src": "5777:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5802:74:5",
																	"nodeType": "YulAssignment",
																	"src": "5802:74:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5848:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "5848:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5859:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "5859:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5844:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "5844:3:5"
																				},
																				"nativeSrc": "5844:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "5844:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5868:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "5868:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "5812:31:5",
																			"nodeType": "YulIdentifier",
																			"src": "5812:31:5"
																		},
																		"nativeSrc": "5812:64:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5812:64:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5802:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "5802:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "5542:351:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5589:9:5",
														"nodeType": "YulTypedName",
														"src": "5589:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5600:7:5",
														"nodeType": "YulTypedName",
														"src": "5600:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5612:6:5",
														"nodeType": "YulTypedName",
														"src": "5612:6:5",
														"type": ""
													}
												],
												"src": "5542:351:5"
											},
											{
												"body": {
													"nativeSrc": "6053:288:5",
													"nodeType": "YulBlock",
													"src": "6053:288:5",
													"statements": [
														{
															"nativeSrc": "6063:26:5",
															"nodeType": "YulAssignment",
															"src": "6063:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6075:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "6075:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6086:2:5",
																		"nodeType": "YulLiteral",
																		"src": "6086:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6071:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "6071:3:5"
																},
																"nativeSrc": "6071:18:5",
																"nodeType": "YulFunctionCall",
																"src": "6071:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6063:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "6063:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6143:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "6143:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6156:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "6156:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6167:1:5",
																				"nodeType": "YulLiteral",
																				"src": "6167:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6152:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "6152:3:5"
																		},
																		"nativeSrc": "6152:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6152:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6099:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "6099:43:5"
																},
																"nativeSrc": "6099:71:5",
																"nodeType": "YulFunctionCall",
																"src": "6099:71:5"
															},
															"nativeSrc": "6099:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "6099:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "6224:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "6224:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6237:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "6237:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6248:2:5",
																				"nodeType": "YulLiteral",
																				"src": "6248:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6233:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "6233:3:5"
																		},
																		"nativeSrc": "6233:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6233:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6180:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "6180:43:5"
																},
																"nativeSrc": "6180:72:5",
																"nodeType": "YulFunctionCall",
																"src": "6180:72:5"
															},
															"nativeSrc": "6180:72:5",
															"nodeType": "YulExpressionStatement",
															"src": "6180:72:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "6306:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "6306:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6319:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "6319:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6330:2:5",
																				"nodeType": "YulLiteral",
																				"src": "6330:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6315:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "6315:3:5"
																		},
																		"nativeSrc": "6315:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6315:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6262:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "6262:43:5"
																},
																"nativeSrc": "6262:72:5",
																"nodeType": "YulFunctionCall",
																"src": "6262:72:5"
															},
															"nativeSrc": "6262:72:5",
															"nodeType": "YulExpressionStatement",
															"src": "6262:72:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "5899:442:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6009:9:5",
														"nodeType": "YulTypedName",
														"src": "6009:9:5",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6021:6:5",
														"nodeType": "YulTypedName",
														"src": "6021:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6029:6:5",
														"nodeType": "YulTypedName",
														"src": "6029:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6037:6:5",
														"nodeType": "YulTypedName",
														"src": "6037:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6048:4:5",
														"nodeType": "YulTypedName",
														"src": "6048:4:5",
														"type": ""
													}
												],
												"src": "5899:442:5"
											},
											{
												"body": {
													"nativeSrc": "6405:40:5",
													"nodeType": "YulBlock",
													"src": "6405:40:5",
													"statements": [
														{
															"nativeSrc": "6416:22:5",
															"nodeType": "YulAssignment",
															"src": "6416:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6432:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "6432:5:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "6426:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "6426:5:5"
																},
																"nativeSrc": "6426:12:5",
																"nodeType": "YulFunctionCall",
																"src": "6426:12:5"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "6416:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "6416:6:5"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "6347:98:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6388:5:5",
														"nodeType": "YulTypedName",
														"src": "6388:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "6398:6:5",
														"nodeType": "YulTypedName",
														"src": "6398:6:5",
														"type": ""
													}
												],
												"src": "6347:98:5"
											},
											{
												"body": {
													"nativeSrc": "6564:34:5",
													"nodeType": "YulBlock",
													"src": "6564:34:5",
													"statements": [
														{
															"nativeSrc": "6574:18:5",
															"nodeType": "YulAssignment",
															"src": "6574:18:5",
															"value": {
																"name": "pos",
																"nativeSrc": "6589:3:5",
																"nodeType": "YulIdentifier",
																"src": "6589:3:5"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "6574:11:5",
																	"nodeType": "YulIdentifier",
																	"src": "6574:11:5"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "6451:147:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6536:3:5",
														"nodeType": "YulTypedName",
														"src": "6536:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6541:6:5",
														"nodeType": "YulTypedName",
														"src": "6541:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "6552:11:5",
														"nodeType": "YulTypedName",
														"src": "6552:11:5",
														"type": ""
													}
												],
												"src": "6451:147:5"
											},
											{
												"body": {
													"nativeSrc": "6666:77:5",
													"nodeType": "YulBlock",
													"src": "6666:77:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "6683:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "6683:3:5"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "6688:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "6688:3:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6693:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "6693:6:5"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "6677:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "6677:5:5"
																},
																"nativeSrc": "6677:23:5",
																"nodeType": "YulFunctionCall",
																"src": "6677:23:5"
															},
															"nativeSrc": "6677:23:5",
															"nodeType": "YulExpressionStatement",
															"src": "6677:23:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "6720:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "6720:3:5"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "6725:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "6725:6:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6716:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "6716:3:5"
																		},
																		"nativeSrc": "6716:16:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6716:16:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6734:1:5",
																		"nodeType": "YulLiteral",
																		"src": "6734:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6709:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "6709:6:5"
																},
																"nativeSrc": "6709:27:5",
																"nodeType": "YulFunctionCall",
																"src": "6709:27:5"
															},
															"nativeSrc": "6709:27:5",
															"nodeType": "YulExpressionStatement",
															"src": "6709:27:5"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "6604:139:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "6648:3:5",
														"nodeType": "YulTypedName",
														"src": "6648:3:5",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "6653:3:5",
														"nodeType": "YulTypedName",
														"src": "6653:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6658:6:5",
														"nodeType": "YulTypedName",
														"src": "6658:6:5",
														"type": ""
													}
												],
												"src": "6604:139:5"
											},
											{
												"body": {
													"nativeSrc": "6857:278:5",
													"nodeType": "YulBlock",
													"src": "6857:278:5",
													"statements": [
														{
															"nativeSrc": "6867:52:5",
															"nodeType": "YulVariableDeclaration",
															"src": "6867:52:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6913:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "6913:5:5"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "6881:31:5",
																	"nodeType": "YulIdentifier",
																	"src": "6881:31:5"
																},
																"nativeSrc": "6881:38:5",
																"nodeType": "YulFunctionCall",
																"src": "6881:38:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "6871:6:5",
																	"nodeType": "YulTypedName",
																	"src": "6871:6:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6928:95:5",
															"nodeType": "YulAssignment",
															"src": "6928:95:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7011:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "7011:3:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7016:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "7016:6:5"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "6935:75:5",
																	"nodeType": "YulIdentifier",
																	"src": "6935:75:5"
																},
																"nativeSrc": "6935:88:5",
																"nodeType": "YulFunctionCall",
																"src": "6935:88:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6928:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "6928:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7071:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "7071:5:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7078:4:5",
																				"nodeType": "YulLiteral",
																				"src": "7078:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7067:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "7067:3:5"
																		},
																		"nativeSrc": "7067:16:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7067:16:5"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "7085:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "7085:3:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7090:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "7090:6:5"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "7032:34:5",
																	"nodeType": "YulIdentifier",
																	"src": "7032:34:5"
																},
																"nativeSrc": "7032:65:5",
																"nodeType": "YulFunctionCall",
																"src": "7032:65:5"
															},
															"nativeSrc": "7032:65:5",
															"nodeType": "YulExpressionStatement",
															"src": "7032:65:5"
														},
														{
															"nativeSrc": "7106:23:5",
															"nodeType": "YulAssignment",
															"src": "7106:23:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7117:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "7117:3:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7122:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "7122:6:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7113:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "7113:3:5"
																},
																"nativeSrc": "7113:16:5",
																"nodeType": "YulFunctionCall",
																"src": "7113:16:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7106:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "7106:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "6749:386:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6838:5:5",
														"nodeType": "YulTypedName",
														"src": "6838:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6845:3:5",
														"nodeType": "YulTypedName",
														"src": "6845:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6853:3:5",
														"nodeType": "YulTypedName",
														"src": "6853:3:5",
														"type": ""
													}
												],
												"src": "6749:386:5"
											},
											{
												"body": {
													"nativeSrc": "7275:137:5",
													"nodeType": "YulBlock",
													"src": "7275:137:5",
													"statements": [
														{
															"nativeSrc": "7286:100:5",
															"nodeType": "YulAssignment",
															"src": "7286:100:5",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7373:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "7373:6:5"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "7382:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "7382:3:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "7293:79:5",
																	"nodeType": "YulIdentifier",
																	"src": "7293:79:5"
																},
																"nativeSrc": "7293:93:5",
																"nodeType": "YulFunctionCall",
																"src": "7293:93:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7286:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "7286:3:5"
																}
															]
														},
														{
															"nativeSrc": "7396:10:5",
															"nodeType": "YulAssignment",
															"src": "7396:10:5",
															"value": {
																"name": "pos",
																"nativeSrc": "7403:3:5",
																"nodeType": "YulIdentifier",
																"src": "7403:3:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7396:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "7396:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "7141:271:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7254:3:5",
														"nodeType": "YulTypedName",
														"src": "7254:3:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7260:6:5",
														"nodeType": "YulTypedName",
														"src": "7260:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7271:3:5",
														"nodeType": "YulTypedName",
														"src": "7271:3:5",
														"type": ""
													}
												],
												"src": "7141:271:5"
											},
											{
												"body": {
													"nativeSrc": "7460:48:5",
													"nodeType": "YulBlock",
													"src": "7460:48:5",
													"statements": [
														{
															"nativeSrc": "7470:32:5",
															"nodeType": "YulAssignment",
															"src": "7470:32:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7495:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "7495:5:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "7488:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "7488:6:5"
																		},
																		"nativeSrc": "7488:13:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7488:13:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7481:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "7481:6:5"
																},
																"nativeSrc": "7481:21:5",
																"nodeType": "YulFunctionCall",
																"src": "7481:21:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "7470:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "7470:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "7418:90:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7442:5:5",
														"nodeType": "YulTypedName",
														"src": "7442:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "7452:7:5",
														"nodeType": "YulTypedName",
														"src": "7452:7:5",
														"type": ""
													}
												],
												"src": "7418:90:5"
											},
											{
												"body": {
													"nativeSrc": "7554:76:5",
													"nodeType": "YulBlock",
													"src": "7554:76:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "7608:16:5",
																"nodeType": "YulBlock",
																"src": "7608:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7617:1:5",
																					"nodeType": "YulLiteral",
																					"src": "7617:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7620:1:5",
																					"nodeType": "YulLiteral",
																					"src": "7620:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7610:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "7610:6:5"
																			},
																			"nativeSrc": "7610:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "7610:12:5"
																		},
																		"nativeSrc": "7610:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "7610:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7577:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "7577:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "7599:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "7599:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "7584:14:5",
																					"nodeType": "YulIdentifier",
																					"src": "7584:14:5"
																				},
																				"nativeSrc": "7584:21:5",
																				"nodeType": "YulFunctionCall",
																				"src": "7584:21:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "7574:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "7574:2:5"
																		},
																		"nativeSrc": "7574:32:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7574:32:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7567:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "7567:6:5"
																},
																"nativeSrc": "7567:40:5",
																"nodeType": "YulFunctionCall",
																"src": "7567:40:5"
															},
															"nativeSrc": "7564:60:5",
															"nodeType": "YulIf",
															"src": "7564:60:5"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "7514:116:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7547:5:5",
														"nodeType": "YulTypedName",
														"src": "7547:5:5",
														"type": ""
													}
												],
												"src": "7514:116:5"
											},
											{
												"body": {
													"nativeSrc": "7696:77:5",
													"nodeType": "YulBlock",
													"src": "7696:77:5",
													"statements": [
														{
															"nativeSrc": "7706:22:5",
															"nodeType": "YulAssignment",
															"src": "7706:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "7721:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "7721:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "7715:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "7715:5:5"
																},
																"nativeSrc": "7715:13:5",
																"nodeType": "YulFunctionCall",
																"src": "7715:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "7706:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "7706:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7761:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "7761:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "7737:23:5",
																	"nodeType": "YulIdentifier",
																	"src": "7737:23:5"
																},
																"nativeSrc": "7737:30:5",
																"nodeType": "YulFunctionCall",
																"src": "7737:30:5"
															},
															"nativeSrc": "7737:30:5",
															"nodeType": "YulExpressionStatement",
															"src": "7737:30:5"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "7636:137:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "7674:6:5",
														"nodeType": "YulTypedName",
														"src": "7674:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7682:3:5",
														"nodeType": "YulTypedName",
														"src": "7682:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "7690:5:5",
														"nodeType": "YulTypedName",
														"src": "7690:5:5",
														"type": ""
													}
												],
												"src": "7636:137:5"
											},
											{
												"body": {
													"nativeSrc": "7853:271:5",
													"nodeType": "YulBlock",
													"src": "7853:271:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "7899:83:5",
																"nodeType": "YulBlock",
																"src": "7899:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7901:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "7901:77:5"
																			},
																			"nativeSrc": "7901:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "7901:79:5"
																		},
																		"nativeSrc": "7901:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "7901:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7874:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "7874:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7883:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "7883:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7870:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "7870:3:5"
																		},
																		"nativeSrc": "7870:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7870:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7895:2:5",
																		"nodeType": "YulLiteral",
																		"src": "7895:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7866:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "7866:3:5"
																},
																"nativeSrc": "7866:32:5",
																"nodeType": "YulFunctionCall",
																"src": "7866:32:5"
															},
															"nativeSrc": "7863:119:5",
															"nodeType": "YulIf",
															"src": "7863:119:5"
														},
														{
															"nativeSrc": "7992:125:5",
															"nodeType": "YulBlock",
															"src": "7992:125:5",
															"statements": [
																{
																	"nativeSrc": "8007:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8007:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8021:1:5",
																		"nodeType": "YulLiteral",
																		"src": "8021:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8011:6:5",
																			"nodeType": "YulTypedName",
																			"src": "8011:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8036:71:5",
																	"nodeType": "YulAssignment",
																	"src": "8036:71:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8079:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "8079:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8090:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "8090:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8075:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "8075:3:5"
																				},
																				"nativeSrc": "8075:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "8075:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8099:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "8099:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "8046:28:5",
																			"nodeType": "YulIdentifier",
																			"src": "8046:28:5"
																		},
																		"nativeSrc": "8046:61:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8046:61:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8036:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "8036:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "7779:345:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7823:9:5",
														"nodeType": "YulTypedName",
														"src": "7823:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7834:7:5",
														"nodeType": "YulTypedName",
														"src": "7834:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7846:6:5",
														"nodeType": "YulTypedName",
														"src": "7846:6:5",
														"type": ""
													}
												],
												"src": "7779:345:5"
											},
											{
												"body": {
													"nativeSrc": "8226:73:5",
													"nodeType": "YulBlock",
													"src": "8226:73:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8243:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "8243:3:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8248:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "8248:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8236:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "8236:6:5"
																},
																"nativeSrc": "8236:19:5",
																"nodeType": "YulFunctionCall",
																"src": "8236:19:5"
															},
															"nativeSrc": "8236:19:5",
															"nodeType": "YulExpressionStatement",
															"src": "8236:19:5"
														},
														{
															"nativeSrc": "8264:29:5",
															"nodeType": "YulAssignment",
															"src": "8264:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8283:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "8283:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8288:4:5",
																		"nodeType": "YulLiteral",
																		"src": "8288:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8279:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "8279:3:5"
																},
																"nativeSrc": "8279:14:5",
																"nodeType": "YulFunctionCall",
																"src": "8279:14:5"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "8264:11:5",
																	"nodeType": "YulIdentifier",
																	"src": "8264:11:5"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "8130:169:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8198:3:5",
														"nodeType": "YulTypedName",
														"src": "8198:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "8203:6:5",
														"nodeType": "YulTypedName",
														"src": "8203:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "8214:11:5",
														"nodeType": "YulTypedName",
														"src": "8214:11:5",
														"type": ""
													}
												],
												"src": "8130:169:5"
											},
											{
												"body": {
													"nativeSrc": "8411:130:5",
													"nodeType": "YulBlock",
													"src": "8411:130:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8433:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "8433:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8441:1:5",
																				"nodeType": "YulLiteral",
																				"src": "8441:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8429:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "8429:3:5"
																		},
																		"nativeSrc": "8429:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8429:14:5"
																	},
																	{
																		"hexValue": "5472616e7366657248656c7065723a3a7472616e7366657246726f6d3a207472",
																		"kind": "string",
																		"nativeSrc": "8445:34:5",
																		"nodeType": "YulLiteral",
																		"src": "8445:34:5",
																		"type": "",
																		"value": "TransferHelper::transferFrom: tr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8422:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "8422:6:5"
																},
																"nativeSrc": "8422:58:5",
																"nodeType": "YulFunctionCall",
																"src": "8422:58:5"
															},
															"nativeSrc": "8422:58:5",
															"nodeType": "YulExpressionStatement",
															"src": "8422:58:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8501:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "8501:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8509:2:5",
																				"nodeType": "YulLiteral",
																				"src": "8509:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8497:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "8497:3:5"
																		},
																		"nativeSrc": "8497:15:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8497:15:5"
																	},
																	{
																		"hexValue": "616e7366657246726f6d206661696c6564",
																		"kind": "string",
																		"nativeSrc": "8514:19:5",
																		"nodeType": "YulLiteral",
																		"src": "8514:19:5",
																		"type": "",
																		"value": "ansferFrom failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8490:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "8490:6:5"
																},
																"nativeSrc": "8490:44:5",
																"nodeType": "YulFunctionCall",
																"src": "8490:44:5"
															},
															"nativeSrc": "8490:44:5",
															"nodeType": "YulExpressionStatement",
															"src": "8490:44:5"
														}
													]
												},
												"name": "store_literal_in_memory_3f8faf98afe9344b6d4b0e75b0101259bf282914b3b5a9320c6918b6e27ede1c",
												"nativeSrc": "8305:236:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8403:6:5",
														"nodeType": "YulTypedName",
														"src": "8403:6:5",
														"type": ""
													}
												],
												"src": "8305:236:5"
											},
											{
												"body": {
													"nativeSrc": "8693:220:5",
													"nodeType": "YulBlock",
													"src": "8693:220:5",
													"statements": [
														{
															"nativeSrc": "8703:74:5",
															"nodeType": "YulAssignment",
															"src": "8703:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8769:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "8769:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8774:2:5",
																		"nodeType": "YulLiteral",
																		"src": "8774:2:5",
																		"type": "",
																		"value": "49"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8710:58:5",
																	"nodeType": "YulIdentifier",
																	"src": "8710:58:5"
																},
																"nativeSrc": "8710:67:5",
																"nodeType": "YulFunctionCall",
																"src": "8710:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8703:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "8703:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8875:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "8875:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_3f8faf98afe9344b6d4b0e75b0101259bf282914b3b5a9320c6918b6e27ede1c",
																	"nativeSrc": "8786:88:5",
																	"nodeType": "YulIdentifier",
																	"src": "8786:88:5"
																},
																"nativeSrc": "8786:93:5",
																"nodeType": "YulFunctionCall",
																"src": "8786:93:5"
															},
															"nativeSrc": "8786:93:5",
															"nodeType": "YulExpressionStatement",
															"src": "8786:93:5"
														},
														{
															"nativeSrc": "8888:19:5",
															"nodeType": "YulAssignment",
															"src": "8888:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8899:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "8899:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8904:2:5",
																		"nodeType": "YulLiteral",
																		"src": "8904:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8895:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "8895:3:5"
																},
																"nativeSrc": "8895:12:5",
																"nodeType": "YulFunctionCall",
																"src": "8895:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8888:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "8888:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_3f8faf98afe9344b6d4b0e75b0101259bf282914b3b5a9320c6918b6e27ede1c_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "8547:366:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8681:3:5",
														"nodeType": "YulTypedName",
														"src": "8681:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8689:3:5",
														"nodeType": "YulTypedName",
														"src": "8689:3:5",
														"type": ""
													}
												],
												"src": "8547:366:5"
											},
											{
												"body": {
													"nativeSrc": "9090:248:5",
													"nodeType": "YulBlock",
													"src": "9090:248:5",
													"statements": [
														{
															"nativeSrc": "9100:26:5",
															"nodeType": "YulAssignment",
															"src": "9100:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9112:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "9112:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9123:2:5",
																		"nodeType": "YulLiteral",
																		"src": "9123:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9108:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "9108:3:5"
																},
																"nativeSrc": "9108:18:5",
																"nodeType": "YulFunctionCall",
																"src": "9108:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9100:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "9100:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9147:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "9147:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9158:1:5",
																				"nodeType": "YulLiteral",
																				"src": "9158:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9143:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9143:3:5"
																		},
																		"nativeSrc": "9143:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9143:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9166:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "9166:4:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9172:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "9172:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9162:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9162:3:5"
																		},
																		"nativeSrc": "9162:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9162:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9136:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "9136:6:5"
																},
																"nativeSrc": "9136:47:5",
																"nodeType": "YulFunctionCall",
																"src": "9136:47:5"
															},
															"nativeSrc": "9136:47:5",
															"nodeType": "YulExpressionStatement",
															"src": "9136:47:5"
														},
														{
															"nativeSrc": "9192:139:5",
															"nodeType": "YulAssignment",
															"src": "9192:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "9326:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "9326:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_3f8faf98afe9344b6d4b0e75b0101259bf282914b3b5a9320c6918b6e27ede1c_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9200:124:5",
																	"nodeType": "YulIdentifier",
																	"src": "9200:124:5"
																},
																"nativeSrc": "9200:131:5",
																"nodeType": "YulFunctionCall",
																"src": "9200:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9192:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "9192:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3f8faf98afe9344b6d4b0e75b0101259bf282914b3b5a9320c6918b6e27ede1c__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8919:419:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9070:9:5",
														"nodeType": "YulTypedName",
														"src": "9070:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9085:4:5",
														"nodeType": "YulTypedName",
														"src": "9085:4:5",
														"type": ""
													}
												],
												"src": "8919:419:5"
											},
											{
												"body": {
													"nativeSrc": "9470:206:5",
													"nodeType": "YulBlock",
													"src": "9470:206:5",
													"statements": [
														{
															"nativeSrc": "9480:26:5",
															"nodeType": "YulAssignment",
															"src": "9480:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9492:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "9492:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9503:2:5",
																		"nodeType": "YulLiteral",
																		"src": "9503:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9488:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "9488:3:5"
																},
																"nativeSrc": "9488:18:5",
																"nodeType": "YulFunctionCall",
																"src": "9488:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9480:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "9480:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9560:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "9560:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9573:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "9573:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9584:1:5",
																				"nodeType": "YulLiteral",
																				"src": "9584:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9569:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9569:3:5"
																		},
																		"nativeSrc": "9569:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9569:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9516:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "9516:43:5"
																},
																"nativeSrc": "9516:71:5",
																"nodeType": "YulFunctionCall",
																"src": "9516:71:5"
															},
															"nativeSrc": "9516:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "9516:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "9641:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "9641:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9654:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "9654:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9665:2:5",
																				"nodeType": "YulLiteral",
																				"src": "9665:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9650:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9650:3:5"
																		},
																		"nativeSrc": "9650:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9650:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9597:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "9597:43:5"
																},
																"nativeSrc": "9597:72:5",
																"nodeType": "YulFunctionCall",
																"src": "9597:72:5"
															},
															"nativeSrc": "9597:72:5",
															"nodeType": "YulExpressionStatement",
															"src": "9597:72:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "9344:332:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9434:9:5",
														"nodeType": "YulTypedName",
														"src": "9434:9:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9446:6:5",
														"nodeType": "YulTypedName",
														"src": "9446:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9454:6:5",
														"nodeType": "YulTypedName",
														"src": "9454:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9465:4:5",
														"nodeType": "YulTypedName",
														"src": "9465:4:5",
														"type": ""
													}
												],
												"src": "9344:332:5"
											},
											{
												"body": {
													"nativeSrc": "9788:124:5",
													"nodeType": "YulBlock",
													"src": "9788:124:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9810:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "9810:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9818:1:5",
																				"nodeType": "YulLiteral",
																				"src": "9818:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9806:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9806:3:5"
																		},
																		"nativeSrc": "9806:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9806:14:5"
																	},
																	{
																		"hexValue": "5472616e7366657248656c7065723a3a73616665417070726f76653a20617070",
																		"kind": "string",
																		"nativeSrc": "9822:34:5",
																		"nodeType": "YulLiteral",
																		"src": "9822:34:5",
																		"type": "",
																		"value": "TransferHelper::safeApprove: app"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9799:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "9799:6:5"
																},
																"nativeSrc": "9799:58:5",
																"nodeType": "YulFunctionCall",
																"src": "9799:58:5"
															},
															"nativeSrc": "9799:58:5",
															"nodeType": "YulExpressionStatement",
															"src": "9799:58:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9878:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "9878:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9886:2:5",
																				"nodeType": "YulLiteral",
																				"src": "9886:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9874:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9874:3:5"
																		},
																		"nativeSrc": "9874:15:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9874:15:5"
																	},
																	{
																		"hexValue": "726f7665206661696c6564",
																		"kind": "string",
																		"nativeSrc": "9891:13:5",
																		"nodeType": "YulLiteral",
																		"src": "9891:13:5",
																		"type": "",
																		"value": "rove failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9867:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "9867:6:5"
																},
																"nativeSrc": "9867:38:5",
																"nodeType": "YulFunctionCall",
																"src": "9867:38:5"
															},
															"nativeSrc": "9867:38:5",
															"nodeType": "YulExpressionStatement",
															"src": "9867:38:5"
														}
													]
												},
												"name": "store_literal_in_memory_b4dd1eb4be82119fd3a99acfb5dd4c57591eb0ea309359b1af3d65a4460c7123",
												"nativeSrc": "9682:230:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9780:6:5",
														"nodeType": "YulTypedName",
														"src": "9780:6:5",
														"type": ""
													}
												],
												"src": "9682:230:5"
											},
											{
												"body": {
													"nativeSrc": "10064:220:5",
													"nodeType": "YulBlock",
													"src": "10064:220:5",
													"statements": [
														{
															"nativeSrc": "10074:74:5",
															"nodeType": "YulAssignment",
															"src": "10074:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10140:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "10140:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10145:2:5",
																		"nodeType": "YulLiteral",
																		"src": "10145:2:5",
																		"type": "",
																		"value": "43"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10081:58:5",
																	"nodeType": "YulIdentifier",
																	"src": "10081:58:5"
																},
																"nativeSrc": "10081:67:5",
																"nodeType": "YulFunctionCall",
																"src": "10081:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10074:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "10074:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10246:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "10246:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b4dd1eb4be82119fd3a99acfb5dd4c57591eb0ea309359b1af3d65a4460c7123",
																	"nativeSrc": "10157:88:5",
																	"nodeType": "YulIdentifier",
																	"src": "10157:88:5"
																},
																"nativeSrc": "10157:93:5",
																"nodeType": "YulFunctionCall",
																"src": "10157:93:5"
															},
															"nativeSrc": "10157:93:5",
															"nodeType": "YulExpressionStatement",
															"src": "10157:93:5"
														},
														{
															"nativeSrc": "10259:19:5",
															"nodeType": "YulAssignment",
															"src": "10259:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10270:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "10270:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10275:2:5",
																		"nodeType": "YulLiteral",
																		"src": "10275:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10266:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "10266:3:5"
																},
																"nativeSrc": "10266:12:5",
																"nodeType": "YulFunctionCall",
																"src": "10266:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10259:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "10259:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b4dd1eb4be82119fd3a99acfb5dd4c57591eb0ea309359b1af3d65a4460c7123_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9918:366:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10052:3:5",
														"nodeType": "YulTypedName",
														"src": "10052:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10060:3:5",
														"nodeType": "YulTypedName",
														"src": "10060:3:5",
														"type": ""
													}
												],
												"src": "9918:366:5"
											},
											{
												"body": {
													"nativeSrc": "10461:248:5",
													"nodeType": "YulBlock",
													"src": "10461:248:5",
													"statements": [
														{
															"nativeSrc": "10471:26:5",
															"nodeType": "YulAssignment",
															"src": "10471:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10483:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "10483:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10494:2:5",
																		"nodeType": "YulLiteral",
																		"src": "10494:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10479:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "10479:3:5"
																},
																"nativeSrc": "10479:18:5",
																"nodeType": "YulFunctionCall",
																"src": "10479:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10471:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "10471:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10518:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "10518:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10529:1:5",
																				"nodeType": "YulLiteral",
																				"src": "10529:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10514:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "10514:3:5"
																		},
																		"nativeSrc": "10514:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "10514:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10537:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "10537:4:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10543:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "10543:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10533:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "10533:3:5"
																		},
																		"nativeSrc": "10533:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "10533:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10507:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "10507:6:5"
																},
																"nativeSrc": "10507:47:5",
																"nodeType": "YulFunctionCall",
																"src": "10507:47:5"
															},
															"nativeSrc": "10507:47:5",
															"nodeType": "YulExpressionStatement",
															"src": "10507:47:5"
														},
														{
															"nativeSrc": "10563:139:5",
															"nodeType": "YulAssignment",
															"src": "10563:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10697:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "10697:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b4dd1eb4be82119fd3a99acfb5dd4c57591eb0ea309359b1af3d65a4460c7123_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10571:124:5",
																	"nodeType": "YulIdentifier",
																	"src": "10571:124:5"
																},
																"nativeSrc": "10571:131:5",
																"nodeType": "YulFunctionCall",
																"src": "10571:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10563:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "10563:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b4dd1eb4be82119fd3a99acfb5dd4c57591eb0ea309359b1af3d65a4460c7123__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10290:419:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10441:9:5",
														"nodeType": "YulTypedName",
														"src": "10441:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10456:4:5",
														"nodeType": "YulTypedName",
														"src": "10456:4:5",
														"type": ""
													}
												],
												"src": "10290:419:5"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IV3SwapRouter_$251_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IV3SwapRouter_$251_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IV3SwapRouter_$251_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IV3SwapRouter_$251__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IV3SwapRouter_$251_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function cleanup_t_uint24(value) -> cleaned {\n        cleaned := and(value, 0xffffff)\n    }\n\n    function abi_encode_t_uint24_to_t_uint24(value, pos) {\n        mstore(pos, cleanup_t_uint24(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint160_to_t_uint160(value, pos) {\n        mstore(pos, cleanup_t_uint160(value))\n    }\n\n    // struct IV3SwapRouter.ExactInputSingleParams -> struct IV3SwapRouter.ExactInputSingleParams\n    function abi_encode_t_struct$_ExactInputSingleParams_$181_memory_ptr_to_t_struct$_ExactInputSingleParams_$181_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0xe0)\n\n        {\n            // tokenIn\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // tokenOut\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // fee\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint24_to_t_uint24(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // recipient\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // amountIn\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x80))\n        }\n\n        {\n            // amountOutMinimum\n\n            let memberValue0 := mload(add(value, 0xa0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xa0))\n        }\n\n        {\n            // sqrtPriceLimitX96\n\n            let memberValue0 := mload(add(value, 0xc0))\n            abi_encode_t_uint160_to_t_uint160(memberValue0, add(pos, 0xc0))\n        }\n\n    }\n\n    function abi_encode_tuple_t_struct$_ExactInputSingleParams_$181_memory_ptr__to_t_struct$_ExactInputSingleParams_$181_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 224)\n\n        abi_encode_t_struct$_ExactInputSingleParams_$181_memory_ptr_to_t_struct$_ExactInputSingleParams_$181_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_3f8faf98afe9344b6d4b0e75b0101259bf282914b3b5a9320c6918b6e27ede1c(memPtr) {\n\n        mstore(add(memPtr, 0), \"TransferHelper::transferFrom: tr\")\n\n        mstore(add(memPtr, 32), \"ansferFrom failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_3f8faf98afe9344b6d4b0e75b0101259bf282914b3b5a9320c6918b6e27ede1c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 49)\n        store_literal_in_memory_3f8faf98afe9344b6d4b0e75b0101259bf282914b3b5a9320c6918b6e27ede1c(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3f8faf98afe9344b6d4b0e75b0101259bf282914b3b5a9320c6918b6e27ede1c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3f8faf98afe9344b6d4b0e75b0101259bf282914b3b5a9320c6918b6e27ede1c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_b4dd1eb4be82119fd3a99acfb5dd4c57591eb0ea309359b1af3d65a4460c7123(memPtr) {\n\n        mstore(add(memPtr, 0), \"TransferHelper::safeApprove: app\")\n\n        mstore(add(memPtr, 32), \"rove failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_b4dd1eb4be82119fd3a99acfb5dd4c57591eb0ea309359b1af3d65a4460c7123_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 43)\n        store_literal_in_memory_b4dd1eb4be82119fd3a99acfb5dd4c57591eb0ea309359b1af3d65a4460c7123(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b4dd1eb4be82119fd3a99acfb5dd4c57591eb0ea309359b1af3d65a4460c7123__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b4dd1eb4be82119fd3a99acfb5dd4c57591eb0ea309359b1af3d65a4460c7123_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"393": [
									{
										"length": 32,
										"start": 234
									},
									{
										"length": 32,
										"start": 463
									},
									{
										"length": 32,
										"start": 642
									},
									{
										"length": 32,
										"start": 902
									},
									{
										"length": 32,
										"start": 1065
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506004361061003f575f3560e01c8063a048600d14610043578063c31c9c0714610073578063f8bb916014610091575b5f80fd5b61005d600480360381019061005891906106fd565b6100af565b60405161006a9190610737565b60405180910390f35b61007b610427565b60405161008891906107ca565b60405180910390f35b61009961044b565b6040516100a69190610803565b60405180910390f35b5f6100d073d28627157e141fe80320b6022e9345a882bc71bf333085610463565b61010f73d28627157e141fe80320b6022e9345a882bc71bf7f000000000000000000000000000000000000000000000000000000000000000084610596565b5f6040518060e0016040528073d28627157e141fe80320b6022e9345a882bc71bf73ffffffffffffffffffffffffffffffffffffffff16815260200173e0ca845dc9cb425970f9d4f88771de30058322b073ffffffffffffffffffffffffffffffffffffffff1681526020016101f462ffffff1681526020013073ffffffffffffffffffffffffffffffffffffffff1681526020018481526020015f81526020015f73ffffffffffffffffffffffffffffffffffffffff1681525090505f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166304e45aaf836040518263ffffffff1660e01b815260040161022691906108f2565b6020604051808303815f875af1158015610242573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610266919061091f565b90506102c773e0ca845dc9cb425970f9d4f88771de30058322b07f00000000000000000000000000000000000000000000000000000000000000007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff610596565b5f6040518060e0016040528073e0ca845dc9cb425970f9d4f88771de30058322b073ffffffffffffffffffffffffffffffffffffffff16815260200173d28627157e141fe80320b6022e9345a882bc71bf73ffffffffffffffffffffffffffffffffffffffff1681526020016101f462ffffff1681526020013373ffffffffffffffffffffffffffffffffffffffff1681526020018381526020015f81526020015f73ffffffffffffffffffffffffffffffffffffffff1681525090507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166304e45aaf826040518263ffffffff1660e01b81526004016103dd91906108f2565b6020604051808303815f875af11580156103f9573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061041d919061091f565b9350505050919050565b7f000000000000000000000000000000000000000000000000000000000000000081565b73e0ca845dc9cb425970f9d4f88771de30058322b081565b5f808573ffffffffffffffffffffffffffffffffffffffff166323b872dd8686866040516024016104969392919061094a565b6040516020818303038152906040529060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516104e491906109d1565b5f604051808303815f865af19150503d805f811461051d576040519150601f19603f3d011682016040523d82523d5f602084013e610522565b606091505b509150915081801561054f57505f8151148061054e57508080602001905181019061054d9190610a1c565b5b5b61058e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058590610ac7565b60405180910390fd5b505050505050565b5f808473ffffffffffffffffffffffffffffffffffffffff1663095ea7b385856040516024016105c7929190610ae5565b6040516020818303038152906040529060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505060405161061591906109d1565b5f604051808303815f865af19150503d805f811461064e576040519150601f19603f3d011682016040523d82523d5f602084013e610653565b606091505b509150915081801561068057505f8151148061067f57508080602001905181019061067e9190610a1c565b5b5b6106bf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106b690610b7c565b60405180910390fd5b5050505050565b5f80fd5b5f819050919050565b6106dc816106ca565b81146106e6575f80fd5b50565b5f813590506106f7816106d3565b92915050565b5f60208284031215610712576107116106c6565b5b5f61071f848285016106e9565b91505092915050565b610731816106ca565b82525050565b5f60208201905061074a5f830184610728565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f819050919050565b5f61079261078d61078884610750565b61076f565b610750565b9050919050565b5f6107a382610778565b9050919050565b5f6107b482610799565b9050919050565b6107c4816107aa565b82525050565b5f6020820190506107dd5f8301846107bb565b92915050565b5f6107ed82610750565b9050919050565b6107fd816107e3565b82525050565b5f6020820190506108165f8301846107f4565b92915050565b610825816107e3565b82525050565b5f62ffffff82169050919050565b6108428161082b565b82525050565b610851816106ca565b82525050565b61086081610750565b82525050565b60e082015f82015161087a5f85018261081c565b50602082015161088d602085018261081c565b5060408201516108a06040850182610839565b5060608201516108b3606085018261081c565b5060808201516108c66080850182610848565b5060a08201516108d960a0850182610848565b5060c08201516108ec60c0850182610857565b50505050565b5f60e0820190506109055f830184610866565b92915050565b5f81519050610919816106d3565b92915050565b5f60208284031215610934576109336106c6565b5b5f6109418482850161090b565b91505092915050565b5f60608201905061095d5f8301866107f4565b61096a60208301856107f4565b6109776040830184610728565b949350505050565b5f81519050919050565b5f81905092915050565b8281835e5f83830152505050565b5f6109ab8261097f565b6109b58185610989565b93506109c5818560208601610993565b80840191505092915050565b5f6109dc82846109a1565b915081905092915050565b5f8115159050919050565b6109fb816109e7565b8114610a05575f80fd5b50565b5f81519050610a16816109f2565b92915050565b5f60208284031215610a3157610a306106c6565b5b5f610a3e84828501610a08565b91505092915050565b5f82825260208201905092915050565b7f5472616e7366657248656c7065723a3a7472616e7366657246726f6d3a2074725f8201527f616e7366657246726f6d206661696c6564000000000000000000000000000000602082015250565b5f610ab1603183610a47565b9150610abc82610a57565b604082019050919050565b5f6020820190508181035f830152610ade81610aa5565b9050919050565b5f604082019050610af85f8301856107f4565b610b056020830184610728565b9392505050565b7f5472616e7366657248656c7065723a3a73616665417070726f76653a206170705f8201527f726f7665206661696c6564000000000000000000000000000000000000000000602082015250565b5f610b66602b83610a47565b9150610b7182610b0c565b604082019050919050565b5f6020820190508181035f830152610b9381610b5a565b905091905056fea2646970667358221220c86ea7621f364a4de9d406f63a836d9324dcea3ff7a7e81b54c311bb594a9d9664736f6c63430008190033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA048600D EQ PUSH2 0x43 JUMPI DUP1 PUSH4 0xC31C9C07 EQ PUSH2 0x73 JUMPI DUP1 PUSH4 0xF8BB9160 EQ PUSH2 0x91 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x5D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x58 SWAP2 SWAP1 PUSH2 0x6FD JUMP JUMPDEST PUSH2 0xAF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6A SWAP2 SWAP1 PUSH2 0x737 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7B PUSH2 0x427 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x88 SWAP2 SWAP1 PUSH2 0x7CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x99 PUSH2 0x44B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA6 SWAP2 SWAP1 PUSH2 0x803 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH2 0xD0 PUSH20 0xD28627157E141FE80320B6022E9345A882BC71BF CALLER ADDRESS DUP6 PUSH2 0x463 JUMP JUMPDEST PUSH2 0x10F PUSH20 0xD28627157E141FE80320B6022E9345A882BC71BF PUSH32 0x0 DUP5 PUSH2 0x596 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 PUSH20 0xD28627157E141FE80320B6022E9345A882BC71BF PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH20 0xE0CA845DC9CB425970F9D4F88771DE30058322B0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1F4 PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 POP PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x4E45AAF DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x226 SWAP2 SWAP1 PUSH2 0x8F2 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x242 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x266 SWAP2 SWAP1 PUSH2 0x91F JUMP JUMPDEST SWAP1 POP PUSH2 0x2C7 PUSH20 0xE0CA845DC9CB425970F9D4F88771DE30058322B0 PUSH32 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x596 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 PUSH20 0xE0CA845DC9CB425970F9D4F88771DE30058322B0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH20 0xD28627157E141FE80320B6022E9345A882BC71BF PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1F4 PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x4E45AAF DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3DD SWAP2 SWAP1 PUSH2 0x8F2 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3F9 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x41D SWAP2 SWAP1 PUSH2 0x91F JUMP JUMPDEST SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH20 0xE0CA845DC9CB425970F9D4F88771DE30058322B0 DUP2 JUMP JUMPDEST PUSH0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x496 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x94A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0x4E4 SWAP2 SWAP1 PUSH2 0x9D1 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x51D JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x522 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x54F JUMPI POP PUSH0 DUP2 MLOAD EQ DUP1 PUSH2 0x54E JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x54D SWAP2 SWAP1 PUSH2 0xA1C JUMP JUMPDEST JUMPDEST JUMPDEST PUSH2 0x58E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x585 SWAP1 PUSH2 0xAC7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x5C7 SWAP3 SWAP2 SWAP1 PUSH2 0xAE5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0x615 SWAP2 SWAP1 PUSH2 0x9D1 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x64E JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x653 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x680 JUMPI POP PUSH0 DUP2 MLOAD EQ DUP1 PUSH2 0x67F JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x67E SWAP2 SWAP1 PUSH2 0xA1C JUMP JUMPDEST JUMPDEST JUMPDEST PUSH2 0x6BF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B6 SWAP1 PUSH2 0xB7C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6DC DUP2 PUSH2 0x6CA JUMP JUMPDEST DUP2 EQ PUSH2 0x6E6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x6F7 DUP2 PUSH2 0x6D3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x712 JUMPI PUSH2 0x711 PUSH2 0x6C6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x71F DUP5 DUP3 DUP6 ADD PUSH2 0x6E9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x731 DUP2 PUSH2 0x6CA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x74A PUSH0 DUP4 ADD DUP5 PUSH2 0x728 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x792 PUSH2 0x78D PUSH2 0x788 DUP5 PUSH2 0x750 JUMP JUMPDEST PUSH2 0x76F JUMP JUMPDEST PUSH2 0x750 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x7A3 DUP3 PUSH2 0x778 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x7B4 DUP3 PUSH2 0x799 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7C4 DUP2 PUSH2 0x7AA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x7DD PUSH0 DUP4 ADD DUP5 PUSH2 0x7BB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x7ED DUP3 PUSH2 0x750 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7FD DUP2 PUSH2 0x7E3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x816 PUSH0 DUP4 ADD DUP5 PUSH2 0x7F4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x825 DUP2 PUSH2 0x7E3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH3 0xFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x842 DUP2 PUSH2 0x82B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x851 DUP2 PUSH2 0x6CA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x860 DUP2 PUSH2 0x750 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0xE0 DUP3 ADD PUSH0 DUP3 ADD MLOAD PUSH2 0x87A PUSH0 DUP6 ADD DUP3 PUSH2 0x81C JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x88D PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x81C JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x8A0 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x839 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x8B3 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x81C JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x8C6 PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x848 JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0x8D9 PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0x848 JUMP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MLOAD PUSH2 0x8EC PUSH1 0xC0 DUP6 ADD DUP3 PUSH2 0x857 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x905 PUSH0 DUP4 ADD DUP5 PUSH2 0x866 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x919 DUP2 PUSH2 0x6D3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x934 JUMPI PUSH2 0x933 PUSH2 0x6C6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x941 DUP5 DUP3 DUP6 ADD PUSH2 0x90B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x95D PUSH0 DUP4 ADD DUP7 PUSH2 0x7F4 JUMP JUMPDEST PUSH2 0x96A PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x7F4 JUMP JUMPDEST PUSH2 0x977 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x728 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x9AB DUP3 PUSH2 0x97F JUMP JUMPDEST PUSH2 0x9B5 DUP2 DUP6 PUSH2 0x989 JUMP JUMPDEST SWAP4 POP PUSH2 0x9C5 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x993 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x9DC DUP3 DUP5 PUSH2 0x9A1 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9FB DUP2 PUSH2 0x9E7 JUMP JUMPDEST DUP2 EQ PUSH2 0xA05 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xA16 DUP2 PUSH2 0x9F2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA31 JUMPI PUSH2 0xA30 PUSH2 0x6C6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xA3E DUP5 DUP3 DUP6 ADD PUSH2 0xA08 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5472616E7366657248656C7065723A3A7472616E7366657246726F6D3A207472 PUSH0 DUP3 ADD MSTORE PUSH32 0x616E7366657246726F6D206661696C6564000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xAB1 PUSH1 0x31 DUP4 PUSH2 0xA47 JUMP JUMPDEST SWAP2 POP PUSH2 0xABC DUP3 PUSH2 0xA57 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xADE DUP2 PUSH2 0xAA5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xAF8 PUSH0 DUP4 ADD DUP6 PUSH2 0x7F4 JUMP JUMPDEST PUSH2 0xB05 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x728 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x5472616E7366657248656C7065723A3A73616665417070726F76653A20617070 PUSH0 DUP3 ADD MSTORE PUSH32 0x726F7665206661696C6564000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xB66 PUSH1 0x2B DUP4 PUSH2 0xA47 JUMP JUMPDEST SWAP2 POP PUSH2 0xB71 DUP3 PUSH2 0xB0C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xB93 DUP2 PUSH2 0xB5A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC8 PUSH15 0xA7621F364A4DE9D406F63A836D9324 0xDC 0xEA EXTCODEHASH 0xF7 0xA7 0xE8 SHL SLOAD 0xC3 GT 0xBB MSIZE BLOBBASEFEE SWAP14 SWAP7 PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ",
							"sourceMap": "295:2839:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;692:2440;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;615:70;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;534:74;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;692:2440;765:17;977:175;486:42;1050:10;1092:4;1124:8;977:31;:175::i;:::-;1218:63;486:42;1259:10;1272:8;1218:26;:63::i;:::-;1386:50;1439:383;;;;;;;;486:42;1439:383;;;;;;566:42;1439:383;;;;;;1576:3;1439:383;;;;;;1659:4;1439:383;;;;;;1724:8;1439:383;;;;1768:1;1439:383;;;;1806:1;1439:383;;;;;1386:436;;2020:18;2041:10;:27;;;2069:6;2041:35;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2020:56;;2147:64;566:42;2189:10;349;2147:26;:64::i;:::-;2318:51;2372:628;;;;;;;;566:42;2372:628;;;;;;486:42;2372:628;;;;;;2509:3;2372:628;;;;;;2584:10;2372:628;;;;;;2696:10;2372:628;;;;2946:1;2372:628;;;;2984:1;2372:628;;;;;2318:682;;3089:10;:27;;;3117:7;3089:36;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3077:48;;788:2344;;;692:2440;;;:::o;615:70::-;;;:::o;534:74::-;566:42;534:74;:::o;1096:486:0:-;1314:12;1328:17;1349:5;:10;;1383;1395:4;1401:2;1405:5;1360:51;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1349:63;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1313:99;;;;1443:7;:57;;;;;1470:1;1455:4;:11;:16;:44;;;;1486:4;1475:24;;;;;;;;;;;;:::i;:::-;1455:44;1443:57;1422:153;;;;;;;;;;;;:::i;:::-;;;;;;;;;1225:357;;1096:486;;;;:::o;212:434::-;390:12;404:17;425:5;:10;;459;471:2;475:5;436:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;425:57;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;389:93;;;;513:7;:57;;;;;540:1;525:4;:11;:16;:44;;;;556:4;545:24;;;;;;;;;;;;:::i;:::-;525:44;513:57;492:147;;;;;;;;;;;;:::i;:::-;;;;;;;;;314:332;;212:434;;;:::o;88:117:5:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:118::-;1112:24;1130:5;1112:24;:::i;:::-;1107:3;1100:37;1025:118;;:::o;1149:222::-;1242:4;1280:2;1269:9;1265:18;1257:26;;1293:71;1361:1;1350:9;1346:17;1337:6;1293:71;:::i;:::-;1149:222;;;;:::o;1377:126::-;1414:7;1454:42;1447:5;1443:54;1432:65;;1377:126;;;:::o;1509:60::-;1537:3;1558:5;1551:12;;1509:60;;;:::o;1575:142::-;1625:9;1658:53;1676:34;1685:24;1703:5;1685:24;:::i;:::-;1676:34;:::i;:::-;1658:53;:::i;:::-;1645:66;;1575:142;;;:::o;1723:126::-;1773:9;1806:37;1837:5;1806:37;:::i;:::-;1793:50;;1723:126;;;:::o;1855:147::-;1926:9;1959:37;1990:5;1959:37;:::i;:::-;1946:50;;1855:147;;;:::o;2008:173::-;2116:58;2168:5;2116:58;:::i;:::-;2111:3;2104:71;2008:173;;:::o;2187:264::-;2301:4;2339:2;2328:9;2324:18;2316:26;;2352:92;2441:1;2430:9;2426:17;2417:6;2352:92;:::i;:::-;2187:264;;;;:::o;2457:96::-;2494:7;2523:24;2541:5;2523:24;:::i;:::-;2512:35;;2457:96;;;:::o;2559:118::-;2646:24;2664:5;2646:24;:::i;:::-;2641:3;2634:37;2559:118;;:::o;2683:222::-;2776:4;2814:2;2803:9;2799:18;2791:26;;2827:71;2895:1;2884:9;2880:17;2871:6;2827:71;:::i;:::-;2683:222;;;;:::o;2911:108::-;2988:24;3006:5;2988:24;:::i;:::-;2983:3;2976:37;2911:108;;:::o;3025:91::-;3061:7;3101:8;3094:5;3090:20;3079:31;;3025:91;;;:::o;3122:105::-;3197:23;3214:5;3197:23;:::i;:::-;3192:3;3185:36;3122:105;;:::o;3233:108::-;3310:24;3328:5;3310:24;:::i;:::-;3305:3;3298:37;3233:108;;:::o;3347:::-;3424:24;3442:5;3424:24;:::i;:::-;3419:3;3412:37;3347:108;;:::o;3559:1443::-;3734:4;3729:3;3725:14;3824:4;3817:5;3813:16;3807:23;3843:63;3900:4;3895:3;3891:14;3877:12;3843:63;:::i;:::-;3749:167;4002:4;3995:5;3991:16;3985:23;4021:63;4078:4;4073:3;4069:14;4055:12;4021:63;:::i;:::-;3926:168;4175:4;4168:5;4164:16;4158:23;4194:61;4249:4;4244:3;4240:14;4226:12;4194:61;:::i;:::-;4104:161;4352:4;4345:5;4341:16;4335:23;4371:63;4428:4;4423:3;4419:14;4405:12;4371:63;:::i;:::-;4275:169;4530:4;4523:5;4519:16;4513:23;4549:63;4606:4;4601:3;4597:14;4583:12;4549:63;:::i;:::-;4454:168;4716:4;4709:5;4705:16;4699:23;4735:63;4792:4;4787:3;4783:14;4769:12;4735:63;:::i;:::-;4632:176;4903:4;4896:5;4892:16;4886:23;4922:63;4979:4;4974:3;4970:14;4956:12;4922:63;:::i;:::-;4818:177;3703:1299;3559:1443;;:::o;5008:379::-;5179:4;5217:3;5206:9;5202:19;5194:27;;5231:149;5377:1;5366:9;5362:17;5353:6;5231:149;:::i;:::-;5008:379;;;;:::o;5393:143::-;5450:5;5481:6;5475:13;5466:22;;5497:33;5524:5;5497:33;:::i;:::-;5393:143;;;;:::o;5542:351::-;5612:6;5661:2;5649:9;5640:7;5636:23;5632:32;5629:119;;;5667:79;;:::i;:::-;5629:119;5787:1;5812:64;5868:7;5859:6;5848:9;5844:22;5812:64;:::i;:::-;5802:74;;5758:128;5542:351;;;;:::o;5899:442::-;6048:4;6086:2;6075:9;6071:18;6063:26;;6099:71;6167:1;6156:9;6152:17;6143:6;6099:71;:::i;:::-;6180:72;6248:2;6237:9;6233:18;6224:6;6180:72;:::i;:::-;6262;6330:2;6319:9;6315:18;6306:6;6262:72;:::i;:::-;5899:442;;;;;;:::o;6347:98::-;6398:6;6432:5;6426:12;6416:22;;6347:98;;;:::o;6451:147::-;6552:11;6589:3;6574:18;;6451:147;;;;:::o;6604:139::-;6693:6;6688:3;6683;6677:23;6734:1;6725:6;6720:3;6716:16;6709:27;6604:139;;;:::o;6749:386::-;6853:3;6881:38;6913:5;6881:38;:::i;:::-;6935:88;7016:6;7011:3;6935:88;:::i;:::-;6928:95;;7032:65;7090:6;7085:3;7078:4;7071:5;7067:16;7032:65;:::i;:::-;7122:6;7117:3;7113:16;7106:23;;6857:278;6749:386;;;;:::o;7141:271::-;7271:3;7293:93;7382:3;7373:6;7293:93;:::i;:::-;7286:100;;7403:3;7396:10;;7141:271;;;;:::o;7418:90::-;7452:7;7495:5;7488:13;7481:21;7470:32;;7418:90;;;:::o;7514:116::-;7584:21;7599:5;7584:21;:::i;:::-;7577:5;7574:32;7564:60;;7620:1;7617;7610:12;7564:60;7514:116;:::o;7636:137::-;7690:5;7721:6;7715:13;7706:22;;7737:30;7761:5;7737:30;:::i;:::-;7636:137;;;;:::o;7779:345::-;7846:6;7895:2;7883:9;7874:7;7870:23;7866:32;7863:119;;;7901:79;;:::i;:::-;7863:119;8021:1;8046:61;8099:7;8090:6;8079:9;8075:22;8046:61;:::i;:::-;8036:71;;7992:125;7779:345;;;;:::o;8130:169::-;8214:11;8248:6;8243:3;8236:19;8288:4;8283:3;8279:14;8264:29;;8130:169;;;;:::o;8305:236::-;8445:34;8441:1;8433:6;8429:14;8422:58;8514:19;8509:2;8501:6;8497:15;8490:44;8305:236;:::o;8547:366::-;8689:3;8710:67;8774:2;8769:3;8710:67;:::i;:::-;8703:74;;8786:93;8875:3;8786:93;:::i;:::-;8904:2;8899:3;8895:12;8888:19;;8547:366;;;:::o;8919:419::-;9085:4;9123:2;9112:9;9108:18;9100:26;;9172:9;9166:4;9162:20;9158:1;9147:9;9143:17;9136:47;9200:131;9326:4;9200:131;:::i;:::-;9192:139;;8919:419;;;:::o;9344:332::-;9465:4;9503:2;9492:9;9488:18;9480:26;;9516:71;9584:1;9573:9;9569:17;9560:6;9516:71;:::i;:::-;9597:72;9665:2;9654:9;9650:18;9641:6;9597:72;:::i;:::-;9344:332;;;;;:::o;9682:230::-;9822:34;9818:1;9810:6;9806:14;9799:58;9891:13;9886:2;9878:6;9874:15;9867:38;9682:230;:::o;9918:366::-;10060:3;10081:67;10145:2;10140:3;10081:67;:::i;:::-;10074:74;;10157:93;10246:3;10157:93;:::i;:::-;10275:2;10270:3;10266:12;10259:19;;9918:366;;;:::o;10290:419::-;10456:4;10494:2;10483:9;10479:18;10471:26;;10543:9;10537:4;10533:20;10529:1;10518:9;10514:17;10507:47;10571:131;10697:4;10571:131;:::i;:::-;10563:139;;10290:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "604800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"TIGER()": "395",
								"doArbitrage(uint256)": "infinite",
								"swapRouter()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 295,
									"end": 3134,
									"name": "PUSH",
									"source": 4,
									"value": "A0"
								},
								{
									"begin": 295,
									"end": 3134,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 295,
									"end": 3134,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 405,
									"end": 447,
									"name": "PUSH",
									"source": 4,
									"value": "3BFA4769FB09EEFC5A80D6E87C3B9C650F7AE48E"
								},
								{
									"begin": 615,
									"end": 685,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 615,
									"end": 685,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 615,
									"end": 685,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 615,
									"end": 685,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 615,
									"end": 685,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 615,
									"end": 685,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 615,
									"end": 685,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 615,
									"end": 685,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 615,
									"end": 685,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 295,
									"end": 3134,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 295,
									"end": 3134,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 295,
									"end": 3134,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 295,
									"end": 3134,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 295,
									"end": 3134,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 295,
									"end": 3134,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 295,
									"end": 3134,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 295,
									"end": 3134,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 295,
									"end": 3134,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 295,
									"end": 3134,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 295,
									"end": 3134,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 295,
									"end": 3134,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 295,
									"end": 3134,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 295,
									"end": 3134,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 295,
									"end": 3134,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 295,
									"end": 3134,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 295,
									"end": 3134,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 295,
									"end": 3134,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 295,
									"end": 3134,
									"name": "ASSIGNIMMUTABLE",
									"source": 4,
									"value": "393"
								},
								{
									"begin": 295,
									"end": 3134,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 295,
									"end": 3134,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 295,
									"end": 3134,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c86ea7621f364a4de9d406f63a836d9324dcea3ff7a7e81b54c311bb594a9d9664736f6c63430008190033",
									".code": [
										{
											"begin": 295,
											"end": 3134,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 295,
											"end": 3134,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 295,
											"end": 3134,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 295,
											"end": 3134,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 295,
											"end": 3134,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 295,
											"end": 3134,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 295,
											"end": 3134,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 295,
											"end": 3134,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 295,
											"end": 3134,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 295,
											"end": 3134,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 295,
											"end": 3134,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 295,
											"end": 3134,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 295,
											"end": 3134,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 295,
											"end": 3134,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 295,
											"end": 3134,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 295,
											"end": 3134,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 295,
											"end": 3134,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 295,
											"end": 3134,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 295,
											"end": 3134,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 295,
											"end": 3134,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 295,
											"end": 3134,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 295,
											"end": 3134,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 295,
											"end": 3134,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 295,
											"end": 3134,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 295,
											"end": 3134,
											"name": "PUSH",
											"source": 4,
											"value": "A048600D"
										},
										{
											"begin": 295,
											"end": 3134,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 295,
											"end": 3134,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 295,
											"end": 3134,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 295,
											"end": 3134,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 295,
											"end": 3134,
											"name": "PUSH",
											"source": 4,
											"value": "C31C9C07"
										},
										{
											"begin": 295,
											"end": 3134,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 295,
											"end": 3134,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 295,
											"end": 3134,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 295,
											"end": 3134,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 295,
											"end": 3134,
											"name": "PUSH",
											"source": 4,
											"value": "F8BB9160"
										},
										{
											"begin": 295,
											"end": 3134,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 295,
											"end": 3134,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 295,
											"end": 3134,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 295,
											"end": 3134,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 295,
											"end": 3134,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 295,
											"end": 3134,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 295,
											"end": 3134,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 295,
											"end": 3134,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 692,
											"end": 3132,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 692,
											"end": 3132,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 692,
											"end": 3132,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 692,
											"end": 3132,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 692,
											"end": 3132,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 692,
											"end": 3132,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 692,
											"end": 3132,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 692,
											"end": 3132,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 692,
											"end": 3132,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 692,
											"end": 3132,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 692,
											"end": 3132,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 692,
											"end": 3132,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 692,
											"end": 3132,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 692,
											"end": 3132,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 692,
											"end": 3132,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 692,
											"end": 3132,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 692,
											"end": 3132,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 692,
											"end": 3132,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 692,
											"end": 3132,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 692,
											"end": 3132,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 692,
											"end": 3132,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 692,
											"end": 3132,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 692,
											"end": 3132,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 692,
											"end": 3132,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 692,
											"end": 3132,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 692,
											"end": 3132,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 692,
											"end": 3132,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 692,
											"end": 3132,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 692,
											"end": 3132,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 692,
											"end": 3132,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 692,
											"end": 3132,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 692,
											"end": 3132,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 692,
											"end": 3132,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 692,
											"end": 3132,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 692,
											"end": 3132,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 692,
											"end": 3132,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 692,
											"end": 3132,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 615,
											"end": 685,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 615,
											"end": 685,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 615,
											"end": 685,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 615,
											"end": 685,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 615,
											"end": 685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 615,
											"end": 685,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 615,
											"end": 685,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 615,
											"end": 685,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 615,
											"end": 685,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 615,
											"end": 685,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 615,
											"end": 685,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 615,
											"end": 685,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 615,
											"end": 685,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 615,
											"end": 685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 615,
											"end": 685,
											"name": "tag",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 615,
											"end": 685,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 615,
											"end": 685,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 615,
											"end": 685,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 615,
											"end": 685,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 615,
											"end": 685,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 615,
											"end": 685,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 615,
											"end": 685,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 615,
											"end": 685,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 534,
											"end": 608,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 534,
											"end": 608,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 534,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 534,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 534,
											"end": 608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 534,
											"end": 608,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 534,
											"end": 608,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 534,
											"end": 608,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 534,
											"end": 608,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 534,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 534,
											"end": 608,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 534,
											"end": 608,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 534,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 534,
											"end": 608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 534,
											"end": 608,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 534,
											"end": 608,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 534,
											"end": 608,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 534,
											"end": 608,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 534,
											"end": 608,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 534,
											"end": 608,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 534,
											"end": 608,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 534,
											"end": 608,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 534,
											"end": 608,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 692,
											"end": 3132,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 692,
											"end": 3132,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 765,
											"end": 782,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 977,
											"end": 1152,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 486,
											"end": 528,
											"name": "PUSH",
											"source": 4,
											"value": "D28627157E141FE80320B6022E9345A882BC71BF"
										},
										{
											"begin": 1050,
											"end": 1060,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1092,
											"end": 1096,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 1124,
											"end": 1132,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 977,
											"end": 1008,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 977,
											"end": 1152,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 977,
											"end": 1152,
											"name": "tag",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 977,
											"end": 1152,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1218,
											"end": 1281,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 486,
											"end": 528,
											"name": "PUSH",
											"source": 4,
											"value": "D28627157E141FE80320B6022E9345A882BC71BF"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "393"
										},
										{
											"begin": 1272,
											"end": 1280,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1218,
											"end": 1244,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 1218,
											"end": 1281,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1218,
											"end": 1281,
											"name": "tag",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 1218,
											"end": 1281,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1386,
											"end": 1436,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1439,
											"end": 1822,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1439,
											"end": 1822,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1439,
											"end": 1822,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1439,
											"end": 1822,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 1439,
											"end": 1822,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1439,
											"end": 1822,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1439,
											"end": 1822,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1439,
											"end": 1822,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 486,
											"end": 528,
											"name": "PUSH",
											"source": 4,
											"value": "D28627157E141FE80320B6022E9345A882BC71BF"
										},
										{
											"begin": 1439,
											"end": 1822,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1439,
											"end": 1822,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1439,
											"end": 1822,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1439,
											"end": 1822,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1439,
											"end": 1822,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1439,
											"end": 1822,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 566,
											"end": 608,
											"name": "PUSH",
											"source": 4,
											"value": "E0CA845DC9CB425970F9D4F88771DE30058322B0"
										},
										{
											"begin": 1439,
											"end": 1822,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1439,
											"end": 1822,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1439,
											"end": 1822,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1439,
											"end": 1822,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1439,
											"end": 1822,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1439,
											"end": 1822,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1576,
											"end": 1579,
											"name": "PUSH",
											"source": 4,
											"value": "1F4"
										},
										{
											"begin": 1439,
											"end": 1822,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFF"
										},
										{
											"begin": 1439,
											"end": 1822,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1439,
											"end": 1822,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1439,
											"end": 1822,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1439,
											"end": 1822,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1439,
											"end": 1822,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1659,
											"end": 1663,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 1439,
											"end": 1822,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1439,
											"end": 1822,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1439,
											"end": 1822,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1439,
											"end": 1822,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1439,
											"end": 1822,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1439,
											"end": 1822,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1724,
											"end": 1732,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1439,
											"end": 1822,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1439,
											"end": 1822,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1439,
											"end": 1822,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1439,
											"end": 1822,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1768,
											"end": 1769,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1439,
											"end": 1822,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1439,
											"end": 1822,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1439,
											"end": 1822,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1439,
											"end": 1822,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1806,
											"end": 1807,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1439,
											"end": 1822,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1439,
											"end": 1822,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1439,
											"end": 1822,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1439,
											"end": 1822,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1439,
											"end": 1822,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1386,
											"end": 1822,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1386,
											"end": 1822,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2020,
											"end": 2038,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2041,
											"end": 2051,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "393"
										},
										{
											"begin": 2041,
											"end": 2068,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2041,
											"end": 2068,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2041,
											"end": 2068,
											"name": "PUSH",
											"source": 4,
											"value": "4E45AAF"
										},
										{
											"begin": 2069,
											"end": 2075,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2041,
											"end": 2076,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2041,
											"end": 2076,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2041,
											"end": 2076,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2041,
											"end": 2076,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2041,
											"end": 2076,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2041,
											"end": 2076,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 2041,
											"end": 2076,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 2041,
											"end": 2076,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2041,
											"end": 2076,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2041,
											"end": 2076,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2041,
											"end": 2076,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2041,
											"end": 2076,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 2041,
											"end": 2076,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2041,
											"end": 2076,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2041,
											"end": 2076,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 2041,
											"end": 2076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2041,
											"end": 2076,
											"name": "tag",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 2041,
											"end": 2076,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2041,
											"end": 2076,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2041,
											"end": 2076,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2041,
											"end": 2076,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2041,
											"end": 2076,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2041,
											"end": 2076,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2041,
											"end": 2076,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2041,
											"end": 2076,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2041,
											"end": 2076,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2041,
											"end": 2076,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 2041,
											"end": 2076,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 2041,
											"end": 2076,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 2041,
											"end": 2076,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2041,
											"end": 2076,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2041,
											"end": 2076,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2041,
											"end": 2076,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 2041,
											"end": 2076,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2041,
											"end": 2076,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2041,
											"end": 2076,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2041,
											"end": 2076,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2041,
											"end": 2076,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 2041,
											"end": 2076,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2041,
											"end": 2076,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2041,
											"end": 2076,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2041,
											"end": 2076,
											"name": "tag",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 2041,
											"end": 2076,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2041,
											"end": 2076,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2041,
											"end": 2076,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2041,
											"end": 2076,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2041,
											"end": 2076,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2041,
											"end": 2076,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2041,
											"end": 2076,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2041,
											"end": 2076,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2041,
											"end": 2076,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2041,
											"end": 2076,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 2041,
											"end": 2076,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2041,
											"end": 2076,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2041,
											"end": 2076,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2041,
											"end": 2076,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2041,
											"end": 2076,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2041,
											"end": 2076,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2041,
											"end": 2076,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2041,
											"end": 2076,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2041,
											"end": 2076,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2041,
											"end": 2076,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2041,
											"end": 2076,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2041,
											"end": 2076,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2041,
											"end": 2076,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2041,
											"end": 2076,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 2041,
											"end": 2076,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2041,
											"end": 2076,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2041,
											"end": 2076,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 2041,
											"end": 2076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2041,
											"end": 2076,
											"name": "tag",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 2041,
											"end": 2076,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2020,
											"end": 2076,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2020,
											"end": 2076,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2147,
											"end": 2211,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 566,
											"end": 608,
											"name": "PUSH",
											"source": 4,
											"value": "E0CA845DC9CB425970F9D4F88771DE30058322B0"
										},
										{
											"begin": 2189,
											"end": 2199,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "393"
										},
										{
											"begin": 349,
											"end": 359,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2147,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 2147,
											"end": 2211,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2147,
											"end": 2211,
											"name": "tag",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 2147,
											"end": 2211,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2318,
											"end": 2369,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2372,
											"end": 3000,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2372,
											"end": 3000,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2372,
											"end": 3000,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2372,
											"end": 3000,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 2372,
											"end": 3000,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2372,
											"end": 3000,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2372,
											"end": 3000,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2372,
											"end": 3000,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 566,
											"end": 608,
											"name": "PUSH",
											"source": 4,
											"value": "E0CA845DC9CB425970F9D4F88771DE30058322B0"
										},
										{
											"begin": 2372,
											"end": 3000,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2372,
											"end": 3000,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2372,
											"end": 3000,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2372,
											"end": 3000,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2372,
											"end": 3000,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2372,
											"end": 3000,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 486,
											"end": 528,
											"name": "PUSH",
											"source": 4,
											"value": "D28627157E141FE80320B6022E9345A882BC71BF"
										},
										{
											"begin": 2372,
											"end": 3000,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2372,
											"end": 3000,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2372,
											"end": 3000,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2372,
											"end": 3000,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2372,
											"end": 3000,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2372,
											"end": 3000,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2512,
											"name": "PUSH",
											"source": 4,
											"value": "1F4"
										},
										{
											"begin": 2372,
											"end": 3000,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFF"
										},
										{
											"begin": 2372,
											"end": 3000,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2372,
											"end": 3000,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2372,
											"end": 3000,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2372,
											"end": 3000,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2372,
											"end": 3000,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2584,
											"end": 2594,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 2372,
											"end": 3000,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2372,
											"end": 3000,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2372,
											"end": 3000,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2372,
											"end": 3000,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2372,
											"end": 3000,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2372,
											"end": 3000,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2696,
											"end": 2706,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2372,
											"end": 3000,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2372,
											"end": 3000,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2372,
											"end": 3000,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2372,
											"end": 3000,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2946,
											"end": 2947,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2372,
											"end": 3000,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2372,
											"end": 3000,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2372,
											"end": 3000,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2372,
											"end": 3000,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2984,
											"end": 2985,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2372,
											"end": 3000,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2372,
											"end": 3000,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2372,
											"end": 3000,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2372,
											"end": 3000,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2372,
											"end": 3000,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2318,
											"end": 3000,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2318,
											"end": 3000,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3089,
											"end": 3099,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "393"
										},
										{
											"begin": 3089,
											"end": 3116,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3089,
											"end": 3116,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3089,
											"end": 3116,
											"name": "PUSH",
											"source": 4,
											"value": "4E45AAF"
										},
										{
											"begin": 3117,
											"end": 3124,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3089,
											"end": 3125,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3089,
											"end": 3125,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3089,
											"end": 3125,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3089,
											"end": 3125,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3089,
											"end": 3125,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3089,
											"end": 3125,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 3089,
											"end": 3125,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 3089,
											"end": 3125,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3089,
											"end": 3125,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3089,
											"end": 3125,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3089,
											"end": 3125,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3089,
											"end": 3125,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 3089,
											"end": 3125,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3089,
											"end": 3125,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3089,
											"end": 3125,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 3089,
											"end": 3125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3089,
											"end": 3125,
											"name": "tag",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 3089,
											"end": 3125,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3089,
											"end": 3125,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3089,
											"end": 3125,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3089,
											"end": 3125,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3089,
											"end": 3125,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3089,
											"end": 3125,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3089,
											"end": 3125,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3089,
											"end": 3125,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3089,
											"end": 3125,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3089,
											"end": 3125,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 3089,
											"end": 3125,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 3089,
											"end": 3125,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 3089,
											"end": 3125,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3089,
											"end": 3125,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3089,
											"end": 3125,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3089,
											"end": 3125,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 3089,
											"end": 3125,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3089,
											"end": 3125,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3089,
											"end": 3125,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3089,
											"end": 3125,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3089,
											"end": 3125,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 3089,
											"end": 3125,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3089,
											"end": 3125,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3089,
											"end": 3125,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3089,
											"end": 3125,
											"name": "tag",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 3089,
											"end": 3125,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3089,
											"end": 3125,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3089,
											"end": 3125,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3089,
											"end": 3125,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3089,
											"end": 3125,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3089,
											"end": 3125,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3089,
											"end": 3125,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3089,
											"end": 3125,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3089,
											"end": 3125,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 3089,
											"end": 3125,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 3089,
											"end": 3125,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 3089,
											"end": 3125,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3089,
											"end": 3125,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3089,
											"end": 3125,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3089,
											"end": 3125,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3089,
											"end": 3125,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3089,
											"end": 3125,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3089,
											"end": 3125,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3089,
											"end": 3125,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3089,
											"end": 3125,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3089,
											"end": 3125,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3089,
											"end": 3125,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3089,
											"end": 3125,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3089,
											"end": 3125,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 3089,
											"end": 3125,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3089,
											"end": 3125,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3089,
											"end": 3125,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 3089,
											"end": 3125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3089,
											"end": 3125,
											"name": "tag",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 3089,
											"end": 3125,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3077,
											"end": 3125,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 3077,
											"end": 3125,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 788,
											"end": 3132,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 788,
											"end": 3132,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 788,
											"end": 3132,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 692,
											"end": 3132,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 692,
											"end": 3132,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 692,
											"end": 3132,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 692,
											"end": 3132,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 615,
											"end": 685,
											"name": "tag",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 615,
											"end": 685,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 615,
											"end": 685,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "393"
										},
										{
											"begin": 615,
											"end": 685,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 615,
											"end": 685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 534,
											"end": 608,
											"name": "tag",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 534,
											"end": 608,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 566,
											"end": 608,
											"name": "PUSH",
											"source": 4,
											"value": "E0CA845DC9CB425970F9D4F88771DE30058322B0"
										},
										{
											"begin": 534,
											"end": 608,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 534,
											"end": 608,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1096,
											"end": 1582,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1096,
											"end": 1582,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1314,
											"end": 1326,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1328,
											"end": 1345,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1354,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1359,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1349,
											"end": 1359,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1383,
											"end": 1393,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 1395,
											"end": 1399,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 1403,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 1405,
											"end": 1410,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1411,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1360,
											"end": 1411,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1411,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1360,
											"end": 1411,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1411,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1360,
											"end": 1411,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1411,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1411,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1411,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1411,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1360,
											"end": 1411,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1411,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1360,
											"end": 1411,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1411,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1360,
											"end": 1411,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1411,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1360,
											"end": 1411,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1411,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1411,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1411,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1411,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1411,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1411,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1411,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1360,
											"end": 1411,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1411,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1411,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 1360,
											"end": 1411,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1411,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1360,
											"end": 1411,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1411,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1411,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1411,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1411,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1360,
											"end": 1411,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1411,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1411,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1411,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1411,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1411,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1411,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1411,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1411,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1411,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1411,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1349,
											"end": 1412,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1313,
											"end": 1412,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1313,
											"end": 1412,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1313,
											"end": 1412,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1313,
											"end": 1412,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 1450,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 1500,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 1500,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 1500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1443,
											"end": 1500,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 1500,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1470,
											"end": 1471,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1455,
											"end": 1459,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1455,
											"end": 1466,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1455,
											"end": 1471,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1455,
											"end": 1499,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1455,
											"end": 1499,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1455,
											"end": 1499,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1455,
											"end": 1499,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1486,
											"end": 1490,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1475,
											"end": 1499,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1475,
											"end": 1499,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1475,
											"end": 1499,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1475,
											"end": 1499,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1475,
											"end": 1499,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1475,
											"end": 1499,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1475,
											"end": 1499,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1475,
											"end": 1499,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1475,
											"end": 1499,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1475,
											"end": 1499,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1475,
											"end": 1499,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1475,
											"end": 1499,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 1475,
											"end": 1499,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1475,
											"end": 1499,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1475,
											"end": 1499,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1455,
											"end": 1499,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1455,
											"end": 1499,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 1500,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1443,
											"end": 1500,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1575,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 1422,
											"end": 1575,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1575,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1422,
											"end": 1575,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1575,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1422,
											"end": 1575,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1575,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1575,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1422,
											"end": 1575,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1575,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1422,
											"end": 1575,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1575,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1422,
											"end": 1575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1575,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1422,
											"end": 1575,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1575,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1422,
											"end": 1575,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1575,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1575,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1575,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1575,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1575,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1575,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 1422,
											"end": 1575,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1225,
											"end": 1582,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1225,
											"end": 1582,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 1582,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 1582,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 1582,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 1582,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 1582,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 212,
											"end": 646,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 212,
											"end": 646,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 390,
											"end": 402,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 404,
											"end": 421,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 425,
											"end": 430,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 425,
											"end": 435,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 425,
											"end": 435,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 459,
											"end": 469,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 471,
											"end": 473,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 475,
											"end": 480,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 436,
											"end": 481,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 436,
											"end": 481,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 436,
											"end": 481,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 436,
											"end": 481,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 436,
											"end": 481,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 436,
											"end": 481,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 436,
											"end": 481,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 436,
											"end": 481,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 436,
											"end": 481,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 436,
											"end": 481,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 436,
											"end": 481,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 436,
											"end": 481,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 436,
											"end": 481,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 436,
											"end": 481,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 436,
											"end": 481,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 436,
											"end": 481,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 436,
											"end": 481,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 436,
											"end": 481,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 436,
											"end": 481,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 436,
											"end": 481,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 436,
											"end": 481,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 436,
											"end": 481,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 436,
											"end": 481,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 436,
											"end": 481,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 436,
											"end": 481,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 436,
											"end": 481,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 436,
											"end": 481,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 436,
											"end": 481,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 436,
											"end": 481,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 436,
											"end": 481,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 436,
											"end": 481,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 436,
											"end": 481,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 436,
											"end": 481,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 436,
											"end": 481,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 436,
											"end": 481,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 436,
											"end": 481,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 436,
											"end": 481,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 436,
											"end": 481,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 436,
											"end": 481,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 436,
											"end": 481,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 436,
											"end": 481,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 436,
											"end": 481,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 436,
											"end": 481,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 436,
											"end": 481,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 425,
											"end": 482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 425,
											"end": 482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 425,
											"end": 482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 425,
											"end": 482,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 425,
											"end": 482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 425,
											"end": 482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 425,
											"end": 482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 425,
											"end": 482,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 425,
											"end": 482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 425,
											"end": 482,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 425,
											"end": 482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 425,
											"end": 482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 425,
											"end": 482,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 425,
											"end": 482,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 425,
											"end": 482,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 425,
											"end": 482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 425,
											"end": 482,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 425,
											"end": 482,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 425,
											"end": 482,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 425,
											"end": 482,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 425,
											"end": 482,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 425,
											"end": 482,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 425,
											"end": 482,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 425,
											"end": 482,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 425,
											"end": 482,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 425,
											"end": 482,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 425,
											"end": 482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 425,
											"end": 482,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 425,
											"end": 482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 425,
											"end": 482,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 425,
											"end": 482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 425,
											"end": 482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 425,
											"end": 482,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 425,
											"end": 482,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 425,
											"end": 482,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 425,
											"end": 482,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 425,
											"end": 482,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 425,
											"end": 482,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 425,
											"end": 482,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 425,
											"end": 482,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 425,
											"end": 482,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 425,
											"end": 482,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 425,
											"end": 482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 425,
											"end": 482,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 425,
											"end": 482,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 425,
											"end": 482,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 425,
											"end": 482,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 425,
											"end": 482,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 425,
											"end": 482,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 425,
											"end": 482,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 425,
											"end": 482,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 425,
											"end": 482,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 425,
											"end": 482,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 425,
											"end": 482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 425,
											"end": 482,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 425,
											"end": 482,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 425,
											"end": 482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 425,
											"end": 482,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 425,
											"end": 482,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 425,
											"end": 482,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 425,
											"end": 482,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 425,
											"end": 482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 425,
											"end": 482,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 389,
											"end": 482,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 389,
											"end": 482,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 389,
											"end": 482,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 389,
											"end": 482,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 513,
											"end": 520,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 513,
											"end": 570,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 513,
											"end": 570,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 513,
											"end": 570,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 513,
											"end": 570,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 513,
											"end": 570,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 540,
											"end": 541,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 525,
											"end": 529,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 525,
											"end": 536,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 525,
											"end": 541,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 525,
											"end": 569,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 525,
											"end": 569,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 525,
											"end": 569,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 525,
											"end": 569,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 556,
											"end": 560,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 545,
											"end": 569,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 545,
											"end": 569,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 545,
											"end": 569,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 545,
											"end": 569,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 545,
											"end": 569,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 545,
											"end": 569,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 545,
											"end": 569,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 545,
											"end": 569,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 545,
											"end": 569,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 545,
											"end": 569,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 545,
											"end": 569,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 545,
											"end": 569,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 545,
											"end": 569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 545,
											"end": 569,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 545,
											"end": 569,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 525,
											"end": 569,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 525,
											"end": 569,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 513,
											"end": 570,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 513,
											"end": 570,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 492,
											"end": 639,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 492,
											"end": 639,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 492,
											"end": 639,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 492,
											"end": 639,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 492,
											"end": 639,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 492,
											"end": 639,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 492,
											"end": 639,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 492,
											"end": 639,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 492,
											"end": 639,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 492,
											"end": 639,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 492,
											"end": 639,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 492,
											"end": 639,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 492,
											"end": 639,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 492,
											"end": 639,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 492,
											"end": 639,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 492,
											"end": 639,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 492,
											"end": 639,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 492,
											"end": 639,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 492,
											"end": 639,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 492,
											"end": 639,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 492,
											"end": 639,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 492,
											"end": 639,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 492,
											"end": 639,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 492,
											"end": 639,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 314,
											"end": 646,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 314,
											"end": 646,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 212,
											"end": 646,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 212,
											"end": 646,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 212,
											"end": 646,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 212,
											"end": 646,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 334,
											"end": 411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 490,
											"end": 514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 417,
											"end": 539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 645,
											"end": 678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 545,
											"end": 684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "tag",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 749,
											"end": 755,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 798,
											"end": 800,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 786,
											"end": 795,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 777,
											"end": 784,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 773,
											"end": 796,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 769,
											"end": 801,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 766,
											"end": 885,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 766,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 804,
											"end": 883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 804,
											"end": 883,
											"name": "tag",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 766,
											"end": 885,
											"name": "tag",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 924,
											"end": 925,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 994,
											"end": 1001,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 985,
											"end": 991,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 974,
											"end": 983,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 970,
											"end": 992,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 949,
											"end": 1002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "tag",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 895,
											"end": 1012,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 690,
											"end": 1019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "tag",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 1130,
											"end": 1135,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 1112,
											"end": 1136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "tag",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1107,
											"end": 1110,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1100,
											"end": 1137,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1025,
											"end": 1143,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "tag",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1242,
											"end": 1246,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1280,
											"end": 1282,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1269,
											"end": 1278,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1265,
											"end": 1283,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1257,
											"end": 1283,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1257,
											"end": 1283,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 1361,
											"end": 1362,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1350,
											"end": 1359,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1346,
											"end": 1363,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1337,
											"end": 1343,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 1293,
											"end": 1364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "tag",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1149,
											"end": 1371,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "tag",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1414,
											"end": 1421,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1454,
											"end": 1496,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1447,
											"end": 1452,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1443,
											"end": 1497,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1432,
											"end": 1497,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1432,
											"end": 1497,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1377,
											"end": 1503,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1509,
											"end": 1569,
											"name": "tag",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 1509,
											"end": 1569,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1537,
											"end": 1540,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1558,
											"end": 1563,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1551,
											"end": 1563,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1551,
											"end": 1563,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1509,
											"end": 1569,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1509,
											"end": 1569,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1509,
											"end": 1569,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1509,
											"end": 1569,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1575,
											"end": 1717,
											"name": "tag",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 1575,
											"end": 1717,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1625,
											"end": 1634,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1658,
											"end": 1711,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 1676,
											"end": 1710,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 1685,
											"end": 1709,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 1703,
											"end": 1708,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1685,
											"end": 1709,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 1685,
											"end": 1709,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1685,
											"end": 1709,
											"name": "tag",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 1685,
											"end": 1709,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1676,
											"end": 1710,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 1676,
											"end": 1710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1676,
											"end": 1710,
											"name": "tag",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 1676,
											"end": 1710,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1658,
											"end": 1711,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 1658,
											"end": 1711,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1658,
											"end": 1711,
											"name": "tag",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 1658,
											"end": 1711,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1645,
											"end": 1711,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1645,
											"end": 1711,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1575,
											"end": 1717,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1575,
											"end": 1717,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1575,
											"end": 1717,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1575,
											"end": 1717,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1723,
											"end": 1849,
											"name": "tag",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 1723,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1773,
											"end": 1782,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1806,
											"end": 1843,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 1837,
											"end": 1842,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1806,
											"end": 1843,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 1806,
											"end": 1843,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1806,
											"end": 1843,
											"name": "tag",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 1806,
											"end": 1843,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1793,
											"end": 1843,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1793,
											"end": 1843,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1723,
											"end": 1849,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1723,
											"end": 1849,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1723,
											"end": 1849,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1723,
											"end": 1849,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1855,
											"end": 2002,
											"name": "tag",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 1855,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1926,
											"end": 1935,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1959,
											"end": 1996,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 1990,
											"end": 1995,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1959,
											"end": 1996,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 1959,
											"end": 1996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1959,
											"end": 1996,
											"name": "tag",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 1959,
											"end": 1996,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1946,
											"end": 1996,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1946,
											"end": 1996,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1855,
											"end": 2002,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1855,
											"end": 2002,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1855,
											"end": 2002,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1855,
											"end": 2002,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2008,
											"end": 2181,
											"name": "tag",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 2008,
											"end": 2181,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2116,
											"end": 2174,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 2168,
											"end": 2173,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2116,
											"end": 2174,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 2116,
											"end": 2174,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2116,
											"end": 2174,
											"name": "tag",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 2116,
											"end": 2174,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2111,
											"end": 2114,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2104,
											"end": 2175,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2008,
											"end": 2181,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2008,
											"end": 2181,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2008,
											"end": 2181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2187,
											"end": 2451,
											"name": "tag",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 2187,
											"end": 2451,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2301,
											"end": 2305,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2339,
											"end": 2341,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2328,
											"end": 2337,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2324,
											"end": 2342,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2316,
											"end": 2342,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2316,
											"end": 2342,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2352,
											"end": 2444,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 2441,
											"end": 2442,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2430,
											"end": 2439,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2426,
											"end": 2443,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2417,
											"end": 2423,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2352,
											"end": 2444,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 2352,
											"end": 2444,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2352,
											"end": 2444,
											"name": "tag",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 2352,
											"end": 2444,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2187,
											"end": 2451,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2187,
											"end": 2451,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2187,
											"end": 2451,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2187,
											"end": 2451,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2187,
											"end": 2451,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2457,
											"end": 2553,
											"name": "tag",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 2457,
											"end": 2553,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2494,
											"end": 2501,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2523,
											"end": 2547,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 2541,
											"end": 2546,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2523,
											"end": 2547,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 2523,
											"end": 2547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2523,
											"end": 2547,
											"name": "tag",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 2523,
											"end": 2547,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2512,
											"end": 2547,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2512,
											"end": 2547,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2457,
											"end": 2553,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2457,
											"end": 2553,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2457,
											"end": 2553,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2457,
											"end": 2553,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2559,
											"end": 2677,
											"name": "tag",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 2559,
											"end": 2677,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2646,
											"end": 2670,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 2664,
											"end": 2669,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2646,
											"end": 2670,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 2646,
											"end": 2670,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2646,
											"end": 2670,
											"name": "tag",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 2646,
											"end": 2670,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2641,
											"end": 2644,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2634,
											"end": 2671,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2559,
											"end": 2677,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2559,
											"end": 2677,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2559,
											"end": 2677,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2683,
											"end": 2905,
											"name": "tag",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 2683,
											"end": 2905,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2776,
											"end": 2780,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2814,
											"end": 2816,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2803,
											"end": 2812,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2799,
											"end": 2817,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2791,
											"end": 2817,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2791,
											"end": 2817,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2827,
											"end": 2898,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 2895,
											"end": 2896,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2884,
											"end": 2893,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2880,
											"end": 2897,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2871,
											"end": 2877,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2827,
											"end": 2898,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 2827,
											"end": 2898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2827,
											"end": 2898,
											"name": "tag",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 2827,
											"end": 2898,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2683,
											"end": 2905,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2683,
											"end": 2905,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2683,
											"end": 2905,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2683,
											"end": 2905,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2683,
											"end": 2905,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2911,
											"end": 3019,
											"name": "tag",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 2911,
											"end": 3019,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2988,
											"end": 3012,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 3006,
											"end": 3011,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2988,
											"end": 3012,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 2988,
											"end": 3012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2988,
											"end": 3012,
											"name": "tag",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 2988,
											"end": 3012,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2983,
											"end": 2986,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2976,
											"end": 3013,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2911,
											"end": 3019,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2911,
											"end": 3019,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2911,
											"end": 3019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3025,
											"end": 3116,
											"name": "tag",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 3025,
											"end": 3116,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3061,
											"end": 3068,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3101,
											"end": 3109,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFF"
										},
										{
											"begin": 3094,
											"end": 3099,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3090,
											"end": 3110,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3079,
											"end": 3110,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3079,
											"end": 3110,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3025,
											"end": 3116,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3025,
											"end": 3116,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3025,
											"end": 3116,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3025,
											"end": 3116,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3122,
											"end": 3227,
											"name": "tag",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 3122,
											"end": 3227,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3197,
											"end": 3220,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 3214,
											"end": 3219,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3197,
											"end": 3220,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 3197,
											"end": 3220,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3197,
											"end": 3220,
											"name": "tag",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 3197,
											"end": 3220,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3192,
											"end": 3195,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3185,
											"end": 3221,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3122,
											"end": 3227,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3122,
											"end": 3227,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3122,
											"end": 3227,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3233,
											"end": 3341,
											"name": "tag",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 3233,
											"end": 3341,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3310,
											"end": 3334,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 3328,
											"end": 3333,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3310,
											"end": 3334,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 3310,
											"end": 3334,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3310,
											"end": 3334,
											"name": "tag",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 3310,
											"end": 3334,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3305,
											"end": 3308,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3298,
											"end": 3335,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3233,
											"end": 3341,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3233,
											"end": 3341,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3233,
											"end": 3341,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3347,
											"end": 3455,
											"name": "tag",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 3347,
											"end": 3455,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3424,
											"end": 3448,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 3442,
											"end": 3447,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3424,
											"end": 3448,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 3424,
											"end": 3448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3424,
											"end": 3448,
											"name": "tag",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 3424,
											"end": 3448,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3419,
											"end": 3422,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3412,
											"end": 3449,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3347,
											"end": 3455,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3347,
											"end": 3455,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3347,
											"end": 3455,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3559,
											"end": 5002,
											"name": "tag",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 3559,
											"end": 5002,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3734,
											"end": 3738,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 3729,
											"end": 3732,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3725,
											"end": 3739,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3824,
											"end": 3828,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3817,
											"end": 3822,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3813,
											"end": 3829,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3807,
											"end": 3830,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3843,
											"end": 3906,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 3900,
											"end": 3904,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3895,
											"end": 3898,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3891,
											"end": 3905,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3843,
											"end": 3906,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 3843,
											"end": 3906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3843,
											"end": 3906,
											"name": "tag",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 3843,
											"end": 3906,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3749,
											"end": 3916,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4002,
											"end": 4006,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3995,
											"end": 4000,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3991,
											"end": 4007,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3985,
											"end": 4008,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4021,
											"end": 4084,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 4078,
											"end": 4082,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4073,
											"end": 4076,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4069,
											"end": 4083,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4055,
											"end": 4067,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4021,
											"end": 4084,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 4021,
											"end": 4084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4021,
											"end": 4084,
											"name": "tag",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 4021,
											"end": 4084,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3926,
											"end": 4094,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4175,
											"end": 4179,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4168,
											"end": 4173,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4164,
											"end": 4180,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4158,
											"end": 4181,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4194,
											"end": 4255,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 4249,
											"end": 4253,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4244,
											"end": 4247,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4240,
											"end": 4254,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4226,
											"end": 4238,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4194,
											"end": 4255,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 4194,
											"end": 4255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4194,
											"end": 4255,
											"name": "tag",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 4194,
											"end": 4255,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4104,
											"end": 4265,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4352,
											"end": 4356,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 4345,
											"end": 4350,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4341,
											"end": 4357,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4335,
											"end": 4358,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4371,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 4428,
											"end": 4432,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 4423,
											"end": 4426,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4419,
											"end": 4433,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4405,
											"end": 4417,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4371,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 4371,
											"end": 4434,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4371,
											"end": 4434,
											"name": "tag",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 4371,
											"end": 4434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4275,
											"end": 4444,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4530,
											"end": 4534,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 4523,
											"end": 4528,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4519,
											"end": 4535,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4513,
											"end": 4536,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4549,
											"end": 4612,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 4606,
											"end": 4610,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 4601,
											"end": 4604,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4597,
											"end": 4611,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4583,
											"end": 4595,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4549,
											"end": 4612,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 4549,
											"end": 4612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4549,
											"end": 4612,
											"name": "tag",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 4549,
											"end": 4612,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4454,
											"end": 4622,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4716,
											"end": 4720,
											"name": "PUSH",
											"source": 5,
											"value": "A0"
										},
										{
											"begin": 4709,
											"end": 4714,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4705,
											"end": 4721,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4699,
											"end": 4722,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4735,
											"end": 4798,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 4792,
											"end": 4796,
											"name": "PUSH",
											"source": 5,
											"value": "A0"
										},
										{
											"begin": 4787,
											"end": 4790,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4783,
											"end": 4797,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4769,
											"end": 4781,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4735,
											"end": 4798,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 4735,
											"end": 4798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4735,
											"end": 4798,
											"name": "tag",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 4735,
											"end": 4798,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4632,
											"end": 4808,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4903,
											"end": 4907,
											"name": "PUSH",
											"source": 5,
											"value": "C0"
										},
										{
											"begin": 4896,
											"end": 4901,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4892,
											"end": 4908,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4886,
											"end": 4909,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4922,
											"end": 4985,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 4979,
											"end": 4983,
											"name": "PUSH",
											"source": 5,
											"value": "C0"
										},
										{
											"begin": 4974,
											"end": 4977,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4970,
											"end": 4984,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4956,
											"end": 4968,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4922,
											"end": 4985,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 4922,
											"end": 4985,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4922,
											"end": 4985,
											"name": "tag",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 4922,
											"end": 4985,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4818,
											"end": 4995,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3703,
											"end": 5002,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3559,
											"end": 5002,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3559,
											"end": 5002,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3559,
											"end": 5002,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5008,
											"end": 5387,
											"name": "tag",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 5008,
											"end": 5387,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5179,
											"end": 5183,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5217,
											"end": 5220,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 5206,
											"end": 5215,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5202,
											"end": 5221,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5194,
											"end": 5221,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5194,
											"end": 5221,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5231,
											"end": 5380,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 5377,
											"end": 5378,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5366,
											"end": 5375,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5362,
											"end": 5379,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5353,
											"end": 5359,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5231,
											"end": 5380,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 5231,
											"end": 5380,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5231,
											"end": 5380,
											"name": "tag",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 5231,
											"end": 5380,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5008,
											"end": 5387,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5008,
											"end": 5387,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5008,
											"end": 5387,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5008,
											"end": 5387,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5008,
											"end": 5387,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5393,
											"end": 5536,
											"name": "tag",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 5393,
											"end": 5536,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5450,
											"end": 5455,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5481,
											"end": 5487,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5475,
											"end": 5488,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5466,
											"end": 5488,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5466,
											"end": 5488,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5497,
											"end": 5530,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 5524,
											"end": 5529,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5497,
											"end": 5530,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 5497,
											"end": 5530,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5497,
											"end": 5530,
											"name": "tag",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 5497,
											"end": 5530,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5393,
											"end": 5536,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5393,
											"end": 5536,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5393,
											"end": 5536,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5393,
											"end": 5536,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5393,
											"end": 5536,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5542,
											"end": 5893,
											"name": "tag",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 5542,
											"end": 5893,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5612,
											"end": 5618,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5661,
											"end": 5663,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5649,
											"end": 5658,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5640,
											"end": 5647,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5636,
											"end": 5659,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5632,
											"end": 5664,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 5629,
											"end": 5748,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5629,
											"end": 5748,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 5629,
											"end": 5748,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5667,
											"end": 5746,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 5667,
											"end": 5746,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 5667,
											"end": 5746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5667,
											"end": 5746,
											"name": "tag",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 5667,
											"end": 5746,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5629,
											"end": 5748,
											"name": "tag",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 5629,
											"end": 5748,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5787,
											"end": 5788,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5812,
											"end": 5876,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 5868,
											"end": 5875,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5859,
											"end": 5865,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5848,
											"end": 5857,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5844,
											"end": 5866,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5812,
											"end": 5876,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 5812,
											"end": 5876,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5812,
											"end": 5876,
											"name": "tag",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 5812,
											"end": 5876,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5802,
											"end": 5876,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5802,
											"end": 5876,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5758,
											"end": 5886,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5542,
											"end": 5893,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5542,
											"end": 5893,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5542,
											"end": 5893,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5542,
											"end": 5893,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5542,
											"end": 5893,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5899,
											"end": 6341,
											"name": "tag",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 5899,
											"end": 6341,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6048,
											"end": 6052,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6086,
											"end": 6088,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 6075,
											"end": 6084,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6071,
											"end": 6089,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6063,
											"end": 6089,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6063,
											"end": 6089,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6099,
											"end": 6170,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 6167,
											"end": 6168,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6156,
											"end": 6165,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6152,
											"end": 6169,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6143,
											"end": 6149,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 6099,
											"end": 6170,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 6099,
											"end": 6170,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6099,
											"end": 6170,
											"name": "tag",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 6099,
											"end": 6170,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6180,
											"end": 6252,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 6248,
											"end": 6250,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6237,
											"end": 6246,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6233,
											"end": 6251,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6224,
											"end": 6230,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 6180,
											"end": 6252,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 6180,
											"end": 6252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6180,
											"end": 6252,
											"name": "tag",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 6180,
											"end": 6252,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6262,
											"end": 6334,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 6330,
											"end": 6332,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6319,
											"end": 6328,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6315,
											"end": 6333,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6306,
											"end": 6312,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6262,
											"end": 6334,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 6262,
											"end": 6334,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6262,
											"end": 6334,
											"name": "tag",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 6262,
											"end": 6334,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5899,
											"end": 6341,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 5899,
											"end": 6341,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 5899,
											"end": 6341,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5899,
											"end": 6341,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5899,
											"end": 6341,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5899,
											"end": 6341,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5899,
											"end": 6341,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6347,
											"end": 6445,
											"name": "tag",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 6347,
											"end": 6445,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6398,
											"end": 6404,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6432,
											"end": 6437,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6426,
											"end": 6438,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6416,
											"end": 6438,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6416,
											"end": 6438,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6347,
											"end": 6445,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6347,
											"end": 6445,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6347,
											"end": 6445,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6347,
											"end": 6445,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6451,
											"end": 6598,
											"name": "tag",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 6451,
											"end": 6598,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6552,
											"end": 6563,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6589,
											"end": 6592,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6574,
											"end": 6592,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6574,
											"end": 6592,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6451,
											"end": 6598,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6451,
											"end": 6598,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6451,
											"end": 6598,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6451,
											"end": 6598,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6451,
											"end": 6598,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6604,
											"end": 6743,
											"name": "tag",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 6604,
											"end": 6743,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6693,
											"end": 6699,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6688,
											"end": 6691,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6683,
											"end": 6686,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6677,
											"end": 6700,
											"name": "MCOPY",
											"source": 5
										},
										{
											"begin": 6734,
											"end": 6735,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6725,
											"end": 6731,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6720,
											"end": 6723,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6716,
											"end": 6732,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6709,
											"end": 6736,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6604,
											"end": 6743,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6604,
											"end": 6743,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6604,
											"end": 6743,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6604,
											"end": 6743,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6749,
											"end": 7135,
											"name": "tag",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 6749,
											"end": 7135,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6853,
											"end": 6856,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6881,
											"end": 6919,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 6913,
											"end": 6918,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6881,
											"end": 6919,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 6881,
											"end": 6919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6881,
											"end": 6919,
											"name": "tag",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 6881,
											"end": 6919,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6935,
											"end": 7023,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 7016,
											"end": 7022,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7011,
											"end": 7014,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 6935,
											"end": 7023,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 6935,
											"end": 7023,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6935,
											"end": 7023,
											"name": "tag",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 6935,
											"end": 7023,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6928,
											"end": 7023,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 6928,
											"end": 7023,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7032,
											"end": 7097,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 7090,
											"end": 7096,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7085,
											"end": 7088,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 7078,
											"end": 7082,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7071,
											"end": 7076,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 7067,
											"end": 7083,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7032,
											"end": 7097,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 7032,
											"end": 7097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7032,
											"end": 7097,
											"name": "tag",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 7032,
											"end": 7097,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7122,
											"end": 7128,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7117,
											"end": 7120,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7113,
											"end": 7129,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7106,
											"end": 7129,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7106,
											"end": 7129,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6857,
											"end": 7135,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6749,
											"end": 7135,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6749,
											"end": 7135,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6749,
											"end": 7135,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6749,
											"end": 7135,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6749,
											"end": 7135,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7141,
											"end": 7412,
											"name": "tag",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7141,
											"end": 7412,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7271,
											"end": 7274,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7293,
											"end": 7386,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 7382,
											"end": 7385,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7373,
											"end": 7379,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7293,
											"end": 7386,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 7293,
											"end": 7386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7293,
											"end": 7386,
											"name": "tag",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 7293,
											"end": 7386,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7286,
											"end": 7386,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7286,
											"end": 7386,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7403,
											"end": 7406,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7396,
											"end": 7406,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7396,
											"end": 7406,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7141,
											"end": 7412,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7141,
											"end": 7412,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7141,
											"end": 7412,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7141,
											"end": 7412,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7141,
											"end": 7412,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7418,
											"end": 7508,
											"name": "tag",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 7418,
											"end": 7508,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7452,
											"end": 7459,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7495,
											"end": 7500,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7488,
											"end": 7501,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7481,
											"end": 7502,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7470,
											"end": 7502,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7470,
											"end": 7502,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7418,
											"end": 7508,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7418,
											"end": 7508,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7418,
											"end": 7508,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7418,
											"end": 7508,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7514,
											"end": 7630,
											"name": "tag",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 7514,
											"end": 7630,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7584,
											"end": 7605,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 7599,
											"end": 7604,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7584,
											"end": 7605,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 7584,
											"end": 7605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7584,
											"end": 7605,
											"name": "tag",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 7584,
											"end": 7605,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7577,
											"end": 7582,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7574,
											"end": 7606,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 7564,
											"end": 7624,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 7564,
											"end": 7624,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7620,
											"end": 7621,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7617,
											"end": 7618,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7610,
											"end": 7622,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 7564,
											"end": 7624,
											"name": "tag",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 7564,
											"end": 7624,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7514,
											"end": 7630,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7514,
											"end": 7630,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7636,
											"end": 7773,
											"name": "tag",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 7636,
											"end": 7773,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7690,
											"end": 7695,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7721,
											"end": 7727,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7715,
											"end": 7728,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7706,
											"end": 7728,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7706,
											"end": 7728,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7737,
											"end": 7767,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 7761,
											"end": 7766,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7737,
											"end": 7767,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 7737,
											"end": 7767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7737,
											"end": 7767,
											"name": "tag",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 7737,
											"end": 7767,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7636,
											"end": 7773,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7636,
											"end": 7773,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7636,
											"end": 7773,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7636,
											"end": 7773,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7636,
											"end": 7773,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7779,
											"end": 8124,
											"name": "tag",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 7779,
											"end": 8124,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7846,
											"end": 7852,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7895,
											"end": 7897,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7883,
											"end": 7892,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7874,
											"end": 7881,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7870,
											"end": 7893,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7866,
											"end": 7898,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 7863,
											"end": 7982,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7863,
											"end": 7982,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 7863,
											"end": 7982,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7901,
											"end": 7980,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "182"
										},
										{
											"begin": 7901,
											"end": 7980,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 7901,
											"end": 7980,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7901,
											"end": 7980,
											"name": "tag",
											"source": 5,
											"value": "182"
										},
										{
											"begin": 7901,
											"end": 7980,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7863,
											"end": 7982,
											"name": "tag",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 7863,
											"end": 7982,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8021,
											"end": 8022,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8046,
											"end": 8107,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 8099,
											"end": 8106,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8090,
											"end": 8096,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8079,
											"end": 8088,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 8075,
											"end": 8097,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8046,
											"end": 8107,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 8046,
											"end": 8107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8046,
											"end": 8107,
											"name": "tag",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 8046,
											"end": 8107,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8036,
											"end": 8107,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8036,
											"end": 8107,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7992,
											"end": 8117,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7779,
											"end": 8124,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7779,
											"end": 8124,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7779,
											"end": 8124,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7779,
											"end": 8124,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7779,
											"end": 8124,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8130,
											"end": 8299,
											"name": "tag",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 8130,
											"end": 8299,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8214,
											"end": 8225,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8248,
											"end": 8254,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8243,
											"end": 8246,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8236,
											"end": 8255,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8288,
											"end": 8292,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8283,
											"end": 8286,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8279,
											"end": 8293,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8264,
											"end": 8293,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8264,
											"end": 8293,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8130,
											"end": 8299,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 8130,
											"end": 8299,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8130,
											"end": 8299,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8130,
											"end": 8299,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8130,
											"end": 8299,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8305,
											"end": 8541,
											"name": "tag",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 8305,
											"end": 8541,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8445,
											"end": 8479,
											"name": "PUSH",
											"source": 5,
											"value": "5472616E7366657248656C7065723A3A7472616E7366657246726F6D3A207472"
										},
										{
											"begin": 8441,
											"end": 8442,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8433,
											"end": 8439,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8429,
											"end": 8443,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8422,
											"end": 8480,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8514,
											"end": 8533,
											"name": "PUSH",
											"source": 5,
											"value": "616E7366657246726F6D206661696C6564000000000000000000000000000000"
										},
										{
											"begin": 8509,
											"end": 8511,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8501,
											"end": 8507,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8497,
											"end": 8512,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8490,
											"end": 8534,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8305,
											"end": 8541,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8305,
											"end": 8541,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8547,
											"end": 8913,
											"name": "tag",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 8547,
											"end": 8913,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8689,
											"end": 8692,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8710,
											"end": 8777,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "187"
										},
										{
											"begin": 8774,
											"end": 8776,
											"name": "PUSH",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 8769,
											"end": 8772,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8710,
											"end": 8777,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 8710,
											"end": 8777,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8710,
											"end": 8777,
											"name": "tag",
											"source": 5,
											"value": "187"
										},
										{
											"begin": 8710,
											"end": 8777,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8703,
											"end": 8777,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8703,
											"end": 8777,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8786,
											"end": 8879,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "188"
										},
										{
											"begin": 8875,
											"end": 8878,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8786,
											"end": 8879,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 8786,
											"end": 8879,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8786,
											"end": 8879,
											"name": "tag",
											"source": 5,
											"value": "188"
										},
										{
											"begin": 8786,
											"end": 8879,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8904,
											"end": 8906,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 8899,
											"end": 8902,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8895,
											"end": 8907,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8888,
											"end": 8907,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8888,
											"end": 8907,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8547,
											"end": 8913,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8547,
											"end": 8913,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8547,
											"end": 8913,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8547,
											"end": 8913,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8919,
											"end": 9338,
											"name": "tag",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 8919,
											"end": 9338,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9085,
											"end": 9089,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9123,
											"end": 9125,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9112,
											"end": 9121,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9108,
											"end": 9126,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9100,
											"end": 9126,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9100,
											"end": 9126,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9172,
											"end": 9181,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9166,
											"end": 9170,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9162,
											"end": 9182,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 9158,
											"end": 9159,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9147,
											"end": 9156,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9143,
											"end": 9160,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9136,
											"end": 9183,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9200,
											"end": 9331,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 9326,
											"end": 9330,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9200,
											"end": 9331,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 9200,
											"end": 9331,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9200,
											"end": 9331,
											"name": "tag",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 9200,
											"end": 9331,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9192,
											"end": 9331,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9192,
											"end": 9331,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8919,
											"end": 9338,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8919,
											"end": 9338,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8919,
											"end": 9338,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8919,
											"end": 9338,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9344,
											"end": 9676,
											"name": "tag",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 9344,
											"end": 9676,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9465,
											"end": 9469,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9503,
											"end": 9505,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9492,
											"end": 9501,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9488,
											"end": 9506,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9480,
											"end": 9506,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9480,
											"end": 9506,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9516,
											"end": 9587,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 9584,
											"end": 9585,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9573,
											"end": 9582,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9569,
											"end": 9586,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9560,
											"end": 9566,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 9516,
											"end": 9587,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 9516,
											"end": 9587,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9516,
											"end": 9587,
											"name": "tag",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 9516,
											"end": 9587,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9597,
											"end": 9669,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 9665,
											"end": 9667,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9654,
											"end": 9663,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9650,
											"end": 9668,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9641,
											"end": 9647,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 9597,
											"end": 9669,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 9597,
											"end": 9669,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9597,
											"end": 9669,
											"name": "tag",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 9597,
											"end": 9669,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9344,
											"end": 9676,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 9344,
											"end": 9676,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 9344,
											"end": 9676,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9344,
											"end": 9676,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9344,
											"end": 9676,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9344,
											"end": 9676,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9682,
											"end": 9912,
											"name": "tag",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 9682,
											"end": 9912,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9822,
											"end": 9856,
											"name": "PUSH",
											"source": 5,
											"value": "5472616E7366657248656C7065723A3A73616665417070726F76653A20617070"
										},
										{
											"begin": 9818,
											"end": 9819,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9810,
											"end": 9816,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9806,
											"end": 9820,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9799,
											"end": 9857,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9891,
											"end": 9904,
											"name": "PUSH",
											"source": 5,
											"value": "726F7665206661696C6564000000000000000000000000000000000000000000"
										},
										{
											"begin": 9886,
											"end": 9888,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9878,
											"end": 9884,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9874,
											"end": 9889,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9867,
											"end": 9905,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9682,
											"end": 9912,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9682,
											"end": 9912,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9918,
											"end": 10284,
											"name": "tag",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 9918,
											"end": 10284,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10060,
											"end": 10063,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10081,
											"end": 10148,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 10145,
											"end": 10147,
											"name": "PUSH",
											"source": 5,
											"value": "2B"
										},
										{
											"begin": 10140,
											"end": 10143,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10081,
											"end": 10148,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 10081,
											"end": 10148,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10081,
											"end": 10148,
											"name": "tag",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 10081,
											"end": 10148,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10074,
											"end": 10148,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10074,
											"end": 10148,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10157,
											"end": 10250,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 10246,
											"end": 10249,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10157,
											"end": 10250,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 10157,
											"end": 10250,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10157,
											"end": 10250,
											"name": "tag",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 10157,
											"end": 10250,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10275,
											"end": 10277,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10270,
											"end": 10273,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10266,
											"end": 10278,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10259,
											"end": 10278,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10259,
											"end": 10278,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9918,
											"end": 10284,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9918,
											"end": 10284,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9918,
											"end": 10284,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9918,
											"end": 10284,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10290,
											"end": 10709,
											"name": "tag",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 10290,
											"end": 10709,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10456,
											"end": 10460,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10494,
											"end": 10496,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10483,
											"end": 10492,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10479,
											"end": 10497,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10471,
											"end": 10497,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10471,
											"end": 10497,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10543,
											"end": 10552,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10537,
											"end": 10541,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10533,
											"end": 10553,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 10529,
											"end": 10530,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10518,
											"end": 10527,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10514,
											"end": 10531,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10507,
											"end": 10554,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10571,
											"end": 10702,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "199"
										},
										{
											"begin": 10697,
											"end": 10701,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10571,
											"end": 10702,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 10571,
											"end": 10702,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10571,
											"end": 10702,
											"name": "tag",
											"source": 5,
											"value": "199"
										},
										{
											"begin": 10571,
											"end": 10702,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10563,
											"end": 10702,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10563,
											"end": 10702,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10290,
											"end": 10709,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10290,
											"end": 10709,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10290,
											"end": 10709,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10290,
											"end": 10709,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@uniswap/lib/contracts/libraries/TransferHelper.sol",
								"@uniswap/swap-router-contracts/contracts/interfaces/IV3SwapRouter.sol",
								"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
								"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
								"contracts/AtomicArbitrage/benchmark.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"TIGER()": "f8bb9160",
							"doArbitrage(uint256)": "a048600d",
							"swapRouter()": "c31c9c07"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"TIGER\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"name\":\"doArbitrage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapRouter\",\"outputs\":[{\"internalType\":\"contract IV3SwapRouter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/AtomicArbitrage/benchmark.sol\":\"Arbitrage\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/lib/contracts/libraries/TransferHelper.sol\":{\"keccak256\":\"0xaff99b54915f57e2a4e71b8d15afd4ee425410e5a6f45c07517ae1beb806f8bd\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://15432ec031f4cfa6709921289e198b030a0c5eac75b5a3e0eb64827a2b3b5595\",\"dweb:/ipfs/QmZvR1KuuDvuzXFiADCngTKyMCTy31uhq9U6CazP59B55j\"]},\"@uniswap/swap-router-contracts/contracts/interfaces/IV3SwapRouter.sol\":{\"keccak256\":\"0xa2300af2b82af292216a8f3f301a86e65463655fff9fb791515e3fd2ccf4a14c\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a0a9bece58527fb5c1773d86666c7a71884a78f413e230dfa8c8a7f8ea564ef9\",\"dweb:/ipfs/QmbDhvpoZJN1KntxUUxkYV89RPTwqVBiyHBkvVh4QHSveo\"]},\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]},\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"keccak256\":\"0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53\",\"dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM\"]},\"contracts/AtomicArbitrage/benchmark.sol\":{\"keccak256\":\"0x77ca5d583f8c430f878d9930a7aa9406cce1893b85d5726ed17e6f086e36ec22\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://9597c20b88d58b7a97da153b24fe17747cb23d54176d7ff03421694d057bc4e3\",\"dweb:/ipfs/QmYs1hRdbpFg876RjQWTDwfrrsozF8ePrHxiUx9UZpfDJL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@uniswap/lib/contracts/libraries/TransferHelper.sol": {
				"ast": {
					"absolutePath": "@uniswap/lib/contracts/libraries/TransferHelper.sol",
					"exportedSymbols": {
						"TransferHelper": [
							159
						]
					},
					"id": 160,
					"license": "GPL-3.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "46:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "TransferHelper",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 159,
							"linearizedBaseContracts": [
								159
							],
							"name": "TransferHelper",
							"nameLocation": "191:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 43,
										"nodeType": "Block",
										"src": "314:332:0",
										"statements": [
											{
												"assignments": [
													11,
													13
												],
												"declarations": [
													{
														"constant": false,
														"id": 11,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "395:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 43,
														"src": "390:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 10,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "390:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 13,
														"mutability": "mutable",
														"name": "data",
														"nameLocation": "417:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 43,
														"src": "404:17:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 12,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "404:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 23,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30783039356561376233",
																	"id": 18,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "459:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_157198259_by_1",
																		"typeString": "int_const 157198259"
																	},
																	"value": "0x095ea7b3"
																},
																{
																	"id": 19,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 5,
																	"src": "471:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 20,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 7,
																	"src": "475:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_157198259_by_1",
																		"typeString": "int_const 157198259"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 16,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "436:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 17,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "440:18:0",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "436:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 21,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "436:45:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 14,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3,
															"src": "425:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 15,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "431:4:0",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "425:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 22,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "425:57:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "389:93:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 39,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 25,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 11,
																"src": "513:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 37,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 29,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 26,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 13,
																					"src": "525:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 27,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "530:6:0",
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "525:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 28,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "540:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "525:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 32,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 13,
																					"src": "556:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				{
																					"components": [
																						{
																							"id": 34,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "563:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_bool_$",
																								"typeString": "type(bool)"
																							},
																							"typeName": {
																								"id": 33,
																								"name": "bool",
																								"nodeType": "ElementaryTypeName",
																								"src": "563:4:0",
																								"typeDescriptions": {}
																							}
																						}
																					],
																					"id": 35,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "562:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					},
																					{
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				],
																				"expression": {
																					"id": 30,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "545:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 31,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberLocation": "549:6:0",
																				"memberName": "decode",
																				"nodeType": "MemberAccess",
																				"src": "545:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 36,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "545:24:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "525:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 38,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "524:46:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "513:57:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e7366657248656c7065723a3a73616665417070726f76653a20617070726f7665206661696c6564",
															"id": 40,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "584:45:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b4dd1eb4be82119fd3a99acfb5dd4c57591eb0ea309359b1af3d65a4460c7123",
																"typeString": "literal_string \"TransferHelper::safeApprove: approve failed\""
															},
															"value": "TransferHelper::safeApprove: approve failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b4dd1eb4be82119fd3a99acfb5dd4c57591eb0ea309359b1af3d65a4460c7123",
																"typeString": "literal_string \"TransferHelper::safeApprove: approve failed\""
															}
														],
														"id": 24,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "492:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 41,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "492:147:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 42,
												"nodeType": "ExpressionStatement",
												"src": "492:147:0"
											}
										]
									},
									"id": 44,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "221:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "250:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "242:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "242:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "273:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "265:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "265:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "293:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "285:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "285:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "232:72:0"
									},
									"returnParameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "314:0:0"
									},
									"scope": 159,
									"src": "212:434:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 86,
										"nodeType": "Block",
										"src": "755:335:0",
										"statements": [
											{
												"assignments": [
													54,
													56
												],
												"declarations": [
													{
														"constant": false,
														"id": 54,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "837:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 86,
														"src": "832:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 53,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "832:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 56,
														"mutability": "mutable",
														"name": "data",
														"nameLocation": "859:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 86,
														"src": "846:17:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 55,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "846:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 66,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30786139303539636262",
																	"id": 61,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "901:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2835717307_by_1",
																		"typeString": "int_const 2835717307"
																	},
																	"value": "0xa9059cbb"
																},
																{
																	"id": 62,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 48,
																	"src": "913:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 63,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 50,
																	"src": "917:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_2835717307_by_1",
																		"typeString": "int_const 2835717307"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 59,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "878:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 60,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "882:18:0",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "878:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "878:45:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 57,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 46,
															"src": "867:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 58,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "873:4:0",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "867:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "867:57:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "831:93:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 68,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 54,
																"src": "955:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 80,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 72,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 69,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 56,
																					"src": "967:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 70,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "972:6:0",
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "967:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 71,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "982:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "967:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 75,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 56,
																					"src": "998:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				{
																					"components": [
																						{
																							"id": 77,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "1005:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_bool_$",
																								"typeString": "type(bool)"
																							},
																							"typeName": {
																								"id": 76,
																								"name": "bool",
																								"nodeType": "ElementaryTypeName",
																								"src": "1005:4:0",
																								"typeDescriptions": {}
																							}
																						}
																					],
																					"id": 78,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "1004:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					},
																					{
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				],
																				"expression": {
																					"id": 73,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "987:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 74,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberLocation": "991:6:0",
																				"memberName": "decode",
																				"nodeType": "MemberAccess",
																				"src": "987:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 79,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "987:24:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "967:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 81,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "966:46:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "955:57:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e7366657248656c7065723a3a736166655472616e736665723a207472616e73666572206661696c6564",
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1026:47:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_daea69421eeb1164e163c36f3d4349f0db3ec4e0d1381bd5bf4faf53496c2611",
																"typeString": "literal_string \"TransferHelper::safeTransfer: transfer failed\""
															},
															"value": "TransferHelper::safeTransfer: transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_daea69421eeb1164e163c36f3d4349f0db3ec4e0d1381bd5bf4faf53496c2611",
																"typeString": "literal_string \"TransferHelper::safeTransfer: transfer failed\""
															}
														],
														"id": 67,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "934:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "934:149:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "934:149:0"
											}
										]
									},
									"id": 87,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "661:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 46,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "691:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "683:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 45,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 48,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "714:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "706:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 47,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "706:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "734:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "726:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 49,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "726:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:72:0"
									},
									"returnParameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "755:0:0"
									},
									"scope": 159,
									"src": "652:438:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 132,
										"nodeType": "Block",
										"src": "1225:357:0",
										"statements": [
											{
												"assignments": [
													99,
													101
												],
												"declarations": [
													{
														"constant": false,
														"id": 99,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1319:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 132,
														"src": "1314:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 98,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1314:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 101,
														"mutability": "mutable",
														"name": "data",
														"nameLocation": "1341:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 132,
														"src": "1328:17:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 100,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1328:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 112,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30783233623837326464",
																	"id": 106,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1383:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_599290589_by_1",
																		"typeString": "int_const 599290589"
																	},
																	"value": "0x23b872dd"
																},
																{
																	"id": 107,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 91,
																	"src": "1395:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 108,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 93,
																	"src": "1401:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 109,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 95,
																	"src": "1405:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_599290589_by_1",
																		"typeString": "int_const 599290589"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 104,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1360:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 105,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1364:18:0",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1360:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 110,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1360:51:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 102,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 89,
															"src": "1349:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 103,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1355:4:0",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "1349:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1349:63:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1313:99:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 128,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 114,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 99,
																"src": "1443:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 126,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 118,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 115,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 101,
																					"src": "1455:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 116,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "1460:6:0",
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "1455:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 117,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1470:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "1455:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 121,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 101,
																					"src": "1486:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				{
																					"components": [
																						{
																							"id": 123,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "1493:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_bool_$",
																								"typeString": "type(bool)"
																							},
																							"typeName": {
																								"id": 122,
																								"name": "bool",
																								"nodeType": "ElementaryTypeName",
																								"src": "1493:4:0",
																								"typeDescriptions": {}
																							}
																						}
																					],
																					"id": 124,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "1492:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					},
																					{
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				],
																				"expression": {
																					"id": 119,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "1475:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 120,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberLocation": "1479:6:0",
																				"memberName": "decode",
																				"nodeType": "MemberAccess",
																				"src": "1475:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 125,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1475:24:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "1455:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 127,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1454:46:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1443:57:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e7366657248656c7065723a3a7472616e7366657246726f6d3a207472616e7366657246726f6d206661696c6564",
															"id": 129,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1514:51:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3f8faf98afe9344b6d4b0e75b0101259bf282914b3b5a9320c6918b6e27ede1c",
																"typeString": "literal_string \"TransferHelper::transferFrom: transferFrom failed\""
															},
															"value": "TransferHelper::transferFrom: transferFrom failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3f8faf98afe9344b6d4b0e75b0101259bf282914b3b5a9320c6918b6e27ede1c",
																"typeString": "literal_string \"TransferHelper::transferFrom: transferFrom failed\""
															}
														],
														"id": 113,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1422:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1422:153:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 131,
												"nodeType": "ExpressionStatement",
												"src": "1422:153:0"
											}
										]
									},
									"id": 133,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1105:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 89,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1139:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "1131:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 88,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1131:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1162:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "1154:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 90,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1154:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1184:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "1176:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1176:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1204:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "1196:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1196:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1121:94:0"
									},
									"returnParameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1225:0:0"
									},
									"scope": 159,
									"src": "1096:486:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 157,
										"nodeType": "Block",
										"src": "1649:153:0",
										"statements": [
											{
												"assignments": [
													141,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 141,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1665:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 157,
														"src": "1660:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 140,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1660:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 151,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 148,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1710:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 147,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "1700:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (bytes memory)"
																},
																"typeName": {
																	"id": 146,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "1704:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_storage_ptr",
																		"typeString": "bytes"
																	}
																}
															},
															"id": 149,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1700:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 142,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 135,
																"src": "1678:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 143,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1681:4:0",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1678:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 145,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 144,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 137,
																"src": "1693:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1678:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1678:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1659:54:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 153,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 141,
															"src": "1731:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e7366657248656c7065723a3a736166655472616e736665724554483a20455448207472616e73666572206661696c6564",
															"id": 154,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1740:54:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_43d7bec223ecf9eb06ea147e7d564bc71c2448662d62a4ea86ce71fc4518b350",
																"typeString": "literal_string \"TransferHelper::safeTransferETH: ETH transfer failed\""
															},
															"value": "TransferHelper::safeTransferETH: ETH transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_43d7bec223ecf9eb06ea147e7d564bc71c2448662d62a4ea86ce71fc4518b350",
																"typeString": "literal_string \"TransferHelper::safeTransferETH: ETH transfer failed\""
															}
														],
														"id": 152,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1723:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 155,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1723:72:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 156,
												"nodeType": "ExpressionStatement",
												"src": "1723:72:0"
											}
										]
									},
									"id": 158,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferETH",
									"nameLocation": "1597:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1621:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "1613:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 134,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1613:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1633:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "1625:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1625:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1612:27:0"
									},
									"returnParameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1649:0:0"
									},
									"scope": 159,
									"src": "1588:214:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 160,
							"src": "183:1621:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "46:1759:0"
				},
				"id": 0
			},
			"@uniswap/swap-router-contracts/contracts/interfaces/IV3SwapRouter.sol": {
				"ast": {
					"absolutePath": "@uniswap/swap-router-contracts/contracts/interfaces/IV3SwapRouter.sol",
					"exportedSymbols": {
						"IUniswapV3SwapCallback": [
							265
						],
						"IV3SwapRouter": [
							251
						]
					},
					"id": 252,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 161,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:1"
						},
						{
							"id": 162,
							"literals": [
								"abicoder",
								"v2"
							],
							"nodeType": "PragmaDirective",
							"src": "70:19:1"
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
							"file": "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
							"id": 163,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 252,
							"sourceUnit": 266,
							"src": "91:83:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 165,
										"name": "IUniswapV3SwapCallback",
										"nameLocations": [
											"307:22:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 265,
										"src": "307:22:1"
									},
									"id": 166,
									"nodeType": "InheritanceSpecifier",
									"src": "307:22:1"
								}
							],
							"canonicalName": "IV3SwapRouter",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 164,
								"nodeType": "StructuredDocumentation",
								"src": "176:104:1",
								"text": "@title Router token swapping functionality\n @notice Functions for swapping tokens via Uniswap V3"
							},
							"fullyImplemented": false,
							"id": 251,
							"linearizedBaseContracts": [
								251,
								265
							],
							"name": "IV3SwapRouter",
							"nameLocation": "290:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "IV3SwapRouter.ExactInputSingleParams",
									"id": 181,
									"members": [
										{
											"constant": false,
											"id": 168,
											"mutability": "mutable",
											"name": "tokenIn",
											"nameLocation": "384:7:1",
											"nodeType": "VariableDeclaration",
											"scope": 181,
											"src": "376:15:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 167,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "376:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 170,
											"mutability": "mutable",
											"name": "tokenOut",
											"nameLocation": "409:8:1",
											"nodeType": "VariableDeclaration",
											"scope": 181,
											"src": "401:16:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 169,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "401:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 172,
											"mutability": "mutable",
											"name": "fee",
											"nameLocation": "434:3:1",
											"nodeType": "VariableDeclaration",
											"scope": 181,
											"src": "427:10:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint24",
												"typeString": "uint24"
											},
											"typeName": {
												"id": 171,
												"name": "uint24",
												"nodeType": "ElementaryTypeName",
												"src": "427:6:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 174,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "455:9:1",
											"nodeType": "VariableDeclaration",
											"scope": 181,
											"src": "447:17:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 173,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "447:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 176,
											"mutability": "mutable",
											"name": "amountIn",
											"nameLocation": "482:8:1",
											"nodeType": "VariableDeclaration",
											"scope": 181,
											"src": "474:16:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 175,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "474:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 178,
											"mutability": "mutable",
											"name": "amountOutMinimum",
											"nameLocation": "508:16:1",
											"nodeType": "VariableDeclaration",
											"scope": 181,
											"src": "500:24:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 177,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "500:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 180,
											"mutability": "mutable",
											"name": "sqrtPriceLimitX96",
											"nameLocation": "542:17:1",
											"nodeType": "VariableDeclaration",
											"scope": 181,
											"src": "534:25:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint160",
												"typeString": "uint160"
											},
											"typeName": {
												"id": 179,
												"name": "uint160",
												"nodeType": "ElementaryTypeName",
												"src": "534:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactInputSingleParams",
									"nameLocation": "343:22:1",
									"nodeType": "StructDefinition",
									"scope": 251,
									"src": "336:230:1",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 182,
										"nodeType": "StructuredDocumentation",
										"src": "572:439:1",
										"text": "@notice Swaps `amountIn` of one token for as much as possible of another token\n @dev Setting `amountIn` to 0 will cause the contract to look up its own balance,\n and swap the entire amount, enabling contracts to send tokens before calling this function.\n @param params The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\n @return amountOut The amount of the received token"
									},
									"functionSelector": "04e45aaf",
									"id": 190,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exactInputSingle",
									"nameLocation": "1025:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "1074:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "1042:38:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactInputSingleParams_$181_calldata_ptr",
													"typeString": "struct IV3SwapRouter.ExactInputSingleParams"
												},
												"typeName": {
													"id": 184,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 183,
														"name": "ExactInputSingleParams",
														"nameLocations": [
															"1042:22:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 181,
														"src": "1042:22:1"
													},
													"referencedDeclaration": 181,
													"src": "1042:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactInputSingleParams_$181_storage_ptr",
														"typeString": "struct IV3SwapRouter.ExactInputSingleParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:40:1"
									},
									"returnParameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 188,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "1116:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "1108:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 187,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1108:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1107:19:1"
									},
									"scope": 251,
									"src": "1016:111:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "IV3SwapRouter.ExactInputParams",
									"id": 199,
									"members": [
										{
											"constant": false,
											"id": 192,
											"mutability": "mutable",
											"name": "path",
											"nameLocation": "1173:4:1",
											"nodeType": "VariableDeclaration",
											"scope": 199,
											"src": "1167:10:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 191,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "1167:5:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 194,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "1195:9:1",
											"nodeType": "VariableDeclaration",
											"scope": 199,
											"src": "1187:17:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 193,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1187:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 196,
											"mutability": "mutable",
											"name": "amountIn",
											"nameLocation": "1222:8:1",
											"nodeType": "VariableDeclaration",
											"scope": 199,
											"src": "1214:16:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 195,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1214:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 198,
											"mutability": "mutable",
											"name": "amountOutMinimum",
											"nameLocation": "1248:16:1",
											"nodeType": "VariableDeclaration",
											"scope": 199,
											"src": "1240:24:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 197,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1240:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactInputParams",
									"nameLocation": "1140:16:1",
									"nodeType": "StructDefinition",
									"scope": 251,
									"src": "1133:138:1",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 200,
										"nodeType": "StructuredDocumentation",
										"src": "1277:462:1",
										"text": "@notice Swaps `amountIn` of one token for as much as possible of another along the specified path\n @dev Setting `amountIn` to 0 will cause the contract to look up its own balance,\n and swap the entire amount, enabling contracts to send tokens before calling this function.\n @param params The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\n @return amountOut The amount of the received token"
									},
									"functionSelector": "b858183f",
									"id": 208,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exactInput",
									"nameLocation": "1753:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "1790:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 208,
												"src": "1764:32:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactInputParams_$199_calldata_ptr",
													"typeString": "struct IV3SwapRouter.ExactInputParams"
												},
												"typeName": {
													"id": 202,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 201,
														"name": "ExactInputParams",
														"nameLocations": [
															"1764:16:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 199,
														"src": "1764:16:1"
													},
													"referencedDeclaration": 199,
													"src": "1764:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactInputParams_$199_storage_ptr",
														"typeString": "struct IV3SwapRouter.ExactInputParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1763:34:1"
									},
									"returnParameters": {
										"id": 207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "1832:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 208,
												"src": "1824:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 205,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1824:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1823:19:1"
									},
									"scope": 251,
									"src": "1744:99:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "IV3SwapRouter.ExactOutputSingleParams",
									"id": 223,
									"members": [
										{
											"constant": false,
											"id": 210,
											"mutability": "mutable",
											"name": "tokenIn",
											"nameLocation": "1898:7:1",
											"nodeType": "VariableDeclaration",
											"scope": 223,
											"src": "1890:15:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 209,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1890:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 212,
											"mutability": "mutable",
											"name": "tokenOut",
											"nameLocation": "1923:8:1",
											"nodeType": "VariableDeclaration",
											"scope": 223,
											"src": "1915:16:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 211,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1915:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 214,
											"mutability": "mutable",
											"name": "fee",
											"nameLocation": "1948:3:1",
											"nodeType": "VariableDeclaration",
											"scope": 223,
											"src": "1941:10:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint24",
												"typeString": "uint24"
											},
											"typeName": {
												"id": 213,
												"name": "uint24",
												"nodeType": "ElementaryTypeName",
												"src": "1941:6:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 216,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "1969:9:1",
											"nodeType": "VariableDeclaration",
											"scope": 223,
											"src": "1961:17:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 215,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1961:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 218,
											"mutability": "mutable",
											"name": "amountOut",
											"nameLocation": "1996:9:1",
											"nodeType": "VariableDeclaration",
											"scope": 223,
											"src": "1988:17:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 217,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1988:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 220,
											"mutability": "mutable",
											"name": "amountInMaximum",
											"nameLocation": "2023:15:1",
											"nodeType": "VariableDeclaration",
											"scope": 223,
											"src": "2015:23:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 219,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2015:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 222,
											"mutability": "mutable",
											"name": "sqrtPriceLimitX96",
											"nameLocation": "2056:17:1",
											"nodeType": "VariableDeclaration",
											"scope": 223,
											"src": "2048:25:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint160",
												"typeString": "uint160"
											},
											"typeName": {
												"id": 221,
												"name": "uint160",
												"nodeType": "ElementaryTypeName",
												"src": "2048:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactOutputSingleParams",
									"nameLocation": "1856:23:1",
									"nodeType": "StructDefinition",
									"scope": 251,
									"src": "1849:231:1",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 224,
										"nodeType": "StructuredDocumentation",
										"src": "2086:304:1",
										"text": "@notice Swaps as little as possible of one token for `amountOut` of another token\n that may remain in the router after the swap.\n @param params The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\n @return amountIn The amount of the input token"
									},
									"functionSelector": "5023b4df",
									"id": 232,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exactOutputSingle",
									"nameLocation": "2404:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "2455:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "2422:39:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactOutputSingleParams_$223_calldata_ptr",
													"typeString": "struct IV3SwapRouter.ExactOutputSingleParams"
												},
												"typeName": {
													"id": 226,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 225,
														"name": "ExactOutputSingleParams",
														"nameLocations": [
															"2422:23:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 223,
														"src": "2422:23:1"
													},
													"referencedDeclaration": 223,
													"src": "2422:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactOutputSingleParams_$223_storage_ptr",
														"typeString": "struct IV3SwapRouter.ExactOutputSingleParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2421:41:1"
									},
									"returnParameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "2497:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "2489:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2489:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2488:18:1"
									},
									"scope": 251,
									"src": "2395:112:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "IV3SwapRouter.ExactOutputParams",
									"id": 241,
									"members": [
										{
											"constant": false,
											"id": 234,
											"mutability": "mutable",
											"name": "path",
											"nameLocation": "2554:4:1",
											"nodeType": "VariableDeclaration",
											"scope": 241,
											"src": "2548:10:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 233,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "2548:5:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 236,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "2576:9:1",
											"nodeType": "VariableDeclaration",
											"scope": 241,
											"src": "2568:17:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 235,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2568:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 238,
											"mutability": "mutable",
											"name": "amountOut",
											"nameLocation": "2603:9:1",
											"nodeType": "VariableDeclaration",
											"scope": 241,
											"src": "2595:17:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 237,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2595:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 240,
											"mutability": "mutable",
											"name": "amountInMaximum",
											"nameLocation": "2630:15:1",
											"nodeType": "VariableDeclaration",
											"scope": 241,
											"src": "2622:23:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 239,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2622:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactOutputParams",
									"nameLocation": "2520:17:1",
									"nodeType": "StructDefinition",
									"scope": 251,
									"src": "2513:139:1",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 242,
										"nodeType": "StructuredDocumentation",
										"src": "2658:338:1",
										"text": "@notice Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\n that may remain in the router after the swap.\n @param params The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\n @return amountIn The amount of the input token"
									},
									"functionSelector": "09b81346",
									"id": 250,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exactOutput",
									"nameLocation": "3010:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "3049:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 250,
												"src": "3022:33:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactOutputParams_$241_calldata_ptr",
													"typeString": "struct IV3SwapRouter.ExactOutputParams"
												},
												"typeName": {
													"id": 244,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 243,
														"name": "ExactOutputParams",
														"nameLocations": [
															"3022:17:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 241,
														"src": "3022:17:1"
													},
													"referencedDeclaration": 241,
													"src": "3022:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactOutputParams_$241_storage_ptr",
														"typeString": "struct IV3SwapRouter.ExactOutputParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3021:35:1"
									},
									"returnParameters": {
										"id": 249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 248,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "3091:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 250,
												"src": "3083:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 247,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3083:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3082:18:1"
									},
									"scope": 251,
									"src": "3001:100:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 252,
							"src": "280:2823:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:3059:1"
				},
				"id": 1
			},
			"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
					"exportedSymbols": {
						"IUniswapV3SwapCallback": [
							265
						]
					},
					"id": 266,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 253,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3SwapCallback",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 254,
								"nodeType": "StructuredDocumentation",
								"src": "71:144:2",
								"text": "@title Callback for IUniswapV3PoolActions#swap\n @notice Any contract that calls IUniswapV3PoolActions#swap must implement this interface"
							},
							"fullyImplemented": false,
							"id": 265,
							"linearizedBaseContracts": [
								265
							],
							"name": "IUniswapV3SwapCallback",
							"nameLocation": "225:22:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "254:898:2",
										"text": "@notice Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\n @dev In the implementation you must pay the pool tokens owed for the swap.\n The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\n amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\n @param amount0Delta The amount of token0 that was sent (negative) or must be received (positive) by the pool by\n the end of the swap. If positive, the callback must send that amount of token0 to the pool.\n @param amount1Delta The amount of token1 that was sent (negative) or must be received (positive) by the pool by\n the end of the swap. If positive, the callback must send that amount of token1 to the pool.\n @param data Any data passed through by the caller via the IUniswapV3PoolActions#swap call"
									},
									"functionSelector": "fa461e33",
									"id": 264,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "uniswapV3SwapCallback",
									"nameLocation": "1166:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "amount0Delta",
												"nameLocation": "1204:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "1197:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 256,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1197:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "amount1Delta",
												"nameLocation": "1233:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "1226:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 258,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1226:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1270:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "1255:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 260,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1255:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1187:93:2"
									},
									"returnParameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1289:0:2"
									},
									"scope": 265,
									"src": "1157:133:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 266,
							"src": "215:1077:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:1248:2"
				},
				"id": 2
			},
			"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
					"exportedSymbols": {
						"ISwapRouter": [
							365
						],
						"IUniswapV3SwapCallback": [
							265
						]
					},
					"id": 366,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 267,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:3"
						},
						{
							"id": 268,
							"literals": [
								"abicoder",
								"v2"
							],
							"nodeType": "PragmaDirective",
							"src": "70:19:3"
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
							"file": "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
							"id": 269,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 366,
							"sourceUnit": 266,
							"src": "91:83:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 271,
										"name": "IUniswapV3SwapCallback",
										"nameLocations": [
											"305:22:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 265,
										"src": "305:22:3"
									},
									"id": 272,
									"nodeType": "InheritanceSpecifier",
									"src": "305:22:3"
								}
							],
							"canonicalName": "ISwapRouter",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 270,
								"nodeType": "StructuredDocumentation",
								"src": "176:104:3",
								"text": "@title Router token swapping functionality\n @notice Functions for swapping tokens via Uniswap V3"
							},
							"fullyImplemented": false,
							"id": 365,
							"linearizedBaseContracts": [
								365,
								265
							],
							"name": "ISwapRouter",
							"nameLocation": "290:11:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "ISwapRouter.ExactInputSingleParams",
									"id": 289,
									"members": [
										{
											"constant": false,
											"id": 274,
											"mutability": "mutable",
											"name": "tokenIn",
											"nameLocation": "382:7:3",
											"nodeType": "VariableDeclaration",
											"scope": 289,
											"src": "374:15:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 273,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "374:7:3",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 276,
											"mutability": "mutable",
											"name": "tokenOut",
											"nameLocation": "407:8:3",
											"nodeType": "VariableDeclaration",
											"scope": 289,
											"src": "399:16:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 275,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "399:7:3",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 278,
											"mutability": "mutable",
											"name": "fee",
											"nameLocation": "432:3:3",
											"nodeType": "VariableDeclaration",
											"scope": 289,
											"src": "425:10:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint24",
												"typeString": "uint24"
											},
											"typeName": {
												"id": 277,
												"name": "uint24",
												"nodeType": "ElementaryTypeName",
												"src": "425:6:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 280,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "453:9:3",
											"nodeType": "VariableDeclaration",
											"scope": 289,
											"src": "445:17:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 279,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "445:7:3",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 282,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "480:8:3",
											"nodeType": "VariableDeclaration",
											"scope": 289,
											"src": "472:16:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 281,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "472:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 284,
											"mutability": "mutable",
											"name": "amountIn",
											"nameLocation": "506:8:3",
											"nodeType": "VariableDeclaration",
											"scope": 289,
											"src": "498:16:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 283,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "498:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 286,
											"mutability": "mutable",
											"name": "amountOutMinimum",
											"nameLocation": "532:16:3",
											"nodeType": "VariableDeclaration",
											"scope": 289,
											"src": "524:24:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 285,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "524:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 288,
											"mutability": "mutable",
											"name": "sqrtPriceLimitX96",
											"nameLocation": "566:17:3",
											"nodeType": "VariableDeclaration",
											"scope": 289,
											"src": "558:25:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint160",
												"typeString": "uint160"
											},
											"typeName": {
												"id": 287,
												"name": "uint160",
												"nodeType": "ElementaryTypeName",
												"src": "558:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactInputSingleParams",
									"nameLocation": "341:22:3",
									"nodeType": "StructDefinition",
									"scope": 365,
									"src": "334:256:3",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 290,
										"nodeType": "StructuredDocumentation",
										"src": "596:250:3",
										"text": "@notice Swaps `amountIn` of one token for as much as possible of another token\n @param params The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\n @return amountOut The amount of the received token"
									},
									"functionSelector": "414bf389",
									"id": 298,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exactInputSingle",
									"nameLocation": "860:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 293,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "909:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "877:38:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactInputSingleParams_$289_calldata_ptr",
													"typeString": "struct ISwapRouter.ExactInputSingleParams"
												},
												"typeName": {
													"id": 292,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 291,
														"name": "ExactInputSingleParams",
														"nameLocations": [
															"877:22:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 289,
														"src": "877:22:3"
													},
													"referencedDeclaration": 289,
													"src": "877:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactInputSingleParams_$289_storage_ptr",
														"typeString": "struct ISwapRouter.ExactInputSingleParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "876:40:3"
									},
									"returnParameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "951:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "943:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 295,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "943:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "942:19:3"
									},
									"scope": 365,
									"src": "851:111:3",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "ISwapRouter.ExactInputParams",
									"id": 309,
									"members": [
										{
											"constant": false,
											"id": 300,
											"mutability": "mutable",
											"name": "path",
											"nameLocation": "1008:4:3",
											"nodeType": "VariableDeclaration",
											"scope": 309,
											"src": "1002:10:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 299,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "1002:5:3",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 302,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "1030:9:3",
											"nodeType": "VariableDeclaration",
											"scope": 309,
											"src": "1022:17:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 301,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1022:7:3",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 304,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "1057:8:3",
											"nodeType": "VariableDeclaration",
											"scope": 309,
											"src": "1049:16:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 303,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1049:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 306,
											"mutability": "mutable",
											"name": "amountIn",
											"nameLocation": "1083:8:3",
											"nodeType": "VariableDeclaration",
											"scope": 309,
											"src": "1075:16:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 305,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1075:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 308,
											"mutability": "mutable",
											"name": "amountOutMinimum",
											"nameLocation": "1109:16:3",
											"nodeType": "VariableDeclaration",
											"scope": 309,
											"src": "1101:24:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 307,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1101:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactInputParams",
									"nameLocation": "975:16:3",
									"nodeType": "StructDefinition",
									"scope": 365,
									"src": "968:164:3",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 310,
										"nodeType": "StructuredDocumentation",
										"src": "1138:273:3",
										"text": "@notice Swaps `amountIn` of one token for as much as possible of another along the specified path\n @param params The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\n @return amountOut The amount of the received token"
									},
									"functionSelector": "c04b8d59",
									"id": 318,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exactInput",
									"nameLocation": "1425:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 313,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "1462:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "1436:32:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactInputParams_$309_calldata_ptr",
													"typeString": "struct ISwapRouter.ExactInputParams"
												},
												"typeName": {
													"id": 312,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 311,
														"name": "ExactInputParams",
														"nameLocations": [
															"1436:16:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 309,
														"src": "1436:16:3"
													},
													"referencedDeclaration": 309,
													"src": "1436:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactInputParams_$309_storage_ptr",
														"typeString": "struct ISwapRouter.ExactInputParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1435:34:3"
									},
									"returnParameters": {
										"id": 317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 316,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "1504:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "1496:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 315,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1496:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1495:19:3"
									},
									"scope": 365,
									"src": "1416:99:3",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "ISwapRouter.ExactOutputSingleParams",
									"id": 335,
									"members": [
										{
											"constant": false,
											"id": 320,
											"mutability": "mutable",
											"name": "tokenIn",
											"nameLocation": "1570:7:3",
											"nodeType": "VariableDeclaration",
											"scope": 335,
											"src": "1562:15:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 319,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1562:7:3",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 322,
											"mutability": "mutable",
											"name": "tokenOut",
											"nameLocation": "1595:8:3",
											"nodeType": "VariableDeclaration",
											"scope": 335,
											"src": "1587:16:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 321,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1587:7:3",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 324,
											"mutability": "mutable",
											"name": "fee",
											"nameLocation": "1620:3:3",
											"nodeType": "VariableDeclaration",
											"scope": 335,
											"src": "1613:10:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint24",
												"typeString": "uint24"
											},
											"typeName": {
												"id": 323,
												"name": "uint24",
												"nodeType": "ElementaryTypeName",
												"src": "1613:6:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 326,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "1641:9:3",
											"nodeType": "VariableDeclaration",
											"scope": 335,
											"src": "1633:17:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 325,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1633:7:3",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 328,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "1668:8:3",
											"nodeType": "VariableDeclaration",
											"scope": 335,
											"src": "1660:16:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 327,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1660:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 330,
											"mutability": "mutable",
											"name": "amountOut",
											"nameLocation": "1694:9:3",
											"nodeType": "VariableDeclaration",
											"scope": 335,
											"src": "1686:17:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 329,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1686:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 332,
											"mutability": "mutable",
											"name": "amountInMaximum",
											"nameLocation": "1721:15:3",
											"nodeType": "VariableDeclaration",
											"scope": 335,
											"src": "1713:23:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 331,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1713:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 334,
											"mutability": "mutable",
											"name": "sqrtPriceLimitX96",
											"nameLocation": "1754:17:3",
											"nodeType": "VariableDeclaration",
											"scope": 335,
											"src": "1746:25:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint160",
												"typeString": "uint160"
											},
											"typeName": {
												"id": 333,
												"name": "uint160",
												"nodeType": "ElementaryTypeName",
												"src": "1746:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactOutputSingleParams",
									"nameLocation": "1528:23:3",
									"nodeType": "StructDefinition",
									"scope": 365,
									"src": "1521:257:3",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 336,
										"nodeType": "StructuredDocumentation",
										"src": "1784:250:3",
										"text": "@notice Swaps as little as possible of one token for `amountOut` of another token\n @param params The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\n @return amountIn The amount of the input token"
									},
									"functionSelector": "db3e2198",
									"id": 344,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exactOutputSingle",
									"nameLocation": "2048:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "2099:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "2066:39:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactOutputSingleParams_$335_calldata_ptr",
													"typeString": "struct ISwapRouter.ExactOutputSingleParams"
												},
												"typeName": {
													"id": 338,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 337,
														"name": "ExactOutputSingleParams",
														"nameLocations": [
															"2066:23:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 335,
														"src": "2066:23:3"
													},
													"referencedDeclaration": 335,
													"src": "2066:23:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactOutputSingleParams_$335_storage_ptr",
														"typeString": "struct ISwapRouter.ExactOutputSingleParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2065:41:3"
									},
									"returnParameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "2141:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "2133:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 341,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2133:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2132:18:3"
									},
									"scope": 365,
									"src": "2039:112:3",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "ISwapRouter.ExactOutputParams",
									"id": 355,
									"members": [
										{
											"constant": false,
											"id": 346,
											"mutability": "mutable",
											"name": "path",
											"nameLocation": "2198:4:3",
											"nodeType": "VariableDeclaration",
											"scope": 355,
											"src": "2192:10:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 345,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "2192:5:3",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 348,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "2220:9:3",
											"nodeType": "VariableDeclaration",
											"scope": 355,
											"src": "2212:17:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 347,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2212:7:3",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 350,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "2247:8:3",
											"nodeType": "VariableDeclaration",
											"scope": 355,
											"src": "2239:16:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 349,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2239:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 352,
											"mutability": "mutable",
											"name": "amountOut",
											"nameLocation": "2273:9:3",
											"nodeType": "VariableDeclaration",
											"scope": 355,
											"src": "2265:17:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 351,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2265:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 354,
											"mutability": "mutable",
											"name": "amountInMaximum",
											"nameLocation": "2300:15:3",
											"nodeType": "VariableDeclaration",
											"scope": 355,
											"src": "2292:23:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 353,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2292:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactOutputParams",
									"nameLocation": "2164:17:3",
									"nodeType": "StructDefinition",
									"scope": 365,
									"src": "2157:165:3",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 356,
										"nodeType": "StructuredDocumentation",
										"src": "2328:284:3",
										"text": "@notice Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\n @param params The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\n @return amountIn The amount of the input token"
									},
									"functionSelector": "f28c0498",
									"id": 364,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exactOutput",
									"nameLocation": "2626:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 359,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "2665:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "2638:33:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactOutputParams_$355_calldata_ptr",
													"typeString": "struct ISwapRouter.ExactOutputParams"
												},
												"typeName": {
													"id": 358,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 357,
														"name": "ExactOutputParams",
														"nameLocations": [
															"2638:17:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 355,
														"src": "2638:17:3"
													},
													"referencedDeclaration": 355,
													"src": "2638:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactOutputParams_$355_storage_ptr",
														"typeString": "struct ISwapRouter.ExactOutputParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2637:35:3"
									},
									"returnParameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "2707:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "2699:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 361,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2698:18:3"
									},
									"scope": 365,
									"src": "2617:100:3",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 366,
							"src": "280:2439:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:2675:3"
				},
				"id": 3
			},
			"contracts/AtomicArbitrage/benchmark.sol": {
				"ast": {
					"absolutePath": "contracts/AtomicArbitrage/benchmark.sol",
					"exportedSymbols": {
						"Arbitrage": [
							487
						],
						"ISwapRouter": [
							365
						],
						"IUniswapV3SwapCallback": [
							265
						],
						"IV3SwapRouter": [
							251
						],
						"TransferHelper": [
							159
						]
					},
					"id": 488,
					"license": "Unlicense",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 367,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "37:24:4"
						},
						{
							"id": 368,
							"literals": [
								"abicoder",
								"v2"
							],
							"nodeType": "PragmaDirective",
							"src": "62:19:4"
						},
						{
							"absolutePath": "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
							"file": "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
							"id": 369,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 488,
							"sourceUnit": 366,
							"src": "83:68:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/lib/contracts/libraries/TransferHelper.sol",
							"file": "@uniswap/lib/contracts/libraries/TransferHelper.sol",
							"id": 370,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 488,
							"sourceUnit": 160,
							"src": "152:61:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/swap-router-contracts/contracts/interfaces/IV3SwapRouter.sol",
							"file": "@uniswap/swap-router-contracts/contracts/interfaces/IV3SwapRouter.sol",
							"id": 371,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 488,
							"sourceUnit": 252,
							"src": "214:79:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Arbitrage",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 487,
							"linearizedBaseContracts": [
								487
							],
							"name": "Arbitrage",
							"nameLocation": "304:9:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 378,
									"mutability": "constant",
									"name": "MAX_UINT",
									"nameLocation": "338:8:4",
									"nodeType": "VariableDeclaration",
									"scope": 487,
									"src": "321:38:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 372,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "321:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639935_by_1",
											"typeString": "int_const 1157...(70 digits omitted)...9935"
										},
										"id": 377,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639936_by_1",
												"typeString": "int_const 1157...(70 digits omitted)...9936"
											},
											"id": 375,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "32",
												"id": 373,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "349:1:4",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_2_by_1",
													"typeString": "int_const 2"
												},
												"value": "2"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "323536",
												"id": 374,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "352:3:4",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_256_by_1",
													"typeString": "int_const 256"
												},
												"value": "256"
											},
											"src": "349:6:4",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639936_by_1",
												"typeString": "int_const 1157...(70 digits omitted)...9936"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "-",
										"rightExpression": {
											"hexValue": "31",
											"id": 376,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "358:1:4",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "349:10:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639935_by_1",
											"typeString": "int_const 1157...(70 digits omitted)...9935"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 381,
									"mutability": "constant",
									"name": "SWAP_ROUTER",
									"nameLocation": "391:11:4",
									"nodeType": "VariableDeclaration",
									"scope": 487,
									"src": "366:81:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 379,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "366:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307833624641343736394642303965656643356138306436453837633342394336353066374165343845",
										"id": 380,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "405:42:4",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x3bFA4769FB09eefC5a80d6E87c3B9C650f7Ae48E"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 384,
									"mutability": "constant",
									"name": "LUSD",
									"nameLocation": "479:4:4",
									"nodeType": "VariableDeclaration",
									"scope": 487,
									"src": "454:74:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 382,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "454:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307844323836323731353765313431464538303332306236303232453933343561383832626337314266",
										"id": 383,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "486:42:4",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0xD28627157e141FE80320b6022E9345a882bc71Bf"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "f8bb9160",
									"id": 387,
									"mutability": "constant",
									"name": "TIGER",
									"nameLocation": "558:5:4",
									"nodeType": "VariableDeclaration",
									"scope": 487,
									"src": "534:74:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 385,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "534:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307845304361383435644339436234323539373046394434463838373731644533303035383332324230",
										"id": 386,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "566:42:4",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0xE0Ca845dC9Cb425970F9D4F88771dE30058322B0"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c31c9c07",
									"id": 393,
									"mutability": "immutable",
									"name": "swapRouter",
									"nameLocation": "646:10:4",
									"nodeType": "VariableDeclaration",
									"scope": 487,
									"src": "615:70:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IV3SwapRouter_$251",
										"typeString": "contract IV3SwapRouter"
									},
									"typeName": {
										"id": 389,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 388,
											"name": "IV3SwapRouter",
											"nameLocations": [
												"615:13:4"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 251,
											"src": "615:13:4"
										},
										"referencedDeclaration": 251,
										"src": "615:13:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IV3SwapRouter_$251",
											"typeString": "contract IV3SwapRouter"
										}
									},
									"value": {
										"arguments": [
											{
												"id": 391,
												"name": "SWAP_ROUTER",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 381,
												"src": "673:11:4",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											],
											"id": 390,
											"name": "IV3SwapRouter",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 251,
											"src": "659:13:4",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_contract$_IV3SwapRouter_$251_$",
												"typeString": "type(contract IV3SwapRouter)"
											}
										},
										"id": 392,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "659:26:4",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IV3SwapRouter_$251",
											"typeString": "contract IV3SwapRouter"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 485,
										"nodeType": "Block",
										"src": "788:2344:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 403,
															"name": "LUSD",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "1022:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 404,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1050:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 405,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1054:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1050:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 408,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1092:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Arbitrage_$487",
																		"typeString": "contract Arbitrage"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Arbitrage_$487",
																		"typeString": "contract Arbitrage"
																	}
																],
																"id": 407,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1084:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 406,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1084:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 409,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1084:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 410,
															"name": "amountIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 395,
															"src": "1124:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 400,
															"name": "TransferHelper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 159,
															"src": "977:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TransferHelper_$159_$",
																"typeString": "type(library TransferHelper)"
															}
														},
														"id": 402,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "992:16:4",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 133,
														"src": "977:31:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256)"
														}
													},
													"id": 411,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "977:175:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 412,
												"nodeType": "ExpressionStatement",
												"src": "977:175:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 416,
															"name": "LUSD",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "1245:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 419,
																	"name": "swapRouter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 393,
																	"src": "1259:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IV3SwapRouter_$251",
																		"typeString": "contract IV3SwapRouter"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IV3SwapRouter_$251",
																		"typeString": "contract IV3SwapRouter"
																	}
																],
																"id": 418,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1251:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 417,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1251:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 420,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1251:19:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 421,
															"name": "amountIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 395,
															"src": "1272:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 413,
															"name": "TransferHelper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 159,
															"src": "1218:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TransferHelper_$159_$",
																"typeString": "type(library TransferHelper)"
															}
														},
														"id": 415,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1233:11:4",
														"memberName": "safeApprove",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 44,
														"src": "1218:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 422,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1218:63:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 423,
												"nodeType": "ExpressionStatement",
												"src": "1218:63:4"
											},
											{
												"assignments": [
													428
												],
												"declarations": [
													{
														"constant": false,
														"id": 428,
														"mutability": "mutable",
														"name": "params",
														"nameLocation": "1430:6:4",
														"nodeType": "VariableDeclaration",
														"scope": 485,
														"src": "1386:50:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ExactInputSingleParams_$181_memory_ptr",
															"typeString": "struct IV3SwapRouter.ExactInputSingleParams"
														},
														"typeName": {
															"id": 427,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 426,
																"name": "IV3SwapRouter.ExactInputSingleParams",
																"nameLocations": [
																	"1386:13:4",
																	"1400:22:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 181,
																"src": "1386:36:4"
															},
															"referencedDeclaration": 181,
															"src": "1386:36:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ExactInputSingleParams_$181_storage_ptr",
																"typeString": "struct IV3SwapRouter.ExactInputSingleParams"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 442,
												"initialValue": {
													"arguments": [
														{
															"id": 431,
															"name": "LUSD",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "1516:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 432,
															"name": "TIGER",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 387,
															"src": "1548:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "353030",
															"id": 433,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1576:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_500_by_1",
																"typeString": "int_const 500"
															},
															"value": "500"
														},
														{
															"arguments": [
																{
																	"id": 436,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1659:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Arbitrage_$487",
																		"typeString": "contract Arbitrage"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Arbitrage_$487",
																		"typeString": "contract Arbitrage"
																	}
																],
																"id": 435,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1651:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 434,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1651:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 437,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1651:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 438,
															"name": "amountIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 395,
															"src": "1724:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "30",
															"id": 439,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1768:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "30",
															"id": 440,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1806:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_500_by_1",
																"typeString": "int_const 500"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"expression": {
															"id": 429,
															"name": "IV3SwapRouter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 251,
															"src": "1439:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IV3SwapRouter_$251_$",
																"typeString": "type(contract IV3SwapRouter)"
															}
														},
														"id": 430,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1466:22:4",
														"memberName": "ExactInputSingleParams",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 181,
														"src": "1439:49:4",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_ExactInputSingleParams_$181_storage_ptr_$",
															"typeString": "type(struct IV3SwapRouter.ExactInputSingleParams storage pointer)"
														}
													},
													"id": 441,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"nameLocations": [
														"1507:7:4",
														"1538:8:4",
														"1571:3:4",
														"1640:9:4",
														"1714:8:4",
														"1750:16:4",
														"1787:17:4"
													],
													"names": [
														"tokenIn",
														"tokenOut",
														"fee",
														"recipient",
														"amountIn",
														"amountOutMinimum",
														"sqrtPriceLimitX96"
													],
													"nodeType": "FunctionCall",
													"src": "1439:383:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactInputSingleParams_$181_memory_ptr",
														"typeString": "struct IV3SwapRouter.ExactInputSingleParams memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1386:436:4"
											},
											{
												"assignments": [
													444
												],
												"declarations": [
													{
														"constant": false,
														"id": 444,
														"mutability": "mutable",
														"name": "amountOut1",
														"nameLocation": "2028:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 485,
														"src": "2020:18:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 443,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2020:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 449,
												"initialValue": {
													"arguments": [
														{
															"id": 447,
															"name": "params",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 428,
															"src": "2069:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ExactInputSingleParams_$181_memory_ptr",
																"typeString": "struct IV3SwapRouter.ExactInputSingleParams memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_ExactInputSingleParams_$181_memory_ptr",
																"typeString": "struct IV3SwapRouter.ExactInputSingleParams memory"
															}
														],
														"expression": {
															"id": 445,
															"name": "swapRouter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 393,
															"src": "2041:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IV3SwapRouter_$251",
																"typeString": "contract IV3SwapRouter"
															}
														},
														"id": 446,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2052:16:4",
														"memberName": "exactInputSingle",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 190,
														"src": "2041:27:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_payable$_t_struct$_ExactInputSingleParams_$181_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct IV3SwapRouter.ExactInputSingleParams memory) payable external returns (uint256)"
														}
													},
													"id": 448,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2041:35:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2020:56:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 453,
															"name": "TIGER",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 387,
															"src": "2174:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 456,
																	"name": "swapRouter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 393,
																	"src": "2189:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IV3SwapRouter_$251",
																		"typeString": "contract IV3SwapRouter"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IV3SwapRouter_$251",
																		"typeString": "contract IV3SwapRouter"
																	}
																],
																"id": 455,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2181:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 454,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2181:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 457,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2181:19:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 458,
															"name": "MAX_UINT",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 378,
															"src": "2202:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 450,
															"name": "TransferHelper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 159,
															"src": "2147:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TransferHelper_$159_$",
																"typeString": "type(library TransferHelper)"
															}
														},
														"id": 452,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2162:11:4",
														"memberName": "safeApprove",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 44,
														"src": "2147:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 459,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2147:64:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 460,
												"nodeType": "ExpressionStatement",
												"src": "2147:64:4"
											},
											{
												"assignments": [
													465
												],
												"declarations": [
													{
														"constant": false,
														"id": 465,
														"mutability": "mutable",
														"name": "params2",
														"nameLocation": "2362:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 485,
														"src": "2318:51:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ExactInputSingleParams_$181_memory_ptr",
															"typeString": "struct IV3SwapRouter.ExactInputSingleParams"
														},
														"typeName": {
															"id": 464,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 463,
																"name": "IV3SwapRouter.ExactInputSingleParams",
																"nameLocations": [
																	"2318:13:4",
																	"2332:22:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 181,
																"src": "2318:36:4"
															},
															"referencedDeclaration": 181,
															"src": "2318:36:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ExactInputSingleParams_$181_storage_ptr",
																"typeString": "struct IV3SwapRouter.ExactInputSingleParams"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 477,
												"initialValue": {
													"arguments": [
														{
															"id": 468,
															"name": "TIGER",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 387,
															"src": "2449:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 469,
															"name": "LUSD",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "2482:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "353030",
															"id": 470,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2509:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_500_by_1",
																"typeString": "int_const 500"
															},
															"value": "500"
														},
														{
															"expression": {
																"id": 471,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2584:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 472,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2588:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2584:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 473,
															"name": "amountOut1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 444,
															"src": "2696:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "30",
															"id": 474,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2946:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "30",
															"id": 475,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2984:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_500_by_1",
																"typeString": "int_const 500"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"expression": {
															"id": 466,
															"name": "IV3SwapRouter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 251,
															"src": "2372:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IV3SwapRouter_$251_$",
																"typeString": "type(contract IV3SwapRouter)"
															}
														},
														"id": 467,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2399:22:4",
														"memberName": "ExactInputSingleParams",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 181,
														"src": "2372:49:4",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_ExactInputSingleParams_$181_storage_ptr_$",
															"typeString": "type(struct IV3SwapRouter.ExactInputSingleParams storage pointer)"
														}
													},
													"id": 476,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"nameLocations": [
														"2440:7:4",
														"2472:8:4",
														"2504:3:4",
														"2573:9:4",
														"2686:8:4",
														"2928:16:4",
														"2965:17:4"
													],
													"names": [
														"tokenIn",
														"tokenOut",
														"fee",
														"recipient",
														"amountIn",
														"amountOutMinimum",
														"sqrtPriceLimitX96"
													],
													"nodeType": "FunctionCall",
													"src": "2372:628:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactInputSingleParams_$181_memory_ptr",
														"typeString": "struct IV3SwapRouter.ExactInputSingleParams memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2318:682:4"
											},
											{
												"expression": {
													"id": 483,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 478,
														"name": "amountOut",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 398,
														"src": "3077:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 481,
																"name": "params2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 465,
																"src": "3117:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_ExactInputSingleParams_$181_memory_ptr",
																	"typeString": "struct IV3SwapRouter.ExactInputSingleParams memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_struct$_ExactInputSingleParams_$181_memory_ptr",
																	"typeString": "struct IV3SwapRouter.ExactInputSingleParams memory"
																}
															],
															"expression": {
																"id": 479,
																"name": "swapRouter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 393,
																"src": "3089:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IV3SwapRouter_$251",
																	"typeString": "contract IV3SwapRouter"
																}
															},
															"id": 480,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3100:16:4",
															"memberName": "exactInputSingle",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 190,
															"src": "3089:27:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_payable$_t_struct$_ExactInputSingleParams_$181_memory_ptr_$returns$_t_uint256_$",
																"typeString": "function (struct IV3SwapRouter.ExactInputSingleParams memory) payable external returns (uint256)"
															}
														},
														"id": 482,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3089:36:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3077:48:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 484,
												"nodeType": "ExpressionStatement",
												"src": "3077:48:4"
											}
										]
									},
									"functionSelector": "a048600d",
									"id": 486,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "doArbitrage",
									"nameLocation": "701:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "721:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 486,
												"src": "713:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 394,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "713:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "712:18:4"
									},
									"returnParameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "773:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 486,
												"src": "765:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 397,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "765:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "764:19:4"
									},
									"scope": 487,
									"src": "692:2440:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 488,
							"src": "295:2839:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "37:3097:4"
				},
				"id": 4
			}
		}
	}
}