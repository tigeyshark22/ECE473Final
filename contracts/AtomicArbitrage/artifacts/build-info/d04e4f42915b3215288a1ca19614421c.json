{
	"id": "d04e4f42915b3215288a1ca19614421c",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.25",
	"solcLongVersion": "0.8.25+commit.b61c2a91",
	"input": {
		"language": "Solidity",
		"sources": {
			"FinalProject/contracts/AtomicArbitrage/benchmark.sol": {
				"content": "//SPDX-License-Identifier: Unlicense\npragma solidity >=0.7.5;\npragma abicoder v2;\n\nimport \"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\";\nimport \"@uniswap/lib/contracts/libraries/TransferHelper.sol\";\nimport \"@uniswap/swap-router-contracts/contracts/interfaces/IV3SwapRouter.sol\";\n\ncontract Arbitrage {\n\n    uint256 constant MAX_UINT = 2**256 - 1;\n\n    function doArbitrage(uint256 amountIn, address router, address LUSD, address TIGER)\n        external\n        returns (uint256 amountOut)\n    {\n\n        IV3SwapRouter swapRouter = IV3SwapRouter(router);\n\n        // Use TransferHelper to transfer LUSD from your wallet to the smart contract\n        // Make sure that you approve this contract to spend LUSD through the LUSD contract\n        TransferHelper.safeTransferFrom(\n            LUSD, // Token \n            msg.sender, // Sender\n            address(this), // Recipient\n            amountIn // Amount\n        );\n\n        // Approve the SwapRouter to transfer our LUSD\n        TransferHelper.safeApprove(LUSD, address(swapRouter), amountIn);\n        \n        // Create transaction for swapping LUSD to TIGER \n        // Using Pool 1 or Pool 2??\n        IV3SwapRouter.ExactInputSingleParams memory params = IV3SwapRouter\n            .ExactInputSingleParams({\n                tokenIn: LUSD,\n                tokenOut: TIGER,\n                fee: 3000, // Set to 500 if pool 1 and 3000 if pool 2\n                recipient: address(this),// Who is receiving the TIGER //\n                amountIn: amountIn,\n                amountOutMinimum: 0,\n                sqrtPriceLimitX96: 0\n            });\n\n        \n        // Execute transaction and store amount of TIGER received\n        // Remember: in the intermediary steps, LUSD/TIGER is stored \n        // directly in the smart contract\n        uint256 amountOut1 = swapRouter.exactInputSingle(params);\n        /*\n        // Approve the SwapRouter to transfer our new TIGER\n        TransferHelper.safeApprove(TIGER, address(swapRouter), MAX_UINT);\n\n        // Create transaction for swapping TIGER to LUSD \n        // Using Pool 1 or Pool 2 ?? \n        IV3SwapRouter.ExactInputSingleParams memory params2 = IV3SwapRouter\n            .ExactInputSingleParams({\n                tokenIn: TIGER,\n                tokenOut: LUSD,\n                fee: 500, // Set to 500 if pool 1 and 3000 if pool 2\n                recipient: msg.sender, // Who is receiving the LUSD? This is the last step of the arbitrage. // \n                amountIn: amountOut1, // Think about what value we would like to send \n                // (hint: there are various reasons why the estimated amount  \n                // of LUSD does not align with the amount of LUSD received)\n                amountOutMinimum: 0,\n                sqrtPriceLimitX96: 0\n            });\n\n        // Execute transaction and store amount of TIGER received\n        amountOut = swapRouter.exactInputSingle(params2);\n        */\n    }\n}"
			},
			"@uniswap/swap-router-contracts/contracts/interfaces/IV3SwapRouter.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.7.5;\npragma abicoder v2;\n\nimport '@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol';\n\n/// @title Router token swapping functionality\n/// @notice Functions for swapping tokens via Uniswap V3\ninterface IV3SwapRouter is IUniswapV3SwapCallback {\n    struct ExactInputSingleParams {\n        address tokenIn;\n        address tokenOut;\n        uint24 fee;\n        address recipient;\n        uint256 amountIn;\n        uint256 amountOutMinimum;\n        uint160 sqrtPriceLimitX96;\n    }\n\n    /// @notice Swaps `amountIn` of one token for as much as possible of another token\n    /// @dev Setting `amountIn` to 0 will cause the contract to look up its own balance,\n    /// and swap the entire amount, enabling contracts to send tokens before calling this function.\n    /// @param params The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\n    /// @return amountOut The amount of the received token\n    function exactInputSingle(ExactInputSingleParams calldata params) external payable returns (uint256 amountOut);\n\n    struct ExactInputParams {\n        bytes path;\n        address recipient;\n        uint256 amountIn;\n        uint256 amountOutMinimum;\n    }\n\n    /// @notice Swaps `amountIn` of one token for as much as possible of another along the specified path\n    /// @dev Setting `amountIn` to 0 will cause the contract to look up its own balance,\n    /// and swap the entire amount, enabling contracts to send tokens before calling this function.\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\n    /// @return amountOut The amount of the received token\n    function exactInput(ExactInputParams calldata params) external payable returns (uint256 amountOut);\n\n    struct ExactOutputSingleParams {\n        address tokenIn;\n        address tokenOut;\n        uint24 fee;\n        address recipient;\n        uint256 amountOut;\n        uint256 amountInMaximum;\n        uint160 sqrtPriceLimitX96;\n    }\n\n    /// @notice Swaps as little as possible of one token for `amountOut` of another token\n    /// that may remain in the router after the swap.\n    /// @param params The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\n    /// @return amountIn The amount of the input token\n    function exactOutputSingle(ExactOutputSingleParams calldata params) external payable returns (uint256 amountIn);\n\n    struct ExactOutputParams {\n        bytes path;\n        address recipient;\n        uint256 amountOut;\n        uint256 amountInMaximum;\n    }\n\n    /// @notice Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\n    /// that may remain in the router after the swap.\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\n    /// @return amountIn The amount of the input token\n    function exactOutput(ExactOutputParams calldata params) external payable returns (uint256 amountIn);\n}\n"
			},
			"@uniswap/lib/contracts/libraries/TransferHelper.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0-or-later\n\npragma solidity >=0.6.0;\n\n// helper methods for interacting with ERC20 tokens and sending ETH that do not consistently return true/false\nlibrary TransferHelper {\n    function safeApprove(\n        address token,\n        address to,\n        uint256 value\n    ) internal {\n        // bytes4(keccak256(bytes('approve(address,uint256)')));\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0x095ea7b3, to, value));\n        require(\n            success && (data.length == 0 || abi.decode(data, (bool))),\n            'TransferHelper::safeApprove: approve failed'\n        );\n    }\n\n    function safeTransfer(\n        address token,\n        address to,\n        uint256 value\n    ) internal {\n        // bytes4(keccak256(bytes('transfer(address,uint256)')));\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0xa9059cbb, to, value));\n        require(\n            success && (data.length == 0 || abi.decode(data, (bool))),\n            'TransferHelper::safeTransfer: transfer failed'\n        );\n    }\n\n    function safeTransferFrom(\n        address token,\n        address from,\n        address to,\n        uint256 value\n    ) internal {\n        // bytes4(keccak256(bytes('transferFrom(address,address,uint256)')));\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0x23b872dd, from, to, value));\n        require(\n            success && (data.length == 0 || abi.decode(data, (bool))),\n            'TransferHelper::transferFrom: transferFrom failed'\n        );\n    }\n\n    function safeTransferETH(address to, uint256 value) internal {\n        (bool success, ) = to.call{value: value}(new bytes(0));\n        require(success, 'TransferHelper::safeTransferETH: ETH transfer failed');\n    }\n}\n"
			},
			"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.7.5;\npragma abicoder v2;\n\nimport '@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol';\n\n/// @title Router token swapping functionality\n/// @notice Functions for swapping tokens via Uniswap V3\ninterface ISwapRouter is IUniswapV3SwapCallback {\n    struct ExactInputSingleParams {\n        address tokenIn;\n        address tokenOut;\n        uint24 fee;\n        address recipient;\n        uint256 deadline;\n        uint256 amountIn;\n        uint256 amountOutMinimum;\n        uint160 sqrtPriceLimitX96;\n    }\n\n    /// @notice Swaps `amountIn` of one token for as much as possible of another token\n    /// @param params The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\n    /// @return amountOut The amount of the received token\n    function exactInputSingle(ExactInputSingleParams calldata params) external payable returns (uint256 amountOut);\n\n    struct ExactInputParams {\n        bytes path;\n        address recipient;\n        uint256 deadline;\n        uint256 amountIn;\n        uint256 amountOutMinimum;\n    }\n\n    /// @notice Swaps `amountIn` of one token for as much as possible of another along the specified path\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\n    /// @return amountOut The amount of the received token\n    function exactInput(ExactInputParams calldata params) external payable returns (uint256 amountOut);\n\n    struct ExactOutputSingleParams {\n        address tokenIn;\n        address tokenOut;\n        uint24 fee;\n        address recipient;\n        uint256 deadline;\n        uint256 amountOut;\n        uint256 amountInMaximum;\n        uint160 sqrtPriceLimitX96;\n    }\n\n    /// @notice Swaps as little as possible of one token for `amountOut` of another token\n    /// @param params The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\n    /// @return amountIn The amount of the input token\n    function exactOutputSingle(ExactOutputSingleParams calldata params) external payable returns (uint256 amountIn);\n\n    struct ExactOutputParams {\n        bytes path;\n        address recipient;\n        uint256 deadline;\n        uint256 amountOut;\n        uint256 amountInMaximum;\n    }\n\n    /// @notice Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\n    /// @return amountIn The amount of the input token\n    function exactOutput(ExactOutputParams calldata params) external payable returns (uint256 amountIn);\n}\n"
			},
			"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Callback for IUniswapV3PoolActions#swap\n/// @notice Any contract that calls IUniswapV3PoolActions#swap must implement this interface\ninterface IUniswapV3SwapCallback {\n    /// @notice Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\n    /// @dev In the implementation you must pay the pool tokens owed for the swap.\n    /// The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\n    /// amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\n    /// @param amount0Delta The amount of token0 that was sent (negative) or must be received (positive) by the pool by\n    /// the end of the swap. If positive, the callback must send that amount of token0 to the pool.\n    /// @param amount1Delta The amount of token1 that was sent (negative) or must be received (positive) by the pool by\n    /// the end of the swap. If positive, the callback must send that amount of token1 to the pool.\n    /// @param data Any data passed through by the caller via the IUniswapV3PoolActions#swap call\n    function uniswapV3SwapCallback(\n        int256 amount0Delta,\n        int256 amount1Delta,\n        bytes calldata data\n    ) external;\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@uniswap/lib/contracts/libraries/TransferHelper.sol": {
				"TransferHelper": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@uniswap/lib/contracts/libraries/TransferHelper.sol\":183:1804  library TransferHelper {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@uniswap/lib/contracts/libraries/TransferHelper.sol\":183:1804  library TransferHelper {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220f33e2fc27f121b4e326a4a6e0f004e7fc90eac770069a7f5fa4da13ed922bcdf64736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220f33e2fc27f121b4e326a4a6e0f004e7fc90eac770069a7f5fa4da13ed922bcdf64736f6c63430008190033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURN RETURNDATACOPY 0x2F 0xC2 PUSH32 0x121B4E326A4A6E0F004E7FC90EAC770069A7F5FA4DA13ED922BCDF64736F6C63 NUMBER STOP ADDMOD NOT STOP CALLER ",
							"sourceMap": "183:1621:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220f33e2fc27f121b4e326a4a6e0f004e7fc90eac770069a7f5fa4da13ed922bcdf64736f6c63430008190033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURN RETURNDATACOPY 0x2F 0xC2 PUSH32 0x121B4E326A4A6E0F004E7FC90EAC770069A7F5FA4DA13ED922BCDF64736F6C63 NUMBER STOP ADDMOD NOT STOP CALLER ",
							"sourceMap": "183:1621:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"safeApprove(address,address,uint256)": "infinite",
								"safeTransfer(address,address,uint256)": "infinite",
								"safeTransferETH(address,uint256)": "infinite",
								"safeTransferFrom(address,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 183,
									"end": 1804,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 183,
									"end": 1804,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 183,
									"end": 1804,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 183,
									"end": 1804,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 183,
									"end": 1804,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 183,
									"end": 1804,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 183,
									"end": 1804,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 183,
									"end": 1804,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 183,
									"end": 1804,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 183,
									"end": 1804,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 183,
									"end": 1804,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 183,
									"end": 1804,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 183,
									"end": 1804,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 183,
									"end": 1804,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 183,
									"end": 1804,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 183,
									"end": 1804,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 183,
									"end": 1804,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 183,
									"end": 1804,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 183,
									"end": 1804,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 183,
									"end": 1804,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 183,
									"end": 1804,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 183,
									"end": 1804,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 183,
									"end": 1804,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 183,
									"end": 1804,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 183,
									"end": 1804,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 183,
									"end": 1804,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 183,
									"end": 1804,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 183,
									"end": 1804,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 183,
									"end": 1804,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 183,
									"end": 1804,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 183,
									"end": 1804,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 183,
									"end": 1804,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 183,
									"end": 1804,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 183,
									"end": 1804,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 183,
									"end": 1804,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f33e2fc27f121b4e326a4a6e0f004e7fc90eac770069a7f5fa4da13ed922bcdf64736f6c63430008190033",
									".code": [
										{
											"begin": 183,
											"end": 1804,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 183,
											"end": 1804,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 183,
											"end": 1804,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 183,
											"end": 1804,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 183,
											"end": 1804,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 183,
											"end": 1804,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 183,
											"end": 1804,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 183,
											"end": 1804,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 183,
											"end": 1804,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"@uniswap/lib/contracts/libraries/TransferHelper.sol",
								"@uniswap/swap-router-contracts/contracts/interfaces/IV3SwapRouter.sol",
								"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
								"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
								"FinalProject/contracts/AtomicArbitrage/benchmark.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/lib/contracts/libraries/TransferHelper.sol\":\"TransferHelper\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/lib/contracts/libraries/TransferHelper.sol\":{\"keccak256\":\"0xaff99b54915f57e2a4e71b8d15afd4ee425410e5a6f45c07517ae1beb806f8bd\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://15432ec031f4cfa6709921289e198b030a0c5eac75b5a3e0eb64827a2b3b5595\",\"dweb:/ipfs/QmZvR1KuuDvuzXFiADCngTKyMCTy31uhq9U6CazP59B55j\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@uniswap/swap-router-contracts/contracts/interfaces/IV3SwapRouter.sol": {
				"IV3SwapRouter": {
					"abi": [
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bytes",
											"name": "path",
											"type": "bytes"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "amountIn",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountOutMinimum",
											"type": "uint256"
										}
									],
									"internalType": "struct IV3SwapRouter.ExactInputParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "exactInput",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "tokenIn",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "tokenOut",
											"type": "address"
										},
										{
											"internalType": "uint24",
											"name": "fee",
											"type": "uint24"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "amountIn",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountOutMinimum",
											"type": "uint256"
										},
										{
											"internalType": "uint160",
											"name": "sqrtPriceLimitX96",
											"type": "uint160"
										}
									],
									"internalType": "struct IV3SwapRouter.ExactInputSingleParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "exactInputSingle",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bytes",
											"name": "path",
											"type": "bytes"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "amountOut",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountInMaximum",
											"type": "uint256"
										}
									],
									"internalType": "struct IV3SwapRouter.ExactOutputParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "exactOutput",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "tokenIn",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "tokenOut",
											"type": "address"
										},
										{
											"internalType": "uint24",
											"name": "fee",
											"type": "uint24"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "amountOut",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountInMaximum",
											"type": "uint256"
										},
										{
											"internalType": "uint160",
											"name": "sqrtPriceLimitX96",
											"type": "uint160"
										}
									],
									"internalType": "struct IV3SwapRouter.ExactOutputSingleParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "exactOutputSingle",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int256",
									"name": "amount0Delta",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "amount1Delta",
									"type": "int256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "uniswapV3SwapCallback",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"exactInput((bytes,address,uint256,uint256))": {
								"details": "Setting `amountIn` to 0 will cause the contract to look up its own balance, and swap the entire amount, enabling contracts to send tokens before calling this function.",
								"params": {
									"params": "The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata"
								},
								"returns": {
									"amountOut": "The amount of the received token"
								}
							},
							"exactInputSingle((address,address,uint24,address,uint256,uint256,uint160))": {
								"details": "Setting `amountIn` to 0 will cause the contract to look up its own balance, and swap the entire amount, enabling contracts to send tokens before calling this function.",
								"params": {
									"params": "The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata"
								},
								"returns": {
									"amountOut": "The amount of the received token"
								}
							},
							"exactOutput((bytes,address,uint256,uint256))": {
								"params": {
									"params": "The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata"
								},
								"returns": {
									"amountIn": "The amount of the input token"
								}
							},
							"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint160))": {
								"params": {
									"params": "The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata"
								},
								"returns": {
									"amountIn": "The amount of the input token"
								}
							},
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"details": "In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.",
								"params": {
									"amount0Delta": "The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.",
									"amount1Delta": "The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.",
									"data": "Any data passed through by the caller via the IUniswapV3PoolActions#swap call"
								}
							}
						},
						"title": "Router token swapping functionality",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"exactInput((bytes,address,uint256,uint256))": "b858183f",
							"exactInputSingle((address,address,uint24,address,uint256,uint256,uint160))": "04e45aaf",
							"exactOutput((bytes,address,uint256,uint256))": "09b81346",
							"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint160))": "5023b4df",
							"uniswapV3SwapCallback(int256,int256,bytes)": "fa461e33"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMinimum\",\"type\":\"uint256\"}],\"internalType\":\"struct IV3SwapRouter.ExactInputParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactInput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMinimum\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct IV3SwapRouter.ExactInputSingleParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactInputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMaximum\",\"type\":\"uint256\"}],\"internalType\":\"struct IV3SwapRouter.ExactOutputParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactOutput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMaximum\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct IV3SwapRouter.ExactOutputSingleParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactOutputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"amount0Delta\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1Delta\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"uniswapV3SwapCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"exactInput((bytes,address,uint256,uint256))\":{\"details\":\"Setting `amountIn` to 0 will cause the contract to look up its own balance, and swap the entire amount, enabling contracts to send tokens before calling this function.\",\"params\":{\"params\":\"The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\"},\"returns\":{\"amountOut\":\"The amount of the received token\"}},\"exactInputSingle((address,address,uint24,address,uint256,uint256,uint160))\":{\"details\":\"Setting `amountIn` to 0 will cause the contract to look up its own balance, and swap the entire amount, enabling contracts to send tokens before calling this function.\",\"params\":{\"params\":\"The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\"},\"returns\":{\"amountOut\":\"The amount of the received token\"}},\"exactOutput((bytes,address,uint256,uint256))\":{\"params\":{\"params\":\"The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\"},\"returns\":{\"amountIn\":\"The amount of the input token\"}},\"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint160))\":{\"params\":{\"params\":\"The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\"},\"returns\":{\"amountIn\":\"The amount of the input token\"}},\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"details\":\"In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\",\"params\":{\"amount0Delta\":\"The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.\",\"amount1Delta\":\"The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.\",\"data\":\"Any data passed through by the caller via the IUniswapV3PoolActions#swap call\"}}},\"title\":\"Router token swapping functionality\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"exactInput((bytes,address,uint256,uint256))\":{\"notice\":\"Swaps `amountIn` of one token for as much as possible of another along the specified path\"},\"exactInputSingle((address,address,uint24,address,uint256,uint256,uint160))\":{\"notice\":\"Swaps `amountIn` of one token for as much as possible of another token\"},\"exactOutput((bytes,address,uint256,uint256))\":{\"notice\":\"Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed) that may remain in the router after the swap.\"},\"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint160))\":{\"notice\":\"Swaps as little as possible of one token for `amountOut` of another token that may remain in the router after the swap.\"},\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"notice\":\"Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\"}},\"notice\":\"Functions for swapping tokens via Uniswap V3\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/swap-router-contracts/contracts/interfaces/IV3SwapRouter.sol\":\"IV3SwapRouter\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/swap-router-contracts/contracts/interfaces/IV3SwapRouter.sol\":{\"keccak256\":\"0xa2300af2b82af292216a8f3f301a86e65463655fff9fb791515e3fd2ccf4a14c\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a0a9bece58527fb5c1773d86666c7a71884a78f413e230dfa8c8a7f8ea564ef9\",\"dweb:/ipfs/QmbDhvpoZJN1KntxUUxkYV89RPTwqVBiyHBkvVh4QHSveo\"]},\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"exactInput((bytes,address,uint256,uint256))": {
								"notice": "Swaps `amountIn` of one token for as much as possible of another along the specified path"
							},
							"exactInputSingle((address,address,uint24,address,uint256,uint256,uint160))": {
								"notice": "Swaps `amountIn` of one token for as much as possible of another token"
							},
							"exactOutput((bytes,address,uint256,uint256))": {
								"notice": "Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed) that may remain in the router after the swap."
							},
							"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint160))": {
								"notice": "Swaps as little as possible of one token for `amountOut` of another token that may remain in the router after the swap."
							},
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"notice": "Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap."
							}
						},
						"notice": "Functions for swapping tokens via Uniswap V3",
						"version": 1
					}
				}
			},
			"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol": {
				"IUniswapV3SwapCallback": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "int256",
									"name": "amount0Delta",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "amount1Delta",
									"type": "int256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "uniswapV3SwapCallback",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"details": "In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.",
								"params": {
									"amount0Delta": "The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.",
									"amount1Delta": "The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.",
									"data": "Any data passed through by the caller via the IUniswapV3PoolActions#swap call"
								}
							}
						},
						"title": "Callback for IUniswapV3PoolActions#swap",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"uniswapV3SwapCallback(int256,int256,bytes)": "fa461e33"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"amount0Delta\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1Delta\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"uniswapV3SwapCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"details\":\"In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\",\"params\":{\"amount0Delta\":\"The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.\",\"amount1Delta\":\"The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.\",\"data\":\"Any data passed through by the caller via the IUniswapV3PoolActions#swap call\"}}},\"title\":\"Callback for IUniswapV3PoolActions#swap\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"notice\":\"Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\"}},\"notice\":\"Any contract that calls IUniswapV3PoolActions#swap must implement this interface\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":\"IUniswapV3SwapCallback\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"notice": "Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap."
							}
						},
						"notice": "Any contract that calls IUniswapV3PoolActions#swap must implement this interface",
						"version": 1
					}
				}
			},
			"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol": {
				"ISwapRouter": {
					"abi": [
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bytes",
											"name": "path",
											"type": "bytes"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountIn",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountOutMinimum",
											"type": "uint256"
										}
									],
									"internalType": "struct ISwapRouter.ExactInputParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "exactInput",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "tokenIn",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "tokenOut",
											"type": "address"
										},
										{
											"internalType": "uint24",
											"name": "fee",
											"type": "uint24"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountIn",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountOutMinimum",
											"type": "uint256"
										},
										{
											"internalType": "uint160",
											"name": "sqrtPriceLimitX96",
											"type": "uint160"
										}
									],
									"internalType": "struct ISwapRouter.ExactInputSingleParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "exactInputSingle",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bytes",
											"name": "path",
											"type": "bytes"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountOut",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountInMaximum",
											"type": "uint256"
										}
									],
									"internalType": "struct ISwapRouter.ExactOutputParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "exactOutput",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "tokenIn",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "tokenOut",
											"type": "address"
										},
										{
											"internalType": "uint24",
											"name": "fee",
											"type": "uint24"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountOut",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountInMaximum",
											"type": "uint256"
										},
										{
											"internalType": "uint160",
											"name": "sqrtPriceLimitX96",
											"type": "uint160"
										}
									],
									"internalType": "struct ISwapRouter.ExactOutputSingleParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "exactOutputSingle",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int256",
									"name": "amount0Delta",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "amount1Delta",
									"type": "int256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "uniswapV3SwapCallback",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"exactInput((bytes,address,uint256,uint256,uint256))": {
								"params": {
									"params": "The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata"
								},
								"returns": {
									"amountOut": "The amount of the received token"
								}
							},
							"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": {
								"params": {
									"params": "The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata"
								},
								"returns": {
									"amountOut": "The amount of the received token"
								}
							},
							"exactOutput((bytes,address,uint256,uint256,uint256))": {
								"params": {
									"params": "The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata"
								},
								"returns": {
									"amountIn": "The amount of the input token"
								}
							},
							"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": {
								"params": {
									"params": "The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata"
								},
								"returns": {
									"amountIn": "The amount of the input token"
								}
							},
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"details": "In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.",
								"params": {
									"amount0Delta": "The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.",
									"amount1Delta": "The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.",
									"data": "Any data passed through by the caller via the IUniswapV3PoolActions#swap call"
								}
							}
						},
						"title": "Router token swapping functionality",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"exactInput((bytes,address,uint256,uint256,uint256))": "c04b8d59",
							"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": "414bf389",
							"exactOutput((bytes,address,uint256,uint256,uint256))": "f28c0498",
							"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": "db3e2198",
							"uniswapV3SwapCallback(int256,int256,bytes)": "fa461e33"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMinimum\",\"type\":\"uint256\"}],\"internalType\":\"struct ISwapRouter.ExactInputParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactInput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMinimum\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct ISwapRouter.ExactInputSingleParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactInputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMaximum\",\"type\":\"uint256\"}],\"internalType\":\"struct ISwapRouter.ExactOutputParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactOutput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMaximum\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct ISwapRouter.ExactOutputSingleParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactOutputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"amount0Delta\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1Delta\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"uniswapV3SwapCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"exactInput((bytes,address,uint256,uint256,uint256))\":{\"params\":{\"params\":\"The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\"},\"returns\":{\"amountOut\":\"The amount of the received token\"}},\"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"params\":{\"params\":\"The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\"},\"returns\":{\"amountOut\":\"The amount of the received token\"}},\"exactOutput((bytes,address,uint256,uint256,uint256))\":{\"params\":{\"params\":\"The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\"},\"returns\":{\"amountIn\":\"The amount of the input token\"}},\"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"params\":{\"params\":\"The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\"},\"returns\":{\"amountIn\":\"The amount of the input token\"}},\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"details\":\"In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\",\"params\":{\"amount0Delta\":\"The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.\",\"amount1Delta\":\"The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.\",\"data\":\"Any data passed through by the caller via the IUniswapV3PoolActions#swap call\"}}},\"title\":\"Router token swapping functionality\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"exactInput((bytes,address,uint256,uint256,uint256))\":{\"notice\":\"Swaps `amountIn` of one token for as much as possible of another along the specified path\"},\"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"notice\":\"Swaps `amountIn` of one token for as much as possible of another token\"},\"exactOutput((bytes,address,uint256,uint256,uint256))\":{\"notice\":\"Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\"},\"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"notice\":\"Swaps as little as possible of one token for `amountOut` of another token\"},\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"notice\":\"Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\"}},\"notice\":\"Functions for swapping tokens via Uniswap V3\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":\"ISwapRouter\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]},\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"keccak256\":\"0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53\",\"dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"exactInput((bytes,address,uint256,uint256,uint256))": {
								"notice": "Swaps `amountIn` of one token for as much as possible of another along the specified path"
							},
							"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": {
								"notice": "Swaps `amountIn` of one token for as much as possible of another token"
							},
							"exactOutput((bytes,address,uint256,uint256,uint256))": {
								"notice": "Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)"
							},
							"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": {
								"notice": "Swaps as little as possible of one token for `amountOut` of another token"
							},
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"notice": "Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap."
							}
						},
						"notice": "Functions for swapping tokens via Uniswap V3",
						"version": 1
					}
				}
			},
			"FinalProject/contracts/AtomicArbitrage/benchmark.sol": {
				"Arbitrage": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "router",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "LUSD",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "TIGER",
									"type": "address"
								}
							],
							"name": "doArbitrage",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"FinalProject/contracts/AtomicArbitrage/benchmark.sol\":295:2942  contract Arbitrage {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"FinalProject/contracts/AtomicArbitrage/benchmark.sol\":295:2942  contract Arbitrage {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x212eaf84\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"FinalProject/contracts/AtomicArbitrage/benchmark.sol\":366:2940  function doArbitrage(uint256 amountIn, address router, address LUSD, address TIGER)... */\n    tag_3:\n      tag_4\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_5\n      swap2\n      swap1\n      tag_6\n      jump\t// in\n    tag_5:\n      tag_7\n      jump\t// in\n    tag_4:\n      mload(0x40)\n      tag_8\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n    tag_7:\n        /* \"FinalProject/contracts/AtomicArbitrage/benchmark.sol\":484:501  uint256 amountOut */\n      0x00\n        /* \"FinalProject/contracts/AtomicArbitrage/benchmark.sol\":518:542  IV3SwapRouter swapRouter */\n      dup1\n        /* \"FinalProject/contracts/AtomicArbitrage/benchmark.sol\":559:565  router */\n      dup5\n        /* \"FinalProject/contracts/AtomicArbitrage/benchmark.sol\":518:566  IV3SwapRouter swapRouter = IV3SwapRouter(router) */\n      swap1\n      pop\n        /* \"FinalProject/contracts/AtomicArbitrage/benchmark.sol\":755:930  TransferHelper.safeTransferFrom(... */\n      tag_11\n        /* \"FinalProject/contracts/AtomicArbitrage/benchmark.sol\":800:804  LUSD */\n      dup5\n        /* \"FinalProject/contracts/AtomicArbitrage/benchmark.sol\":828:838  msg.sender */\n      caller\n        /* \"FinalProject/contracts/AtomicArbitrage/benchmark.sol\":870:874  this */\n      address\n        /* \"FinalProject/contracts/AtomicArbitrage/benchmark.sol\":902:910  amountIn */\n      dup10\n        /* \"FinalProject/contracts/AtomicArbitrage/benchmark.sol\":755:786  TransferHelper.safeTransferFrom */\n      tag_12\n        /* \"FinalProject/contracts/AtomicArbitrage/benchmark.sol\":755:930  TransferHelper.safeTransferFrom(... */\n      jump\t// in\n    tag_11:\n        /* \"FinalProject/contracts/AtomicArbitrage/benchmark.sol\":996:1059  TransferHelper.safeApprove(LUSD, address(swapRouter), amountIn) */\n      tag_13\n        /* \"FinalProject/contracts/AtomicArbitrage/benchmark.sol\":1023:1027  LUSD */\n      dup5\n        /* \"FinalProject/contracts/AtomicArbitrage/benchmark.sol\":1037:1047  swapRouter */\n      dup3\n        /* \"FinalProject/contracts/AtomicArbitrage/benchmark.sol\":1050:1058  amountIn */\n      dup9\n        /* \"FinalProject/contracts/AtomicArbitrage/benchmark.sol\":996:1022  TransferHelper.safeApprove */\n      tag_14\n        /* \"FinalProject/contracts/AtomicArbitrage/benchmark.sol\":996:1059  TransferHelper.safeApprove(LUSD, address(swapRouter), amountIn) */\n      jump\t// in\n    tag_13:\n        /* \"FinalProject/contracts/AtomicArbitrage/benchmark.sol\":1172:1222  IV3SwapRouter.ExactInputSingleParams memory params */\n      0x00\n        /* \"FinalProject/contracts/AtomicArbitrage/benchmark.sol\":1225:1609  IV3SwapRouter... */\n      mload(0x40)\n      dup1\n      0xe0\n      add\n      0x40\n      mstore\n      dup1\n        /* \"FinalProject/contracts/AtomicArbitrage/benchmark.sol\":1302:1306  LUSD */\n      dup7\n        /* \"FinalProject/contracts/AtomicArbitrage/benchmark.sol\":1225:1609  IV3SwapRouter... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"FinalProject/contracts/AtomicArbitrage/benchmark.sol\":1334:1339  TIGER */\n      dup6\n        /* \"FinalProject/contracts/AtomicArbitrage/benchmark.sol\":1225:1609  IV3SwapRouter... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"FinalProject/contracts/AtomicArbitrage/benchmark.sol\":1362:1366  3000 */\n      0x0bb8\n        /* \"FinalProject/contracts/AtomicArbitrage/benchmark.sol\":1225:1609  IV3SwapRouter... */\n      0xffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"FinalProject/contracts/AtomicArbitrage/benchmark.sol\":1446:1450  this */\n      address\n        /* \"FinalProject/contracts/AtomicArbitrage/benchmark.sol\":1225:1609  IV3SwapRouter... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"FinalProject/contracts/AtomicArbitrage/benchmark.sol\":1511:1519  amountIn */\n      dup9\n        /* \"FinalProject/contracts/AtomicArbitrage/benchmark.sol\":1225:1609  IV3SwapRouter... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"FinalProject/contracts/AtomicArbitrage/benchmark.sol\":1555:1556  0 */\n      0x00\n        /* \"FinalProject/contracts/AtomicArbitrage/benchmark.sol\":1225:1609  IV3SwapRouter... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"FinalProject/contracts/AtomicArbitrage/benchmark.sol\":1593:1594  0 */\n      0x00\n        /* \"FinalProject/contracts/AtomicArbitrage/benchmark.sol\":1225:1609  IV3SwapRouter... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n        /* \"FinalProject/contracts/AtomicArbitrage/benchmark.sol\":1172:1609  IV3SwapRouter.ExactInputSingleParams memory params = IV3SwapRouter... */\n      swap1\n      pop\n        /* \"FinalProject/contracts/AtomicArbitrage/benchmark.sol\":1807:1825  uint256 amountOut1 */\n      0x00\n        /* \"FinalProject/contracts/AtomicArbitrage/benchmark.sol\":1828:1838  swapRouter */\n      dup3\n        /* \"FinalProject/contracts/AtomicArbitrage/benchmark.sol\":1828:1855  swapRouter.exactInputSingle */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x04e45aaf\n        /* \"FinalProject/contracts/AtomicArbitrage/benchmark.sol\":1856:1862  params */\n      dup4\n        /* \"FinalProject/contracts/AtomicArbitrage/benchmark.sol\":1828:1863  swapRouter.exactInputSingle(params) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_15\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_18\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_18:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n        /* \"FinalProject/contracts/AtomicArbitrage/benchmark.sol\":1807:1863  uint256 amountOut1 = swapRouter.exactInputSingle(params) */\n      swap1\n      pop\n        /* \"FinalProject/contracts/AtomicArbitrage/benchmark.sol\":507:2940  {... */\n      pop\n      pop\n      pop\n        /* \"FinalProject/contracts/AtomicArbitrage/benchmark.sol\":366:2940  function doArbitrage(uint256 amountIn, address router, address LUSD, address TIGER)... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@uniswap/lib/contracts/libraries/TransferHelper.sol\":1096:1582  function safeTransferFrom(... */\n    tag_12:\n        /* \"@uniswap/lib/contracts/libraries/TransferHelper.sol\":1314:1326  bool success */\n      0x00\n        /* \"@uniswap/lib/contracts/libraries/TransferHelper.sol\":1328:1345  bytes memory data */\n      dup1\n        /* \"@uniswap/lib/contracts/libraries/TransferHelper.sol\":1349:1354  token */\n      dup6\n        /* \"@uniswap/lib/contracts/libraries/TransferHelper.sol\":1349:1359  token.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@uniswap/lib/contracts/libraries/TransferHelper.sol\":1383:1393  0x23b872dd */\n      0x23b872dd\n        /* \"@uniswap/lib/contracts/libraries/TransferHelper.sol\":1395:1399  from */\n      dup7\n        /* \"@uniswap/lib/contracts/libraries/TransferHelper.sol\":1401:1403  to */\n      dup7\n        /* \"@uniswap/lib/contracts/libraries/TransferHelper.sol\":1405:1410  value */\n      dup7\n        /* \"@uniswap/lib/contracts/libraries/TransferHelper.sol\":1360:1411  abi.encodeWithSelector(0x23b872dd, from, to, value) */\n      add(0x24, mload(0x40))\n      tag_22\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@uniswap/lib/contracts/libraries/TransferHelper.sol\":1349:1412  token.call(abi.encodeWithSelector(0x23b872dd, from, to, value)) */\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup7\n      gas\n      call\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_28\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_27)\n    tag_28:\n      0x60\n      swap2\n      pop\n    tag_27:\n      pop\n        /* \"@uniswap/lib/contracts/libraries/TransferHelper.sol\":1313:1412  (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0x23b872dd, from, to, value)) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@uniswap/lib/contracts/libraries/TransferHelper.sol\":1443:1450  success */\n      dup2\n        /* \"@uniswap/lib/contracts/libraries/TransferHelper.sol\":1443:1500  success && (data.length == 0 || abi.decode(data, (bool))) */\n      dup1\n      iszero\n      tag_29\n      jumpi\n      pop\n        /* \"@uniswap/lib/contracts/libraries/TransferHelper.sol\":1470:1471  0 */\n      0x00\n        /* \"@uniswap/lib/contracts/libraries/TransferHelper.sol\":1455:1459  data */\n      dup2\n        /* \"@uniswap/lib/contracts/libraries/TransferHelper.sol\":1455:1466  data.length */\n      mload\n        /* \"@uniswap/lib/contracts/libraries/TransferHelper.sol\":1455:1471  data.length == 0 */\n      eq\n        /* \"@uniswap/lib/contracts/libraries/TransferHelper.sol\":1455:1499  data.length == 0 || abi.decode(data, (bool)) */\n      dup1\n      tag_30\n      jumpi\n      pop\n        /* \"@uniswap/lib/contracts/libraries/TransferHelper.sol\":1486:1490  data */\n      dup1\n        /* \"@uniswap/lib/contracts/libraries/TransferHelper.sol\":1475:1499  abi.decode(data, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n        /* \"@uniswap/lib/contracts/libraries/TransferHelper.sol\":1455:1499  data.length == 0 || abi.decode(data, (bool)) */\n    tag_30:\n        /* \"@uniswap/lib/contracts/libraries/TransferHelper.sol\":1443:1500  success && (data.length == 0 || abi.decode(data, (bool))) */\n    tag_29:\n        /* \"@uniswap/lib/contracts/libraries/TransferHelper.sol\":1422:1575  require(... */\n      tag_33\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_34\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_33:\n        /* \"@uniswap/lib/contracts/libraries/TransferHelper.sol\":1225:1582  {... */\n      pop\n      pop\n        /* \"@uniswap/lib/contracts/libraries/TransferHelper.sol\":1096:1582  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@uniswap/lib/contracts/libraries/TransferHelper.sol\":212:646  function safeApprove(... */\n    tag_14:\n        /* \"@uniswap/lib/contracts/libraries/TransferHelper.sol\":390:402  bool success */\n      0x00\n        /* \"@uniswap/lib/contracts/libraries/TransferHelper.sol\":404:421  bytes memory data */\n      dup1\n        /* \"@uniswap/lib/contracts/libraries/TransferHelper.sol\":425:430  token */\n      dup5\n        /* \"@uniswap/lib/contracts/libraries/TransferHelper.sol\":425:435  token.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@uniswap/lib/contracts/libraries/TransferHelper.sol\":459:469  0x095ea7b3 */\n      0x095ea7b3\n        /* \"@uniswap/lib/contracts/libraries/TransferHelper.sol\":471:473  to */\n      dup6\n        /* \"@uniswap/lib/contracts/libraries/TransferHelper.sol\":475:480  value */\n      dup6\n        /* \"@uniswap/lib/contracts/libraries/TransferHelper.sol\":436:481  abi.encodeWithSelector(0x095ea7b3, to, value) */\n      add(0x24, mload(0x40))\n      tag_37\n      swap3\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@uniswap/lib/contracts/libraries/TransferHelper.sol\":425:482  token.call(abi.encodeWithSelector(0x095ea7b3, to, value)) */\n      mload(0x40)\n      tag_39\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_39:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup7\n      gas\n      call\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_42\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_41)\n    tag_42:\n      0x60\n      swap2\n      pop\n    tag_41:\n      pop\n        /* \"@uniswap/lib/contracts/libraries/TransferHelper.sol\":389:482  (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0x095ea7b3, to, value)) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@uniswap/lib/contracts/libraries/TransferHelper.sol\":513:520  success */\n      dup2\n        /* \"@uniswap/lib/contracts/libraries/TransferHelper.sol\":513:570  success && (data.length == 0 || abi.decode(data, (bool))) */\n      dup1\n      iszero\n      tag_43\n      jumpi\n      pop\n        /* \"@uniswap/lib/contracts/libraries/TransferHelper.sol\":540:541  0 */\n      0x00\n        /* \"@uniswap/lib/contracts/libraries/TransferHelper.sol\":525:529  data */\n      dup2\n        /* \"@uniswap/lib/contracts/libraries/TransferHelper.sol\":525:536  data.length */\n      mload\n        /* \"@uniswap/lib/contracts/libraries/TransferHelper.sol\":525:541  data.length == 0 */\n      eq\n        /* \"@uniswap/lib/contracts/libraries/TransferHelper.sol\":525:569  data.length == 0 || abi.decode(data, (bool)) */\n      dup1\n      tag_44\n      jumpi\n      pop\n        /* \"@uniswap/lib/contracts/libraries/TransferHelper.sol\":556:560  data */\n      dup1\n        /* \"@uniswap/lib/contracts/libraries/TransferHelper.sol\":545:569  abi.decode(data, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_45\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_45:\n        /* \"@uniswap/lib/contracts/libraries/TransferHelper.sol\":525:569  data.length == 0 || abi.decode(data, (bool)) */\n    tag_44:\n        /* \"@uniswap/lib/contracts/libraries/TransferHelper.sol\":513:570  success && (data.length == 0 || abi.decode(data, (bool))) */\n    tag_43:\n        /* \"@uniswap/lib/contracts/libraries/TransferHelper.sol\":492:639  require(... */\n      tag_46\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_47\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_46:\n        /* \"@uniswap/lib/contracts/libraries/TransferHelper.sol\":314:646  {... */\n      pop\n      pop\n        /* \"@uniswap/lib/contracts/libraries/TransferHelper.sol\":212:646  function safeApprove(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_50:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_52:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_53:\n        /* \"#utility.yul\":490:514   */\n      tag_86\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_52\n      jump\t// in\n    tag_86:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_87\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      dup1\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_87:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_54:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_89\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_53\n      jump\t// in\n    tag_89:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:816   */\n    tag_55:\n        /* \"#utility.yul\":727:734   */\n      0x00\n        /* \"#utility.yul\":767:809   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":760:765   */\n      dup3\n        /* \"#utility.yul\":756:810   */\n      and\n        /* \"#utility.yul\":745:810   */\n      swap1\n      pop\n        /* \"#utility.yul\":690:816   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":822:918   */\n    tag_56:\n        /* \"#utility.yul\":859:866   */\n      0x00\n        /* \"#utility.yul\":888:912   */\n      tag_92\n        /* \"#utility.yul\":906:911   */\n      dup3\n        /* \"#utility.yul\":888:912   */\n      tag_55\n      jump\t// in\n    tag_92:\n        /* \"#utility.yul\":877:912   */\n      swap1\n      pop\n        /* \"#utility.yul\":822:918   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":924:1046   */\n    tag_57:\n        /* \"#utility.yul\":997:1021   */\n      tag_94\n        /* \"#utility.yul\":1015:1020   */\n      dup2\n        /* \"#utility.yul\":997:1021   */\n      tag_56\n      jump\t// in\n    tag_94:\n        /* \"#utility.yul\":990:995   */\n      dup2\n        /* \"#utility.yul\":987:1022   */\n      eq\n        /* \"#utility.yul\":977:1040   */\n      tag_95\n      jumpi\n        /* \"#utility.yul\":1036:1037   */\n      0x00\n        /* \"#utility.yul\":1033:1034   */\n      dup1\n        /* \"#utility.yul\":1026:1038   */\n      revert\n        /* \"#utility.yul\":977:1040   */\n    tag_95:\n        /* \"#utility.yul\":924:1046   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1052:1191   */\n    tag_58:\n        /* \"#utility.yul\":1098:1103   */\n      0x00\n        /* \"#utility.yul\":1136:1142   */\n      dup2\n        /* \"#utility.yul\":1123:1143   */\n      calldataload\n        /* \"#utility.yul\":1114:1143   */\n      swap1\n      pop\n        /* \"#utility.yul\":1152:1185   */\n      tag_97\n        /* \"#utility.yul\":1179:1184   */\n      dup2\n        /* \"#utility.yul\":1152:1185   */\n      tag_57\n      jump\t// in\n    tag_97:\n        /* \"#utility.yul\":1052:1191   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1197:1962   */\n    tag_6:\n        /* \"#utility.yul\":1283:1289   */\n      0x00\n        /* \"#utility.yul\":1291:1297   */\n      dup1\n        /* \"#utility.yul\":1299:1305   */\n      0x00\n        /* \"#utility.yul\":1307:1313   */\n      dup1\n        /* \"#utility.yul\":1356:1359   */\n      0x80\n        /* \"#utility.yul\":1344:1353   */\n      dup6\n        /* \"#utility.yul\":1335:1342   */\n      dup8\n        /* \"#utility.yul\":1331:1354   */\n      sub\n        /* \"#utility.yul\":1327:1360   */\n      slt\n        /* \"#utility.yul\":1324:1444   */\n      iszero\n      tag_99\n      jumpi\n        /* \"#utility.yul\":1363:1442   */\n      tag_100\n      tag_50\n      jump\t// in\n    tag_100:\n        /* \"#utility.yul\":1324:1444   */\n    tag_99:\n        /* \"#utility.yul\":1483:1484   */\n      0x00\n        /* \"#utility.yul\":1508:1561   */\n      tag_101\n        /* \"#utility.yul\":1553:1560   */\n      dup8\n        /* \"#utility.yul\":1544:1550   */\n      dup3\n        /* \"#utility.yul\":1533:1542   */\n      dup9\n        /* \"#utility.yul\":1529:1551   */\n      add\n        /* \"#utility.yul\":1508:1561   */\n      tag_54\n      jump\t// in\n    tag_101:\n        /* \"#utility.yul\":1498:1561   */\n      swap5\n      pop\n        /* \"#utility.yul\":1454:1571   */\n      pop\n        /* \"#utility.yul\":1610:1612   */\n      0x20\n        /* \"#utility.yul\":1636:1689   */\n      tag_102\n        /* \"#utility.yul\":1681:1688   */\n      dup8\n        /* \"#utility.yul\":1672:1678   */\n      dup3\n        /* \"#utility.yul\":1661:1670   */\n      dup9\n        /* \"#utility.yul\":1657:1679   */\n      add\n        /* \"#utility.yul\":1636:1689   */\n      tag_58\n      jump\t// in\n    tag_102:\n        /* \"#utility.yul\":1626:1689   */\n      swap4\n      pop\n        /* \"#utility.yul\":1581:1699   */\n      pop\n        /* \"#utility.yul\":1738:1740   */\n      0x40\n        /* \"#utility.yul\":1764:1817   */\n      tag_103\n        /* \"#utility.yul\":1809:1816   */\n      dup8\n        /* \"#utility.yul\":1800:1806   */\n      dup3\n        /* \"#utility.yul\":1789:1798   */\n      dup9\n        /* \"#utility.yul\":1785:1807   */\n      add\n        /* \"#utility.yul\":1764:1817   */\n      tag_58\n      jump\t// in\n    tag_103:\n        /* \"#utility.yul\":1754:1817   */\n      swap3\n      pop\n        /* \"#utility.yul\":1709:1827   */\n      pop\n        /* \"#utility.yul\":1866:1868   */\n      0x60\n        /* \"#utility.yul\":1892:1945   */\n      tag_104\n        /* \"#utility.yul\":1937:1944   */\n      dup8\n        /* \"#utility.yul\":1928:1934   */\n      dup3\n        /* \"#utility.yul\":1917:1926   */\n      dup9\n        /* \"#utility.yul\":1913:1935   */\n      add\n        /* \"#utility.yul\":1892:1945   */\n      tag_58\n      jump\t// in\n    tag_104:\n        /* \"#utility.yul\":1882:1945   */\n      swap2\n      pop\n        /* \"#utility.yul\":1837:1955   */\n      pop\n        /* \"#utility.yul\":1197:1962   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1968:2086   */\n    tag_59:\n        /* \"#utility.yul\":2055:2079   */\n      tag_106\n        /* \"#utility.yul\":2073:2078   */\n      dup2\n        /* \"#utility.yul\":2055:2079   */\n      tag_52\n      jump\t// in\n    tag_106:\n        /* \"#utility.yul\":2050:2053   */\n      dup3\n        /* \"#utility.yul\":2043:2080   */\n      mstore\n        /* \"#utility.yul\":1968:2086   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2092:2314   */\n    tag_9:\n        /* \"#utility.yul\":2185:2189   */\n      0x00\n        /* \"#utility.yul\":2223:2225   */\n      0x20\n        /* \"#utility.yul\":2212:2221   */\n      dup3\n        /* \"#utility.yul\":2208:2226   */\n      add\n        /* \"#utility.yul\":2200:2226   */\n      swap1\n      pop\n        /* \"#utility.yul\":2236:2307   */\n      tag_108\n        /* \"#utility.yul\":2304:2305   */\n      0x00\n        /* \"#utility.yul\":2293:2302   */\n      dup4\n        /* \"#utility.yul\":2289:2306   */\n      add\n        /* \"#utility.yul\":2280:2286   */\n      dup5\n        /* \"#utility.yul\":2236:2307   */\n      tag_59\n      jump\t// in\n    tag_108:\n        /* \"#utility.yul\":2092:2314   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2320:2428   */\n    tag_60:\n        /* \"#utility.yul\":2397:2421   */\n      tag_110\n        /* \"#utility.yul\":2415:2420   */\n      dup2\n        /* \"#utility.yul\":2397:2421   */\n      tag_56\n      jump\t// in\n    tag_110:\n        /* \"#utility.yul\":2392:2395   */\n      dup3\n        /* \"#utility.yul\":2385:2422   */\n      mstore\n        /* \"#utility.yul\":2320:2428   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2434:2525   */\n    tag_61:\n        /* \"#utility.yul\":2470:2477   */\n      0x00\n        /* \"#utility.yul\":2510:2518   */\n      0xffffff\n        /* \"#utility.yul\":2503:2508   */\n      dup3\n        /* \"#utility.yul\":2499:2519   */\n      and\n        /* \"#utility.yul\":2488:2519   */\n      swap1\n      pop\n        /* \"#utility.yul\":2434:2525   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2531:2636   */\n    tag_62:\n        /* \"#utility.yul\":2606:2629   */\n      tag_113\n        /* \"#utility.yul\":2623:2628   */\n      dup2\n        /* \"#utility.yul\":2606:2629   */\n      tag_61\n      jump\t// in\n    tag_113:\n        /* \"#utility.yul\":2601:2604   */\n      dup3\n        /* \"#utility.yul\":2594:2630   */\n      mstore\n        /* \"#utility.yul\":2531:2636   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2642:2750   */\n    tag_63:\n        /* \"#utility.yul\":2719:2743   */\n      tag_115\n        /* \"#utility.yul\":2737:2742   */\n      dup2\n        /* \"#utility.yul\":2719:2743   */\n      tag_52\n      jump\t// in\n    tag_115:\n        /* \"#utility.yul\":2714:2717   */\n      dup3\n        /* \"#utility.yul\":2707:2744   */\n      mstore\n        /* \"#utility.yul\":2642:2750   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2756:2864   */\n    tag_64:\n        /* \"#utility.yul\":2833:2857   */\n      tag_117\n        /* \"#utility.yul\":2851:2856   */\n      dup2\n        /* \"#utility.yul\":2833:2857   */\n      tag_55\n      jump\t// in\n    tag_117:\n        /* \"#utility.yul\":2828:2831   */\n      dup3\n        /* \"#utility.yul\":2821:2858   */\n      mstore\n        /* \"#utility.yul\":2756:2864   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2968:4411   */\n    tag_65:\n        /* \"#utility.yul\":3143:3147   */\n      0xe0\n        /* \"#utility.yul\":3138:3141   */\n      dup3\n        /* \"#utility.yul\":3134:3148   */\n      add\n        /* \"#utility.yul\":3233:3237   */\n      0x00\n        /* \"#utility.yul\":3226:3231   */\n      dup3\n        /* \"#utility.yul\":3222:3238   */\n      add\n        /* \"#utility.yul\":3216:3239   */\n      mload\n        /* \"#utility.yul\":3252:3315   */\n      tag_119\n        /* \"#utility.yul\":3309:3313   */\n      0x00\n        /* \"#utility.yul\":3304:3307   */\n      dup6\n        /* \"#utility.yul\":3300:3314   */\n      add\n        /* \"#utility.yul\":3286:3298   */\n      dup3\n        /* \"#utility.yul\":3252:3315   */\n      tag_60\n      jump\t// in\n    tag_119:\n        /* \"#utility.yul\":3158:3325   */\n      pop\n        /* \"#utility.yul\":3411:3415   */\n      0x20\n        /* \"#utility.yul\":3404:3409   */\n      dup3\n        /* \"#utility.yul\":3400:3416   */\n      add\n        /* \"#utility.yul\":3394:3417   */\n      mload\n        /* \"#utility.yul\":3430:3493   */\n      tag_120\n        /* \"#utility.yul\":3487:3491   */\n      0x20\n        /* \"#utility.yul\":3482:3485   */\n      dup6\n        /* \"#utility.yul\":3478:3492   */\n      add\n        /* \"#utility.yul\":3464:3476   */\n      dup3\n        /* \"#utility.yul\":3430:3493   */\n      tag_60\n      jump\t// in\n    tag_120:\n        /* \"#utility.yul\":3335:3503   */\n      pop\n        /* \"#utility.yul\":3584:3588   */\n      0x40\n        /* \"#utility.yul\":3577:3582   */\n      dup3\n        /* \"#utility.yul\":3573:3589   */\n      add\n        /* \"#utility.yul\":3567:3590   */\n      mload\n        /* \"#utility.yul\":3603:3664   */\n      tag_121\n        /* \"#utility.yul\":3658:3662   */\n      0x40\n        /* \"#utility.yul\":3653:3656   */\n      dup6\n        /* \"#utility.yul\":3649:3663   */\n      add\n        /* \"#utility.yul\":3635:3647   */\n      dup3\n        /* \"#utility.yul\":3603:3664   */\n      tag_62\n      jump\t// in\n    tag_121:\n        /* \"#utility.yul\":3513:3674   */\n      pop\n        /* \"#utility.yul\":3761:3765   */\n      0x60\n        /* \"#utility.yul\":3754:3759   */\n      dup3\n        /* \"#utility.yul\":3750:3766   */\n      add\n        /* \"#utility.yul\":3744:3767   */\n      mload\n        /* \"#utility.yul\":3780:3843   */\n      tag_122\n        /* \"#utility.yul\":3837:3841   */\n      0x60\n        /* \"#utility.yul\":3832:3835   */\n      dup6\n        /* \"#utility.yul\":3828:3842   */\n      add\n        /* \"#utility.yul\":3814:3826   */\n      dup3\n        /* \"#utility.yul\":3780:3843   */\n      tag_60\n      jump\t// in\n    tag_122:\n        /* \"#utility.yul\":3684:3853   */\n      pop\n        /* \"#utility.yul\":3939:3943   */\n      0x80\n        /* \"#utility.yul\":3932:3937   */\n      dup3\n        /* \"#utility.yul\":3928:3944   */\n      add\n        /* \"#utility.yul\":3922:3945   */\n      mload\n        /* \"#utility.yul\":3958:4021   */\n      tag_123\n        /* \"#utility.yul\":4015:4019   */\n      0x80\n        /* \"#utility.yul\":4010:4013   */\n      dup6\n        /* \"#utility.yul\":4006:4020   */\n      add\n        /* \"#utility.yul\":3992:4004   */\n      dup3\n        /* \"#utility.yul\":3958:4021   */\n      tag_63\n      jump\t// in\n    tag_123:\n        /* \"#utility.yul\":3863:4031   */\n      pop\n        /* \"#utility.yul\":4125:4129   */\n      0xa0\n        /* \"#utility.yul\":4118:4123   */\n      dup3\n        /* \"#utility.yul\":4114:4130   */\n      add\n        /* \"#utility.yul\":4108:4131   */\n      mload\n        /* \"#utility.yul\":4144:4207   */\n      tag_124\n        /* \"#utility.yul\":4201:4205   */\n      0xa0\n        /* \"#utility.yul\":4196:4199   */\n      dup6\n        /* \"#utility.yul\":4192:4206   */\n      add\n        /* \"#utility.yul\":4178:4190   */\n      dup3\n        /* \"#utility.yul\":4144:4207   */\n      tag_63\n      jump\t// in\n    tag_124:\n        /* \"#utility.yul\":4041:4217   */\n      pop\n        /* \"#utility.yul\":4312:4316   */\n      0xc0\n        /* \"#utility.yul\":4305:4310   */\n      dup3\n        /* \"#utility.yul\":4301:4317   */\n      add\n        /* \"#utility.yul\":4295:4318   */\n      mload\n        /* \"#utility.yul\":4331:4394   */\n      tag_125\n        /* \"#utility.yul\":4388:4392   */\n      0xc0\n        /* \"#utility.yul\":4383:4386   */\n      dup6\n        /* \"#utility.yul\":4379:4393   */\n      add\n        /* \"#utility.yul\":4365:4377   */\n      dup3\n        /* \"#utility.yul\":4331:4394   */\n      tag_64\n      jump\t// in\n    tag_125:\n        /* \"#utility.yul\":4227:4404   */\n      pop\n        /* \"#utility.yul\":3112:4411   */\n      pop\n        /* \"#utility.yul\":2968:4411   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4417:4796   */\n    tag_16:\n        /* \"#utility.yul\":4588:4592   */\n      0x00\n        /* \"#utility.yul\":4626:4629   */\n      0xe0\n        /* \"#utility.yul\":4615:4624   */\n      dup3\n        /* \"#utility.yul\":4611:4630   */\n      add\n        /* \"#utility.yul\":4603:4630   */\n      swap1\n      pop\n        /* \"#utility.yul\":4640:4789   */\n      tag_127\n        /* \"#utility.yul\":4786:4787   */\n      0x00\n        /* \"#utility.yul\":4775:4784   */\n      dup4\n        /* \"#utility.yul\":4771:4788   */\n      add\n        /* \"#utility.yul\":4762:4768   */\n      dup5\n        /* \"#utility.yul\":4640:4789   */\n      tag_65\n      jump\t// in\n    tag_127:\n        /* \"#utility.yul\":4417:4796   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4802:4945   */\n    tag_66:\n        /* \"#utility.yul\":4859:4864   */\n      0x00\n        /* \"#utility.yul\":4890:4896   */\n      dup2\n        /* \"#utility.yul\":4884:4897   */\n      mload\n        /* \"#utility.yul\":4875:4897   */\n      swap1\n      pop\n        /* \"#utility.yul\":4906:4939   */\n      tag_129\n        /* \"#utility.yul\":4933:4938   */\n      dup2\n        /* \"#utility.yul\":4906:4939   */\n      tag_53\n      jump\t// in\n    tag_129:\n        /* \"#utility.yul\":4802:4945   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4951:5302   */\n    tag_20:\n        /* \"#utility.yul\":5021:5027   */\n      0x00\n        /* \"#utility.yul\":5070:5072   */\n      0x20\n        /* \"#utility.yul\":5058:5067   */\n      dup3\n        /* \"#utility.yul\":5049:5056   */\n      dup5\n        /* \"#utility.yul\":5045:5068   */\n      sub\n        /* \"#utility.yul\":5041:5073   */\n      slt\n        /* \"#utility.yul\":5038:5157   */\n      iszero\n      tag_131\n      jumpi\n        /* \"#utility.yul\":5076:5155   */\n      tag_132\n      tag_50\n      jump\t// in\n    tag_132:\n        /* \"#utility.yul\":5038:5157   */\n    tag_131:\n        /* \"#utility.yul\":5196:5197   */\n      0x00\n        /* \"#utility.yul\":5221:5285   */\n      tag_133\n        /* \"#utility.yul\":5277:5284   */\n      dup5\n        /* \"#utility.yul\":5268:5274   */\n      dup3\n        /* \"#utility.yul\":5257:5266   */\n      dup6\n        /* \"#utility.yul\":5253:5275   */\n      add\n        /* \"#utility.yul\":5221:5285   */\n      tag_66\n      jump\t// in\n    tag_133:\n        /* \"#utility.yul\":5211:5285   */\n      swap2\n      pop\n        /* \"#utility.yul\":5167:5295   */\n      pop\n        /* \"#utility.yul\":4951:5302   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5308:5426   */\n    tag_67:\n        /* \"#utility.yul\":5395:5419   */\n      tag_135\n        /* \"#utility.yul\":5413:5418   */\n      dup2\n        /* \"#utility.yul\":5395:5419   */\n      tag_56\n      jump\t// in\n    tag_135:\n        /* \"#utility.yul\":5390:5393   */\n      dup3\n        /* \"#utility.yul\":5383:5420   */\n      mstore\n        /* \"#utility.yul\":5308:5426   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5432:5874   */\n    tag_23:\n        /* \"#utility.yul\":5581:5585   */\n      0x00\n        /* \"#utility.yul\":5619:5621   */\n      0x60\n        /* \"#utility.yul\":5608:5617   */\n      dup3\n        /* \"#utility.yul\":5604:5622   */\n      add\n        /* \"#utility.yul\":5596:5622   */\n      swap1\n      pop\n        /* \"#utility.yul\":5632:5703   */\n      tag_137\n        /* \"#utility.yul\":5700:5701   */\n      0x00\n        /* \"#utility.yul\":5689:5698   */\n      dup4\n        /* \"#utility.yul\":5685:5702   */\n      add\n        /* \"#utility.yul\":5676:5682   */\n      dup7\n        /* \"#utility.yul\":5632:5703   */\n      tag_67\n      jump\t// in\n    tag_137:\n        /* \"#utility.yul\":5713:5785   */\n      tag_138\n        /* \"#utility.yul\":5781:5783   */\n      0x20\n        /* \"#utility.yul\":5770:5779   */\n      dup4\n        /* \"#utility.yul\":5766:5784   */\n      add\n        /* \"#utility.yul\":5757:5763   */\n      dup6\n        /* \"#utility.yul\":5713:5785   */\n      tag_67\n      jump\t// in\n    tag_138:\n        /* \"#utility.yul\":5795:5867   */\n      tag_139\n        /* \"#utility.yul\":5863:5865   */\n      0x40\n        /* \"#utility.yul\":5852:5861   */\n      dup4\n        /* \"#utility.yul\":5848:5866   */\n      add\n        /* \"#utility.yul\":5839:5845   */\n      dup5\n        /* \"#utility.yul\":5795:5867   */\n      tag_59\n      jump\t// in\n    tag_139:\n        /* \"#utility.yul\":5432:5874   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5880:5978   */\n    tag_68:\n        /* \"#utility.yul\":5931:5937   */\n      0x00\n        /* \"#utility.yul\":5965:5970   */\n      dup2\n        /* \"#utility.yul\":5959:5971   */\n      mload\n        /* \"#utility.yul\":5949:5971   */\n      swap1\n      pop\n        /* \"#utility.yul\":5880:5978   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5984:6131   */\n    tag_69:\n        /* \"#utility.yul\":6085:6096   */\n      0x00\n        /* \"#utility.yul\":6122:6125   */\n      dup2\n        /* \"#utility.yul\":6107:6125   */\n      swap1\n      pop\n        /* \"#utility.yul\":5984:6131   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6137:6276   */\n    tag_70:\n        /* \"#utility.yul\":6226:6232   */\n      dup3\n        /* \"#utility.yul\":6221:6224   */\n      dup2\n        /* \"#utility.yul\":6216:6219   */\n      dup4\n        /* \"#utility.yul\":6210:6233   */\n      mcopy\n        /* \"#utility.yul\":6267:6268   */\n      0x00\n        /* \"#utility.yul\":6258:6264   */\n      dup4\n        /* \"#utility.yul\":6253:6256   */\n      dup4\n        /* \"#utility.yul\":6249:6265   */\n      add\n        /* \"#utility.yul\":6242:6269   */\n      mstore\n        /* \"#utility.yul\":6137:6276   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6282:6668   */\n    tag_71:\n        /* \"#utility.yul\":6386:6389   */\n      0x00\n        /* \"#utility.yul\":6414:6452   */\n      tag_144\n        /* \"#utility.yul\":6446:6451   */\n      dup3\n        /* \"#utility.yul\":6414:6452   */\n      tag_68\n      jump\t// in\n    tag_144:\n        /* \"#utility.yul\":6468:6556   */\n      tag_145\n        /* \"#utility.yul\":6549:6555   */\n      dup2\n        /* \"#utility.yul\":6544:6547   */\n      dup6\n        /* \"#utility.yul\":6468:6556   */\n      tag_69\n      jump\t// in\n    tag_145:\n        /* \"#utility.yul\":6461:6556   */\n      swap4\n      pop\n        /* \"#utility.yul\":6565:6630   */\n      tag_146\n        /* \"#utility.yul\":6623:6629   */\n      dup2\n        /* \"#utility.yul\":6618:6621   */\n      dup6\n        /* \"#utility.yul\":6611:6615   */\n      0x20\n        /* \"#utility.yul\":6604:6609   */\n      dup7\n        /* \"#utility.yul\":6600:6616   */\n      add\n        /* \"#utility.yul\":6565:6630   */\n      tag_70\n      jump\t// in\n    tag_146:\n        /* \"#utility.yul\":6655:6661   */\n      dup1\n        /* \"#utility.yul\":6650:6653   */\n      dup5\n        /* \"#utility.yul\":6646:6662   */\n      add\n        /* \"#utility.yul\":6639:6662   */\n      swap2\n      pop\n        /* \"#utility.yul\":6390:6668   */\n      pop\n        /* \"#utility.yul\":6282:6668   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6674:6945   */\n    tag_25:\n        /* \"#utility.yul\":6804:6807   */\n      0x00\n        /* \"#utility.yul\":6826:6919   */\n      tag_148\n        /* \"#utility.yul\":6915:6918   */\n      dup3\n        /* \"#utility.yul\":6906:6912   */\n      dup5\n        /* \"#utility.yul\":6826:6919   */\n      tag_71\n      jump\t// in\n    tag_148:\n        /* \"#utility.yul\":6819:6919   */\n      swap2\n      pop\n        /* \"#utility.yul\":6936:6939   */\n      dup2\n        /* \"#utility.yul\":6929:6939   */\n      swap1\n      pop\n        /* \"#utility.yul\":6674:6945   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6951:7041   */\n    tag_72:\n        /* \"#utility.yul\":6985:6992   */\n      0x00\n        /* \"#utility.yul\":7028:7033   */\n      dup2\n        /* \"#utility.yul\":7021:7034   */\n      iszero\n        /* \"#utility.yul\":7014:7035   */\n      iszero\n        /* \"#utility.yul\":7003:7035   */\n      swap1\n      pop\n        /* \"#utility.yul\":6951:7041   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7047:7163   */\n    tag_73:\n        /* \"#utility.yul\":7117:7138   */\n      tag_151\n        /* \"#utility.yul\":7132:7137   */\n      dup2\n        /* \"#utility.yul\":7117:7138   */\n      tag_72\n      jump\t// in\n    tag_151:\n        /* \"#utility.yul\":7110:7115   */\n      dup2\n        /* \"#utility.yul\":7107:7139   */\n      eq\n        /* \"#utility.yul\":7097:7157   */\n      tag_152\n      jumpi\n        /* \"#utility.yul\":7153:7154   */\n      0x00\n        /* \"#utility.yul\":7150:7151   */\n      dup1\n        /* \"#utility.yul\":7143:7155   */\n      revert\n        /* \"#utility.yul\":7097:7157   */\n    tag_152:\n        /* \"#utility.yul\":7047:7163   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7169:7306   */\n    tag_74:\n        /* \"#utility.yul\":7223:7228   */\n      0x00\n        /* \"#utility.yul\":7254:7260   */\n      dup2\n        /* \"#utility.yul\":7248:7261   */\n      mload\n        /* \"#utility.yul\":7239:7261   */\n      swap1\n      pop\n        /* \"#utility.yul\":7270:7300   */\n      tag_154\n        /* \"#utility.yul\":7294:7299   */\n      dup2\n        /* \"#utility.yul\":7270:7300   */\n      tag_73\n      jump\t// in\n    tag_154:\n        /* \"#utility.yul\":7169:7306   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7312:7657   */\n    tag_32:\n        /* \"#utility.yul\":7379:7385   */\n      0x00\n        /* \"#utility.yul\":7428:7430   */\n      0x20\n        /* \"#utility.yul\":7416:7425   */\n      dup3\n        /* \"#utility.yul\":7407:7414   */\n      dup5\n        /* \"#utility.yul\":7403:7426   */\n      sub\n        /* \"#utility.yul\":7399:7431   */\n      slt\n        /* \"#utility.yul\":7396:7515   */\n      iszero\n      tag_156\n      jumpi\n        /* \"#utility.yul\":7434:7513   */\n      tag_157\n      tag_50\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":7396:7515   */\n    tag_156:\n        /* \"#utility.yul\":7554:7555   */\n      0x00\n        /* \"#utility.yul\":7579:7640   */\n      tag_158\n        /* \"#utility.yul\":7632:7639   */\n      dup5\n        /* \"#utility.yul\":7623:7629   */\n      dup3\n        /* \"#utility.yul\":7612:7621   */\n      dup6\n        /* \"#utility.yul\":7608:7630   */\n      add\n        /* \"#utility.yul\":7579:7640   */\n      tag_74\n      jump\t// in\n    tag_158:\n        /* \"#utility.yul\":7569:7640   */\n      swap2\n      pop\n        /* \"#utility.yul\":7525:7650   */\n      pop\n        /* \"#utility.yul\":7312:7657   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7663:7832   */\n    tag_75:\n        /* \"#utility.yul\":7747:7758   */\n      0x00\n        /* \"#utility.yul\":7781:7787   */\n      dup3\n        /* \"#utility.yul\":7776:7779   */\n      dup3\n        /* \"#utility.yul\":7769:7788   */\n      mstore\n        /* \"#utility.yul\":7821:7825   */\n      0x20\n        /* \"#utility.yul\":7816:7819   */\n      dup3\n        /* \"#utility.yul\":7812:7826   */\n      add\n        /* \"#utility.yul\":7797:7826   */\n      swap1\n      pop\n        /* \"#utility.yul\":7663:7832   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7838:8074   */\n    tag_76:\n        /* \"#utility.yul\":7978:8012   */\n      0x5472616e7366657248656c7065723a3a7472616e7366657246726f6d3a207472\n        /* \"#utility.yul\":7974:7975   */\n      0x00\n        /* \"#utility.yul\":7966:7972   */\n      dup3\n        /* \"#utility.yul\":7962:7976   */\n      add\n        /* \"#utility.yul\":7955:8013   */\n      mstore\n        /* \"#utility.yul\":8047:8066   */\n      0x616e7366657246726f6d206661696c6564000000000000000000000000000000\n        /* \"#utility.yul\":8042:8044   */\n      0x20\n        /* \"#utility.yul\":8034:8040   */\n      dup3\n        /* \"#utility.yul\":8030:8045   */\n      add\n        /* \"#utility.yul\":8023:8067   */\n      mstore\n        /* \"#utility.yul\":7838:8074   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8080:8446   */\n    tag_77:\n        /* \"#utility.yul\":8222:8225   */\n      0x00\n        /* \"#utility.yul\":8243:8310   */\n      tag_162\n        /* \"#utility.yul\":8307:8309   */\n      0x31\n        /* \"#utility.yul\":8302:8305   */\n      dup4\n        /* \"#utility.yul\":8243:8310   */\n      tag_75\n      jump\t// in\n    tag_162:\n        /* \"#utility.yul\":8236:8310   */\n      swap2\n      pop\n        /* \"#utility.yul\":8319:8412   */\n      tag_163\n        /* \"#utility.yul\":8408:8411   */\n      dup3\n        /* \"#utility.yul\":8319:8412   */\n      tag_76\n      jump\t// in\n    tag_163:\n        /* \"#utility.yul\":8437:8439   */\n      0x40\n        /* \"#utility.yul\":8432:8435   */\n      dup3\n        /* \"#utility.yul\":8428:8440   */\n      add\n        /* \"#utility.yul\":8421:8440   */\n      swap1\n      pop\n        /* \"#utility.yul\":8080:8446   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8452:8871   */\n    tag_35:\n        /* \"#utility.yul\":8618:8622   */\n      0x00\n        /* \"#utility.yul\":8656:8658   */\n      0x20\n        /* \"#utility.yul\":8645:8654   */\n      dup3\n        /* \"#utility.yul\":8641:8659   */\n      add\n        /* \"#utility.yul\":8633:8659   */\n      swap1\n      pop\n        /* \"#utility.yul\":8705:8714   */\n      dup2\n        /* \"#utility.yul\":8699:8703   */\n      dup2\n        /* \"#utility.yul\":8695:8715   */\n      sub\n        /* \"#utility.yul\":8691:8692   */\n      0x00\n        /* \"#utility.yul\":8680:8689   */\n      dup4\n        /* \"#utility.yul\":8676:8693   */\n      add\n        /* \"#utility.yul\":8669:8716   */\n      mstore\n        /* \"#utility.yul\":8733:8864   */\n      tag_165\n        /* \"#utility.yul\":8859:8863   */\n      dup2\n        /* \"#utility.yul\":8733:8864   */\n      tag_77\n      jump\t// in\n    tag_165:\n        /* \"#utility.yul\":8725:8864   */\n      swap1\n      pop\n        /* \"#utility.yul\":8452:8871   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8877:9209   */\n    tag_38:\n        /* \"#utility.yul\":8998:9002   */\n      0x00\n        /* \"#utility.yul\":9036:9038   */\n      0x40\n        /* \"#utility.yul\":9025:9034   */\n      dup3\n        /* \"#utility.yul\":9021:9039   */\n      add\n        /* \"#utility.yul\":9013:9039   */\n      swap1\n      pop\n        /* \"#utility.yul\":9049:9120   */\n      tag_167\n        /* \"#utility.yul\":9117:9118   */\n      0x00\n        /* \"#utility.yul\":9106:9115   */\n      dup4\n        /* \"#utility.yul\":9102:9119   */\n      add\n        /* \"#utility.yul\":9093:9099   */\n      dup6\n        /* \"#utility.yul\":9049:9120   */\n      tag_67\n      jump\t// in\n    tag_167:\n        /* \"#utility.yul\":9130:9202   */\n      tag_168\n        /* \"#utility.yul\":9198:9200   */\n      0x20\n        /* \"#utility.yul\":9187:9196   */\n      dup4\n        /* \"#utility.yul\":9183:9201   */\n      add\n        /* \"#utility.yul\":9174:9180   */\n      dup5\n        /* \"#utility.yul\":9130:9202   */\n      tag_59\n      jump\t// in\n    tag_168:\n        /* \"#utility.yul\":8877:9209   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9215:9445   */\n    tag_78:\n        /* \"#utility.yul\":9355:9389   */\n      0x5472616e7366657248656c7065723a3a73616665417070726f76653a20617070\n        /* \"#utility.yul\":9351:9352   */\n      0x00\n        /* \"#utility.yul\":9343:9349   */\n      dup3\n        /* \"#utility.yul\":9339:9353   */\n      add\n        /* \"#utility.yul\":9332:9390   */\n      mstore\n        /* \"#utility.yul\":9424:9437   */\n      0x726f7665206661696c6564000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9419:9421   */\n      0x20\n        /* \"#utility.yul\":9411:9417   */\n      dup3\n        /* \"#utility.yul\":9407:9422   */\n      add\n        /* \"#utility.yul\":9400:9438   */\n      mstore\n        /* \"#utility.yul\":9215:9445   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9451:9817   */\n    tag_79:\n        /* \"#utility.yul\":9593:9596   */\n      0x00\n        /* \"#utility.yul\":9614:9681   */\n      tag_171\n        /* \"#utility.yul\":9678:9680   */\n      0x2b\n        /* \"#utility.yul\":9673:9676   */\n      dup4\n        /* \"#utility.yul\":9614:9681   */\n      tag_75\n      jump\t// in\n    tag_171:\n        /* \"#utility.yul\":9607:9681   */\n      swap2\n      pop\n        /* \"#utility.yul\":9690:9783   */\n      tag_172\n        /* \"#utility.yul\":9779:9782   */\n      dup3\n        /* \"#utility.yul\":9690:9783   */\n      tag_78\n      jump\t// in\n    tag_172:\n        /* \"#utility.yul\":9808:9810   */\n      0x40\n        /* \"#utility.yul\":9803:9806   */\n      dup3\n        /* \"#utility.yul\":9799:9811   */\n      add\n        /* \"#utility.yul\":9792:9811   */\n      swap1\n      pop\n        /* \"#utility.yul\":9451:9817   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9823:10242   */\n    tag_48:\n        /* \"#utility.yul\":9989:9993   */\n      0x00\n        /* \"#utility.yul\":10027:10029   */\n      0x20\n        /* \"#utility.yul\":10016:10025   */\n      dup3\n        /* \"#utility.yul\":10012:10030   */\n      add\n        /* \"#utility.yul\":10004:10030   */\n      swap1\n      pop\n        /* \"#utility.yul\":10076:10085   */\n      dup2\n        /* \"#utility.yul\":10070:10074   */\n      dup2\n        /* \"#utility.yul\":10066:10086   */\n      sub\n        /* \"#utility.yul\":10062:10063   */\n      0x00\n        /* \"#utility.yul\":10051:10060   */\n      dup4\n        /* \"#utility.yul\":10047:10064   */\n      add\n        /* \"#utility.yul\":10040:10087   */\n      mstore\n        /* \"#utility.yul\":10104:10235   */\n      tag_174\n        /* \"#utility.yul\":10230:10234   */\n      dup2\n        /* \"#utility.yul\":10104:10235   */\n      tag_79\n      jump\t// in\n    tag_174:\n        /* \"#utility.yul\":10096:10235   */\n      swap1\n      pop\n        /* \"#utility.yul\":9823:10242   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122078bc2d7b8af84d7adff942df37fea2b8d019088f10ecceb8541738b694098df564736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f80fd5b506108d88061001c5f395ff3fe608060405234801561000f575f80fd5b5060043610610029575f3560e01c8063212eaf841461002d575b5f80fd5b61004760048036038101906100429190610489565b61005d565b60405161005491906104fc565b60405180910390f35b5f8084905061006e84333089610195565b6100798482886102c8565b5f6040518060e001604052808673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff168152602001610bb862ffffff1681526020013073ffffffffffffffffffffffffffffffffffffffff1681526020018881526020015f81526020015f73ffffffffffffffffffffffffffffffffffffffff1681525090505f8273ffffffffffffffffffffffffffffffffffffffff166304e45aaf836040518263ffffffff1660e01b815260040161014891906105eb565b6020604051808303815f875af1158015610164573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906101889190610618565b9050505050949350505050565b5f808573ffffffffffffffffffffffffffffffffffffffff166323b872dd8686866040516024016101c893929190610652565b6040516020818303038152906040529060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505060405161021691906106d9565b5f604051808303815f865af19150503d805f811461024f576040519150601f19603f3d011682016040523d82523d5f602084013e610254565b606091505b509150915081801561028157505f8151148061028057508080602001905181019061027f9190610724565b5b5b6102c0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102b7906107cf565b60405180910390fd5b505050505050565b5f808473ffffffffffffffffffffffffffffffffffffffff1663095ea7b385856040516024016102f99291906107ed565b6040516020818303038152906040529060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505060405161034791906106d9565b5f604051808303815f865af19150503d805f8114610380576040519150601f19603f3d011682016040523d82523d5f602084013e610385565b606091505b50915091508180156103b257505f815114806103b15750808060200190518101906103b09190610724565b5b5b6103f1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103e890610884565b60405180910390fd5b5050505050565b5f80fd5b5f819050919050565b61040e816103fc565b8114610418575f80fd5b50565b5f8135905061042981610405565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6104588261042f565b9050919050565b6104688161044e565b8114610472575f80fd5b50565b5f813590506104838161045f565b92915050565b5f805f80608085870312156104a1576104a06103f8565b5b5f6104ae8782880161041b565b94505060206104bf87828801610475565b93505060406104d087828801610475565b92505060606104e187828801610475565b91505092959194509250565b6104f6816103fc565b82525050565b5f60208201905061050f5f8301846104ed565b92915050565b61051e8161044e565b82525050565b5f62ffffff82169050919050565b61053b81610524565b82525050565b61054a816103fc565b82525050565b6105598161042f565b82525050565b60e082015f8201516105735f850182610515565b5060208201516105866020850182610515565b5060408201516105996040850182610532565b5060608201516105ac6060850182610515565b5060808201516105bf6080850182610541565b5060a08201516105d260a0850182610541565b5060c08201516105e560c0850182610550565b50505050565b5f60e0820190506105fe5f83018461055f565b92915050565b5f8151905061061281610405565b92915050565b5f6020828403121561062d5761062c6103f8565b5b5f61063a84828501610604565b91505092915050565b61064c8161044e565b82525050565b5f6060820190506106655f830186610643565b6106726020830185610643565b61067f60408301846104ed565b949350505050565b5f81519050919050565b5f81905092915050565b8281835e5f83830152505050565b5f6106b382610687565b6106bd8185610691565b93506106cd81856020860161069b565b80840191505092915050565b5f6106e482846106a9565b915081905092915050565b5f8115159050919050565b610703816106ef565b811461070d575f80fd5b50565b5f8151905061071e816106fa565b92915050565b5f60208284031215610739576107386103f8565b5b5f61074684828501610710565b91505092915050565b5f82825260208201905092915050565b7f5472616e7366657248656c7065723a3a7472616e7366657246726f6d3a2074725f8201527f616e7366657246726f6d206661696c6564000000000000000000000000000000602082015250565b5f6107b960318361074f565b91506107c48261075f565b604082019050919050565b5f6020820190508181035f8301526107e6816107ad565b9050919050565b5f6040820190506108005f830185610643565b61080d60208301846104ed565b9392505050565b7f5472616e7366657248656c7065723a3a73616665417070726f76653a206170705f8201527f726f7665206661696c6564000000000000000000000000000000000000000000602082015250565b5f61086e602b8361074f565b915061087982610814565b604082019050919050565b5f6020820190508181035f83015261089b81610862565b905091905056fea264697066735822122078bc2d7b8af84d7adff942df37fea2b8d019088f10ecceb8541738b694098df564736f6c63430008190033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x8D8 DUP1 PUSH2 0x1C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x29 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x212EAF84 EQ PUSH2 0x2D JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x47 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x42 SWAP2 SWAP1 PUSH2 0x489 JUMP JUMPDEST PUSH2 0x5D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x54 SWAP2 SWAP1 PUSH2 0x4FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP1 DUP5 SWAP1 POP PUSH2 0x6E DUP5 CALLER ADDRESS DUP10 PUSH2 0x195 JUMP JUMPDEST PUSH2 0x79 DUP5 DUP3 DUP9 PUSH2 0x2C8 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBB8 PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP9 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 POP PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x4E45AAF DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x148 SWAP2 SWAP1 PUSH2 0x5EB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x164 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x188 SWAP2 SWAP1 PUSH2 0x618 JUMP JUMPDEST SWAP1 POP POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1C8 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x652 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0x216 SWAP2 SWAP1 PUSH2 0x6D9 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x24F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x254 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x281 JUMPI POP PUSH0 DUP2 MLOAD EQ DUP1 PUSH2 0x280 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x27F SWAP2 SWAP1 PUSH2 0x724 JUMP JUMPDEST JUMPDEST JUMPDEST PUSH2 0x2C0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B7 SWAP1 PUSH2 0x7CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x2F9 SWAP3 SWAP2 SWAP1 PUSH2 0x7ED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0x347 SWAP2 SWAP1 PUSH2 0x6D9 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x380 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x385 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x3B2 JUMPI POP PUSH0 DUP2 MLOAD EQ DUP1 PUSH2 0x3B1 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x3B0 SWAP2 SWAP1 PUSH2 0x724 JUMP JUMPDEST JUMPDEST JUMPDEST PUSH2 0x3F1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3E8 SWAP1 PUSH2 0x884 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x40E DUP2 PUSH2 0x3FC JUMP JUMPDEST DUP2 EQ PUSH2 0x418 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x429 DUP2 PUSH2 0x405 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x458 DUP3 PUSH2 0x42F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x468 DUP2 PUSH2 0x44E JUMP JUMPDEST DUP2 EQ PUSH2 0x472 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x483 DUP2 PUSH2 0x45F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x4A1 JUMPI PUSH2 0x4A0 PUSH2 0x3F8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x4AE DUP8 DUP3 DUP9 ADD PUSH2 0x41B JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x4BF DUP8 DUP3 DUP9 ADD PUSH2 0x475 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x4D0 DUP8 DUP3 DUP9 ADD PUSH2 0x475 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x4E1 DUP8 DUP3 DUP9 ADD PUSH2 0x475 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH2 0x4F6 DUP2 PUSH2 0x3FC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x50F PUSH0 DUP4 ADD DUP5 PUSH2 0x4ED JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x51E DUP2 PUSH2 0x44E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH3 0xFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x53B DUP2 PUSH2 0x524 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x54A DUP2 PUSH2 0x3FC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x559 DUP2 PUSH2 0x42F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0xE0 DUP3 ADD PUSH0 DUP3 ADD MLOAD PUSH2 0x573 PUSH0 DUP6 ADD DUP3 PUSH2 0x515 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x586 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x515 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x599 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x532 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x5AC PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x515 JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x5BF PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x541 JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0x5D2 PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0x541 JUMP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MLOAD PUSH2 0x5E5 PUSH1 0xC0 DUP6 ADD DUP3 PUSH2 0x550 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x5FE PUSH0 DUP4 ADD DUP5 PUSH2 0x55F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x612 DUP2 PUSH2 0x405 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x62D JUMPI PUSH2 0x62C PUSH2 0x3F8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x63A DUP5 DUP3 DUP6 ADD PUSH2 0x604 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x64C DUP2 PUSH2 0x44E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x665 PUSH0 DUP4 ADD DUP7 PUSH2 0x643 JUMP JUMPDEST PUSH2 0x672 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x643 JUMP JUMPDEST PUSH2 0x67F PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x4ED JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x6B3 DUP3 PUSH2 0x687 JUMP JUMPDEST PUSH2 0x6BD DUP2 DUP6 PUSH2 0x691 JUMP JUMPDEST SWAP4 POP PUSH2 0x6CD DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x69B JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x6E4 DUP3 DUP5 PUSH2 0x6A9 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x703 DUP2 PUSH2 0x6EF JUMP JUMPDEST DUP2 EQ PUSH2 0x70D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x71E DUP2 PUSH2 0x6FA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x739 JUMPI PUSH2 0x738 PUSH2 0x3F8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x746 DUP5 DUP3 DUP6 ADD PUSH2 0x710 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5472616E7366657248656C7065723A3A7472616E7366657246726F6D3A207472 PUSH0 DUP3 ADD MSTORE PUSH32 0x616E7366657246726F6D206661696C6564000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x7B9 PUSH1 0x31 DUP4 PUSH2 0x74F JUMP JUMPDEST SWAP2 POP PUSH2 0x7C4 DUP3 PUSH2 0x75F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x7E6 DUP2 PUSH2 0x7AD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x800 PUSH0 DUP4 ADD DUP6 PUSH2 0x643 JUMP JUMPDEST PUSH2 0x80D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x4ED JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x5472616E7366657248656C7065723A3A73616665417070726F76653A20617070 PUSH0 DUP3 ADD MSTORE PUSH32 0x726F7665206661696C6564000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x86E PUSH1 0x2B DUP4 PUSH2 0x74F JUMP JUMPDEST SWAP2 POP PUSH2 0x879 DUP3 PUSH2 0x814 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x89B DUP2 PUSH2 0x862 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH25 0xBC2D7B8AF84D7ADFF942DF37FEA2B8D019088F10ECCEB85417 CODESIZE 0xB6 SWAP5 MULMOD DUP14 CREATE2 PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ",
							"sourceMap": "295:2647:4:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@doArbitrage_449": {
									"entryPoint": 93,
									"id": 449,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@safeApprove_44": {
									"entryPoint": 712,
									"id": 44,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_133": {
									"entryPoint": 405,
									"id": 133,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 1141,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 1808,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 1051,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 1540,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 1828,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 1560,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_addresst_addresst_address": {
									"entryPoint": 1161,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_encode_t_address_to_t_address": {
									"entryPoint": 1301,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1603,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 1705,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_3f8faf98afe9344b6d4b0e75b0101259bf282914b3b5a9320c6918b6e27ede1c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1965,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_b4dd1eb4be82119fd3a99acfb5dd4c57591eb0ea309359b1af3d65a4460c7123_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2146,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_struct$_ExactInputSingleParams_$181_memory_ptr_to_t_struct$_ExactInputSingleParams_$181_memory_ptr_fromStack": {
									"entryPoint": 1375,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint160_to_t_uint160": {
									"entryPoint": 1360,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint24_to_t_uint24": {
									"entryPoint": 1330,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 1345,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 1261,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 1753,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 1618,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 2029,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3f8faf98afe9344b6d4b0e75b0101259bf282914b3b5a9320c6918b6e27ede1c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1999,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b4dd1eb4be82119fd3a99acfb5dd4c57591eb0ea309359b1af3d65a4460c7123__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2180,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_struct$_ExactInputSingleParams_$181_memory_ptr__to_t_struct$_ExactInputSingleParams_$181_memory_ptr__fromStack_reversed": {
									"entryPoint": 1515,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 1276,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 1671,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 1681,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 1871,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1102,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 1775,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1071,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint24": {
									"entryPoint": 1316,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1020,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 1691,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1016,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_3f8faf98afe9344b6d4b0e75b0101259bf282914b3b5a9320c6918b6e27ede1c": {
									"entryPoint": 1887,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_b4dd1eb4be82119fd3a99acfb5dd4c57591eb0ea309359b1af3d65a4460c7123": {
									"entryPoint": 2068,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1119,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 1786,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1029,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:10245:5",
										"nodeType": "YulBlock",
										"src": "0:10245:5",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:5",
													"nodeType": "YulBlock",
													"src": "47:35:5",
													"statements": [
														{
															"nativeSrc": "57:19:5",
															"nodeType": "YulAssignment",
															"src": "57:19:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:5",
																		"nodeType": "YulLiteral",
																		"src": "73:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:5"
																},
																"nativeSrc": "67:9:5",
																"nodeType": "YulFunctionCall",
																"src": "67:9:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:5"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:5",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:5",
														"nodeType": "YulTypedName",
														"src": "40:6:5",
														"type": ""
													}
												],
												"src": "7:75:5"
											},
											{
												"body": {
													"nativeSrc": "177:28:5",
													"nodeType": "YulBlock",
													"src": "177:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:5",
																		"nodeType": "YulLiteral",
																		"src": "194:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:5",
																		"nodeType": "YulLiteral",
																		"src": "197:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:5"
																},
																"nativeSrc": "187:12:5",
																"nodeType": "YulFunctionCall",
																"src": "187:12:5"
															},
															"nativeSrc": "187:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:5"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:5"
											},
											{
												"body": {
													"nativeSrc": "300:28:5",
													"nodeType": "YulBlock",
													"src": "300:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:5",
																		"nodeType": "YulLiteral",
																		"src": "317:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:5",
																		"nodeType": "YulLiteral",
																		"src": "320:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:5"
																},
																"nativeSrc": "310:12:5",
																"nodeType": "YulFunctionCall",
																"src": "310:12:5"
															},
															"nativeSrc": "310:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:5"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:5"
											},
											{
												"body": {
													"nativeSrc": "379:32:5",
													"nodeType": "YulBlock",
													"src": "379:32:5",
													"statements": [
														{
															"nativeSrc": "389:16:5",
															"nodeType": "YulAssignment",
															"src": "389:16:5",
															"value": {
																"name": "value",
																"nativeSrc": "400:5:5",
																"nodeType": "YulIdentifier",
																"src": "400:5:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "334:77:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:5",
														"nodeType": "YulTypedName",
														"src": "361:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:5",
														"nodeType": "YulTypedName",
														"src": "371:7:5",
														"type": ""
													}
												],
												"src": "334:77:5"
											},
											{
												"body": {
													"nativeSrc": "460:79:5",
													"nodeType": "YulBlock",
													"src": "460:79:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "517:16:5",
																"nodeType": "YulBlock",
																"src": "517:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "526:1:5",
																					"nodeType": "YulLiteral",
																					"src": "526:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "529:1:5",
																					"nodeType": "YulLiteral",
																					"src": "529:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "519:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:5"
																			},
																			"nativeSrc": "519:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:5"
																		},
																		"nativeSrc": "519:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "483:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "508:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "490:17:5",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:5"
																				},
																				"nativeSrc": "490:24:5",
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "480:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:5"
																		},
																		"nativeSrc": "480:35:5",
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "473:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:5"
																},
																"nativeSrc": "473:43:5",
																"nodeType": "YulFunctionCall",
																"src": "473:43:5"
															},
															"nativeSrc": "470:63:5",
															"nodeType": "YulIf",
															"src": "470:63:5"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "417:122:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "453:5:5",
														"nodeType": "YulTypedName",
														"src": "453:5:5",
														"type": ""
													}
												],
												"src": "417:122:5"
											},
											{
												"body": {
													"nativeSrc": "597:87:5",
													"nodeType": "YulBlock",
													"src": "597:87:5",
													"statements": [
														{
															"nativeSrc": "607:29:5",
															"nodeType": "YulAssignment",
															"src": "607:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "629:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "616:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:5"
																},
																"nativeSrc": "616:20:5",
																"nodeType": "YulFunctionCall",
																"src": "616:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "607:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "672:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "645:26:5",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:5"
																},
																"nativeSrc": "645:33:5",
																"nodeType": "YulFunctionCall",
																"src": "645:33:5"
															},
															"nativeSrc": "645:33:5",
															"nodeType": "YulExpressionStatement",
															"src": "645:33:5"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "545:139:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "575:6:5",
														"nodeType": "YulTypedName",
														"src": "575:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "583:3:5",
														"nodeType": "YulTypedName",
														"src": "583:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "591:5:5",
														"nodeType": "YulTypedName",
														"src": "591:5:5",
														"type": ""
													}
												],
												"src": "545:139:5"
											},
											{
												"body": {
													"nativeSrc": "735:81:5",
													"nodeType": "YulBlock",
													"src": "735:81:5",
													"statements": [
														{
															"nativeSrc": "745:65:5",
															"nodeType": "YulAssignment",
															"src": "745:65:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "760:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "760:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "767:42:5",
																		"nodeType": "YulLiteral",
																		"src": "767:42:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "756:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "756:3:5"
																},
																"nativeSrc": "756:54:5",
																"nodeType": "YulFunctionCall",
																"src": "756:54:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "745:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "745:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "690:126:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "717:5:5",
														"nodeType": "YulTypedName",
														"src": "717:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "727:7:5",
														"nodeType": "YulTypedName",
														"src": "727:7:5",
														"type": ""
													}
												],
												"src": "690:126:5"
											},
											{
												"body": {
													"nativeSrc": "867:51:5",
													"nodeType": "YulBlock",
													"src": "867:51:5",
													"statements": [
														{
															"nativeSrc": "877:35:5",
															"nodeType": "YulAssignment",
															"src": "877:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "906:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "906:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "888:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "888:17:5"
																},
																"nativeSrc": "888:24:5",
																"nodeType": "YulFunctionCall",
																"src": "888:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "877:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "877:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "822:96:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "849:5:5",
														"nodeType": "YulTypedName",
														"src": "849:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "859:7:5",
														"nodeType": "YulTypedName",
														"src": "859:7:5",
														"type": ""
													}
												],
												"src": "822:96:5"
											},
											{
												"body": {
													"nativeSrc": "967:79:5",
													"nodeType": "YulBlock",
													"src": "967:79:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "1024:16:5",
																"nodeType": "YulBlock",
																"src": "1024:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1033:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1033:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1036:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1036:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1026:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1026:6:5"
																			},
																			"nativeSrc": "1026:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1026:12:5"
																		},
																		"nativeSrc": "1026:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1026:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "990:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "990:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1015:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "1015:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "997:17:5",
																					"nodeType": "YulIdentifier",
																					"src": "997:17:5"
																				},
																				"nativeSrc": "997:24:5",
																				"nodeType": "YulFunctionCall",
																				"src": "997:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "987:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "987:2:5"
																		},
																		"nativeSrc": "987:35:5",
																		"nodeType": "YulFunctionCall",
																		"src": "987:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "980:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "980:6:5"
																},
																"nativeSrc": "980:43:5",
																"nodeType": "YulFunctionCall",
																"src": "980:43:5"
															},
															"nativeSrc": "977:63:5",
															"nodeType": "YulIf",
															"src": "977:63:5"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "924:122:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "960:5:5",
														"nodeType": "YulTypedName",
														"src": "960:5:5",
														"type": ""
													}
												],
												"src": "924:122:5"
											},
											{
												"body": {
													"nativeSrc": "1104:87:5",
													"nodeType": "YulBlock",
													"src": "1104:87:5",
													"statements": [
														{
															"nativeSrc": "1114:29:5",
															"nodeType": "YulAssignment",
															"src": "1114:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1136:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1136:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1123:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "1123:12:5"
																},
																"nativeSrc": "1123:20:5",
																"nodeType": "YulFunctionCall",
																"src": "1123:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1114:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "1114:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1179:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "1179:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "1152:26:5",
																	"nodeType": "YulIdentifier",
																	"src": "1152:26:5"
																},
																"nativeSrc": "1152:33:5",
																"nodeType": "YulFunctionCall",
																"src": "1152:33:5"
															},
															"nativeSrc": "1152:33:5",
															"nodeType": "YulExpressionStatement",
															"src": "1152:33:5"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1052:139:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1082:6:5",
														"nodeType": "YulTypedName",
														"src": "1082:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1090:3:5",
														"nodeType": "YulTypedName",
														"src": "1090:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1098:5:5",
														"nodeType": "YulTypedName",
														"src": "1098:5:5",
														"type": ""
													}
												],
												"src": "1052:139:5"
											},
											{
												"body": {
													"nativeSrc": "1314:648:5",
													"nodeType": "YulBlock",
													"src": "1314:648:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "1361:83:5",
																"nodeType": "YulBlock",
																"src": "1361:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1363:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "1363:77:5"
																			},
																			"nativeSrc": "1363:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1363:79:5"
																		},
																		"nativeSrc": "1363:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1363:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1335:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1335:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1344:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1344:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1331:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1331:3:5"
																		},
																		"nativeSrc": "1331:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1331:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1356:3:5",
																		"nodeType": "YulLiteral",
																		"src": "1356:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1327:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1327:3:5"
																},
																"nativeSrc": "1327:33:5",
																"nodeType": "YulFunctionCall",
																"src": "1327:33:5"
															},
															"nativeSrc": "1324:120:5",
															"nodeType": "YulIf",
															"src": "1324:120:5"
														},
														{
															"nativeSrc": "1454:117:5",
															"nodeType": "YulBlock",
															"src": "1454:117:5",
															"statements": [
																{
																	"nativeSrc": "1469:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1469:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1483:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1483:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1473:6:5",
																			"nodeType": "YulTypedName",
																			"src": "1473:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1498:63:5",
																	"nodeType": "YulAssignment",
																	"src": "1498:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1533:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "1533:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1544:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "1544:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1529:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "1529:3:5"
																				},
																				"nativeSrc": "1529:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1529:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1553:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1553:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "1508:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "1508:20:5"
																		},
																		"nativeSrc": "1508:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1508:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1498:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "1498:6:5"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1581:118:5",
															"nodeType": "YulBlock",
															"src": "1581:118:5",
															"statements": [
																{
																	"nativeSrc": "1596:16:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1596:16:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1610:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1610:2:5",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1600:6:5",
																			"nodeType": "YulTypedName",
																			"src": "1600:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1626:63:5",
																	"nodeType": "YulAssignment",
																	"src": "1626:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1661:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "1661:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1672:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "1672:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1657:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "1657:3:5"
																				},
																				"nativeSrc": "1657:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1657:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1681:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1681:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1636:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "1636:20:5"
																		},
																		"nativeSrc": "1636:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1636:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1626:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "1626:6:5"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1709:118:5",
															"nodeType": "YulBlock",
															"src": "1709:118:5",
															"statements": [
																{
																	"nativeSrc": "1724:16:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1724:16:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1738:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1738:2:5",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1728:6:5",
																			"nodeType": "YulTypedName",
																			"src": "1728:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1754:63:5",
																	"nodeType": "YulAssignment",
																	"src": "1754:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1789:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "1789:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1800:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "1800:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1785:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "1785:3:5"
																				},
																				"nativeSrc": "1785:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1785:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1809:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1809:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1764:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "1764:20:5"
																		},
																		"nativeSrc": "1764:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1764:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "1754:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "1754:6:5"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1837:118:5",
															"nodeType": "YulBlock",
															"src": "1837:118:5",
															"statements": [
																{
																	"nativeSrc": "1852:16:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1852:16:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1866:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1866:2:5",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1856:6:5",
																			"nodeType": "YulTypedName",
																			"src": "1856:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1882:63:5",
																	"nodeType": "YulAssignment",
																	"src": "1882:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1917:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "1917:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1928:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "1928:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1913:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "1913:3:5"
																				},
																				"nativeSrc": "1913:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1913:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1937:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1937:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1892:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "1892:20:5"
																		},
																		"nativeSrc": "1892:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1892:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "1882:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "1882:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_addresst_addresst_address",
												"nativeSrc": "1197:765:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1260:9:5",
														"nodeType": "YulTypedName",
														"src": "1260:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1271:7:5",
														"nodeType": "YulTypedName",
														"src": "1271:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1283:6:5",
														"nodeType": "YulTypedName",
														"src": "1283:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1291:6:5",
														"nodeType": "YulTypedName",
														"src": "1291:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1299:6:5",
														"nodeType": "YulTypedName",
														"src": "1299:6:5",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "1307:6:5",
														"nodeType": "YulTypedName",
														"src": "1307:6:5",
														"type": ""
													}
												],
												"src": "1197:765:5"
											},
											{
												"body": {
													"nativeSrc": "2033:53:5",
													"nodeType": "YulBlock",
													"src": "2033:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2050:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "2050:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2073:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "2073:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "2055:17:5",
																			"nodeType": "YulIdentifier",
																			"src": "2055:17:5"
																		},
																		"nativeSrc": "2055:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2055:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2043:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2043:6:5"
																},
																"nativeSrc": "2043:37:5",
																"nodeType": "YulFunctionCall",
																"src": "2043:37:5"
															},
															"nativeSrc": "2043:37:5",
															"nodeType": "YulExpressionStatement",
															"src": "2043:37:5"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "1968:118:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2021:5:5",
														"nodeType": "YulTypedName",
														"src": "2021:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2028:3:5",
														"nodeType": "YulTypedName",
														"src": "2028:3:5",
														"type": ""
													}
												],
												"src": "1968:118:5"
											},
											{
												"body": {
													"nativeSrc": "2190:124:5",
													"nodeType": "YulBlock",
													"src": "2190:124:5",
													"statements": [
														{
															"nativeSrc": "2200:26:5",
															"nodeType": "YulAssignment",
															"src": "2200:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2212:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "2212:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2223:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2223:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2208:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2208:3:5"
																},
																"nativeSrc": "2208:18:5",
																"nodeType": "YulFunctionCall",
																"src": "2208:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2200:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "2200:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2280:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "2280:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2293:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2293:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2304:1:5",
																				"nodeType": "YulLiteral",
																				"src": "2304:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2289:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2289:3:5"
																		},
																		"nativeSrc": "2289:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2289:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "2236:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "2236:43:5"
																},
																"nativeSrc": "2236:71:5",
																"nodeType": "YulFunctionCall",
																"src": "2236:71:5"
															},
															"nativeSrc": "2236:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "2236:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "2092:222:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2162:9:5",
														"nodeType": "YulTypedName",
														"src": "2162:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2174:6:5",
														"nodeType": "YulTypedName",
														"src": "2174:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2185:4:5",
														"nodeType": "YulTypedName",
														"src": "2185:4:5",
														"type": ""
													}
												],
												"src": "2092:222:5"
											},
											{
												"body": {
													"nativeSrc": "2375:53:5",
													"nodeType": "YulBlock",
													"src": "2375:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2392:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "2392:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2415:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "2415:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "2397:17:5",
																			"nodeType": "YulIdentifier",
																			"src": "2397:17:5"
																		},
																		"nativeSrc": "2397:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2397:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2385:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2385:6:5"
																},
																"nativeSrc": "2385:37:5",
																"nodeType": "YulFunctionCall",
																"src": "2385:37:5"
															},
															"nativeSrc": "2385:37:5",
															"nodeType": "YulExpressionStatement",
															"src": "2385:37:5"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address",
												"nativeSrc": "2320:108:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2363:5:5",
														"nodeType": "YulTypedName",
														"src": "2363:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2370:3:5",
														"nodeType": "YulTypedName",
														"src": "2370:3:5",
														"type": ""
													}
												],
												"src": "2320:108:5"
											},
											{
												"body": {
													"nativeSrc": "2478:47:5",
													"nodeType": "YulBlock",
													"src": "2478:47:5",
													"statements": [
														{
															"nativeSrc": "2488:31:5",
															"nodeType": "YulAssignment",
															"src": "2488:31:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2503:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "2503:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2510:8:5",
																		"nodeType": "YulLiteral",
																		"src": "2510:8:5",
																		"type": "",
																		"value": "0xffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2499:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2499:3:5"
																},
																"nativeSrc": "2499:20:5",
																"nodeType": "YulFunctionCall",
																"src": "2499:20:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2488:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "2488:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint24",
												"nativeSrc": "2434:91:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2460:5:5",
														"nodeType": "YulTypedName",
														"src": "2460:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2470:7:5",
														"nodeType": "YulTypedName",
														"src": "2470:7:5",
														"type": ""
													}
												],
												"src": "2434:91:5"
											},
											{
												"body": {
													"nativeSrc": "2584:52:5",
													"nodeType": "YulBlock",
													"src": "2584:52:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2601:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "2601:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2623:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "2623:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint24",
																			"nativeSrc": "2606:16:5",
																			"nodeType": "YulIdentifier",
																			"src": "2606:16:5"
																		},
																		"nativeSrc": "2606:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2606:23:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2594:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2594:6:5"
																},
																"nativeSrc": "2594:36:5",
																"nodeType": "YulFunctionCall",
																"src": "2594:36:5"
															},
															"nativeSrc": "2594:36:5",
															"nodeType": "YulExpressionStatement",
															"src": "2594:36:5"
														}
													]
												},
												"name": "abi_encode_t_uint24_to_t_uint24",
												"nativeSrc": "2531:105:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2572:5:5",
														"nodeType": "YulTypedName",
														"src": "2572:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2579:3:5",
														"nodeType": "YulTypedName",
														"src": "2579:3:5",
														"type": ""
													}
												],
												"src": "2531:105:5"
											},
											{
												"body": {
													"nativeSrc": "2697:53:5",
													"nodeType": "YulBlock",
													"src": "2697:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2714:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "2714:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2737:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "2737:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "2719:17:5",
																			"nodeType": "YulIdentifier",
																			"src": "2719:17:5"
																		},
																		"nativeSrc": "2719:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2719:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2707:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2707:6:5"
																},
																"nativeSrc": "2707:37:5",
																"nodeType": "YulFunctionCall",
																"src": "2707:37:5"
															},
															"nativeSrc": "2707:37:5",
															"nodeType": "YulExpressionStatement",
															"src": "2707:37:5"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nativeSrc": "2642:108:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2685:5:5",
														"nodeType": "YulTypedName",
														"src": "2685:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2692:3:5",
														"nodeType": "YulTypedName",
														"src": "2692:3:5",
														"type": ""
													}
												],
												"src": "2642:108:5"
											},
											{
												"body": {
													"nativeSrc": "2811:53:5",
													"nodeType": "YulBlock",
													"src": "2811:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2828:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "2828:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2851:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "2851:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint160",
																			"nativeSrc": "2833:17:5",
																			"nodeType": "YulIdentifier",
																			"src": "2833:17:5"
																		},
																		"nativeSrc": "2833:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2833:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2821:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2821:6:5"
																},
																"nativeSrc": "2821:37:5",
																"nodeType": "YulFunctionCall",
																"src": "2821:37:5"
															},
															"nativeSrc": "2821:37:5",
															"nodeType": "YulExpressionStatement",
															"src": "2821:37:5"
														}
													]
												},
												"name": "abi_encode_t_uint160_to_t_uint160",
												"nativeSrc": "2756:108:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2799:5:5",
														"nodeType": "YulTypedName",
														"src": "2799:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2806:3:5",
														"nodeType": "YulTypedName",
														"src": "2806:3:5",
														"type": ""
													}
												],
												"src": "2756:108:5"
											},
											{
												"body": {
													"nativeSrc": "3112:1299:5",
													"nodeType": "YulBlock",
													"src": "3112:1299:5",
													"statements": [
														{
															"nativeSrc": "3122:26:5",
															"nodeType": "YulVariableDeclaration",
															"src": "3122:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3138:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "3138:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3143:4:5",
																		"nodeType": "YulLiteral",
																		"src": "3143:4:5",
																		"type": "",
																		"value": "0xe0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3134:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3134:3:5"
																},
																"nativeSrc": "3134:14:5",
																"nodeType": "YulFunctionCall",
																"src": "3134:14:5"
															},
															"variables": [
																{
																	"name": "tail",
																	"nativeSrc": "3126:4:5",
																	"nodeType": "YulTypedName",
																	"src": "3126:4:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3158:167:5",
															"nodeType": "YulBlock",
															"src": "3158:167:5",
															"statements": [
																{
																	"nativeSrc": "3196:43:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3196:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3226:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "3226:5:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3233:4:5",
																						"nodeType": "YulLiteral",
																						"src": "3233:4:5",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3222:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "3222:3:5"
																				},
																				"nativeSrc": "3222:16:5",
																				"nodeType": "YulFunctionCall",
																				"src": "3222:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3216:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "3216:5:5"
																		},
																		"nativeSrc": "3216:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3216:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "3200:12:5",
																			"nodeType": "YulTypedName",
																			"src": "3200:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "3286:12:5",
																				"nodeType": "YulIdentifier",
																				"src": "3286:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "3304:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "3304:3:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3309:4:5",
																						"nodeType": "YulLiteral",
																						"src": "3309:4:5",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3300:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "3300:3:5"
																				},
																				"nativeSrc": "3300:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "3300:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nativeSrc": "3252:33:5",
																			"nodeType": "YulIdentifier",
																			"src": "3252:33:5"
																		},
																		"nativeSrc": "3252:63:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3252:63:5"
																	},
																	"nativeSrc": "3252:63:5",
																	"nodeType": "YulExpressionStatement",
																	"src": "3252:63:5"
																}
															]
														},
														{
															"nativeSrc": "3335:168:5",
															"nodeType": "YulBlock",
															"src": "3335:168:5",
															"statements": [
																{
																	"nativeSrc": "3374:43:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3374:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3404:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "3404:5:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3411:4:5",
																						"nodeType": "YulLiteral",
																						"src": "3411:4:5",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3400:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "3400:3:5"
																				},
																				"nativeSrc": "3400:16:5",
																				"nodeType": "YulFunctionCall",
																				"src": "3400:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3394:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "3394:5:5"
																		},
																		"nativeSrc": "3394:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3394:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "3378:12:5",
																			"nodeType": "YulTypedName",
																			"src": "3378:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "3464:12:5",
																				"nodeType": "YulIdentifier",
																				"src": "3464:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "3482:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "3482:3:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3487:4:5",
																						"nodeType": "YulLiteral",
																						"src": "3487:4:5",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3478:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "3478:3:5"
																				},
																				"nativeSrc": "3478:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "3478:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nativeSrc": "3430:33:5",
																			"nodeType": "YulIdentifier",
																			"src": "3430:33:5"
																		},
																		"nativeSrc": "3430:63:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3430:63:5"
																	},
																	"nativeSrc": "3430:63:5",
																	"nodeType": "YulExpressionStatement",
																	"src": "3430:63:5"
																}
															]
														},
														{
															"nativeSrc": "3513:161:5",
															"nodeType": "YulBlock",
															"src": "3513:161:5",
															"statements": [
																{
																	"nativeSrc": "3547:43:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3547:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3577:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "3577:5:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3584:4:5",
																						"nodeType": "YulLiteral",
																						"src": "3584:4:5",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3573:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "3573:3:5"
																				},
																				"nativeSrc": "3573:16:5",
																				"nodeType": "YulFunctionCall",
																				"src": "3573:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3567:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "3567:5:5"
																		},
																		"nativeSrc": "3567:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3567:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "3551:12:5",
																			"nodeType": "YulTypedName",
																			"src": "3551:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "3635:12:5",
																				"nodeType": "YulIdentifier",
																				"src": "3635:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "3653:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "3653:3:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3658:4:5",
																						"nodeType": "YulLiteral",
																						"src": "3658:4:5",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3649:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "3649:3:5"
																				},
																				"nativeSrc": "3649:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "3649:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint24_to_t_uint24",
																			"nativeSrc": "3603:31:5",
																			"nodeType": "YulIdentifier",
																			"src": "3603:31:5"
																		},
																		"nativeSrc": "3603:61:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3603:61:5"
																	},
																	"nativeSrc": "3603:61:5",
																	"nodeType": "YulExpressionStatement",
																	"src": "3603:61:5"
																}
															]
														},
														{
															"nativeSrc": "3684:169:5",
															"nodeType": "YulBlock",
															"src": "3684:169:5",
															"statements": [
																{
																	"nativeSrc": "3724:43:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3724:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3754:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "3754:5:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3761:4:5",
																						"nodeType": "YulLiteral",
																						"src": "3761:4:5",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3750:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "3750:3:5"
																				},
																				"nativeSrc": "3750:16:5",
																				"nodeType": "YulFunctionCall",
																				"src": "3750:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3744:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "3744:5:5"
																		},
																		"nativeSrc": "3744:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3744:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "3728:12:5",
																			"nodeType": "YulTypedName",
																			"src": "3728:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "3814:12:5",
																				"nodeType": "YulIdentifier",
																				"src": "3814:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "3832:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "3832:3:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3837:4:5",
																						"nodeType": "YulLiteral",
																						"src": "3837:4:5",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3828:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "3828:3:5"
																				},
																				"nativeSrc": "3828:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "3828:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nativeSrc": "3780:33:5",
																			"nodeType": "YulIdentifier",
																			"src": "3780:33:5"
																		},
																		"nativeSrc": "3780:63:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3780:63:5"
																	},
																	"nativeSrc": "3780:63:5",
																	"nodeType": "YulExpressionStatement",
																	"src": "3780:63:5"
																}
															]
														},
														{
															"nativeSrc": "3863:168:5",
															"nodeType": "YulBlock",
															"src": "3863:168:5",
															"statements": [
																{
																	"nativeSrc": "3902:43:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3902:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3932:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "3932:5:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3939:4:5",
																						"nodeType": "YulLiteral",
																						"src": "3939:4:5",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3928:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "3928:3:5"
																				},
																				"nativeSrc": "3928:16:5",
																				"nodeType": "YulFunctionCall",
																				"src": "3928:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3922:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "3922:5:5"
																		},
																		"nativeSrc": "3922:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3922:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "3906:12:5",
																			"nodeType": "YulTypedName",
																			"src": "3906:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "3992:12:5",
																				"nodeType": "YulIdentifier",
																				"src": "3992:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "4010:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "4010:3:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4015:4:5",
																						"nodeType": "YulLiteral",
																						"src": "4015:4:5",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4006:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "4006:3:5"
																				},
																				"nativeSrc": "4006:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4006:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "3958:33:5",
																			"nodeType": "YulIdentifier",
																			"src": "3958:33:5"
																		},
																		"nativeSrc": "3958:63:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3958:63:5"
																	},
																	"nativeSrc": "3958:63:5",
																	"nodeType": "YulExpressionStatement",
																	"src": "3958:63:5"
																}
															]
														},
														{
															"nativeSrc": "4041:176:5",
															"nodeType": "YulBlock",
															"src": "4041:176:5",
															"statements": [
																{
																	"nativeSrc": "4088:43:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4088:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4118:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "4118:5:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4125:4:5",
																						"nodeType": "YulLiteral",
																						"src": "4125:4:5",
																						"type": "",
																						"value": "0xa0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4114:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "4114:3:5"
																				},
																				"nativeSrc": "4114:16:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4114:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "4108:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "4108:5:5"
																		},
																		"nativeSrc": "4108:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4108:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "4092:12:5",
																			"nodeType": "YulTypedName",
																			"src": "4092:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "4178:12:5",
																				"nodeType": "YulIdentifier",
																				"src": "4178:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "4196:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "4196:3:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4201:4:5",
																						"nodeType": "YulLiteral",
																						"src": "4201:4:5",
																						"type": "",
																						"value": "0xa0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4192:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "4192:3:5"
																				},
																				"nativeSrc": "4192:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4192:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "4144:33:5",
																			"nodeType": "YulIdentifier",
																			"src": "4144:33:5"
																		},
																		"nativeSrc": "4144:63:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4144:63:5"
																	},
																	"nativeSrc": "4144:63:5",
																	"nodeType": "YulExpressionStatement",
																	"src": "4144:63:5"
																}
															]
														},
														{
															"nativeSrc": "4227:177:5",
															"nodeType": "YulBlock",
															"src": "4227:177:5",
															"statements": [
																{
																	"nativeSrc": "4275:43:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4275:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4305:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "4305:5:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4312:4:5",
																						"nodeType": "YulLiteral",
																						"src": "4312:4:5",
																						"type": "",
																						"value": "0xc0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4301:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "4301:3:5"
																				},
																				"nativeSrc": "4301:16:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4301:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "4295:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "4295:5:5"
																		},
																		"nativeSrc": "4295:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4295:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "4279:12:5",
																			"nodeType": "YulTypedName",
																			"src": "4279:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "4365:12:5",
																				"nodeType": "YulIdentifier",
																				"src": "4365:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "4383:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "4383:3:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4388:4:5",
																						"nodeType": "YulLiteral",
																						"src": "4388:4:5",
																						"type": "",
																						"value": "0xc0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4379:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "4379:3:5"
																				},
																				"nativeSrc": "4379:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4379:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint160_to_t_uint160",
																			"nativeSrc": "4331:33:5",
																			"nodeType": "YulIdentifier",
																			"src": "4331:33:5"
																		},
																		"nativeSrc": "4331:63:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4331:63:5"
																	},
																	"nativeSrc": "4331:63:5",
																	"nodeType": "YulExpressionStatement",
																	"src": "4331:63:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_ExactInputSingleParams_$181_memory_ptr_to_t_struct$_ExactInputSingleParams_$181_memory_ptr_fromStack",
												"nativeSrc": "2968:1443:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3099:5:5",
														"nodeType": "YulTypedName",
														"src": "3099:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3106:3:5",
														"nodeType": "YulTypedName",
														"src": "3106:3:5",
														"type": ""
													}
												],
												"src": "2968:1443:5"
											},
											{
												"body": {
													"nativeSrc": "4593:203:5",
													"nodeType": "YulBlock",
													"src": "4593:203:5",
													"statements": [
														{
															"nativeSrc": "4603:27:5",
															"nodeType": "YulAssignment",
															"src": "4603:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4615:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "4615:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4626:3:5",
																		"nodeType": "YulLiteral",
																		"src": "4626:3:5",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4611:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4611:3:5"
																},
																"nativeSrc": "4611:19:5",
																"nodeType": "YulFunctionCall",
																"src": "4611:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4603:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "4603:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4762:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "4762:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4775:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4775:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4786:1:5",
																				"nodeType": "YulLiteral",
																				"src": "4786:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4771:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4771:3:5"
																		},
																		"nativeSrc": "4771:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4771:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_ExactInputSingleParams_$181_memory_ptr_to_t_struct$_ExactInputSingleParams_$181_memory_ptr_fromStack",
																	"nativeSrc": "4640:121:5",
																	"nodeType": "YulIdentifier",
																	"src": "4640:121:5"
																},
																"nativeSrc": "4640:149:5",
																"nodeType": "YulFunctionCall",
																"src": "4640:149:5"
															},
															"nativeSrc": "4640:149:5",
															"nodeType": "YulExpressionStatement",
															"src": "4640:149:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_ExactInputSingleParams_$181_memory_ptr__to_t_struct$_ExactInputSingleParams_$181_memory_ptr__fromStack_reversed",
												"nativeSrc": "4417:379:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4565:9:5",
														"nodeType": "YulTypedName",
														"src": "4565:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4577:6:5",
														"nodeType": "YulTypedName",
														"src": "4577:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4588:4:5",
														"nodeType": "YulTypedName",
														"src": "4588:4:5",
														"type": ""
													}
												],
												"src": "4417:379:5"
											},
											{
												"body": {
													"nativeSrc": "4865:80:5",
													"nodeType": "YulBlock",
													"src": "4865:80:5",
													"statements": [
														{
															"nativeSrc": "4875:22:5",
															"nodeType": "YulAssignment",
															"src": "4875:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4890:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "4890:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4884:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "4884:5:5"
																},
																"nativeSrc": "4884:13:5",
																"nodeType": "YulFunctionCall",
																"src": "4884:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4875:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "4875:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4933:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "4933:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "4906:26:5",
																	"nodeType": "YulIdentifier",
																	"src": "4906:26:5"
																},
																"nativeSrc": "4906:33:5",
																"nodeType": "YulFunctionCall",
																"src": "4906:33:5"
															},
															"nativeSrc": "4906:33:5",
															"nodeType": "YulExpressionStatement",
															"src": "4906:33:5"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "4802:143:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4843:6:5",
														"nodeType": "YulTypedName",
														"src": "4843:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4851:3:5",
														"nodeType": "YulTypedName",
														"src": "4851:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "4859:5:5",
														"nodeType": "YulTypedName",
														"src": "4859:5:5",
														"type": ""
													}
												],
												"src": "4802:143:5"
											},
											{
												"body": {
													"nativeSrc": "5028:274:5",
													"nodeType": "YulBlock",
													"src": "5028:274:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "5074:83:5",
																"nodeType": "YulBlock",
																"src": "5074:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5076:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "5076:77:5"
																			},
																			"nativeSrc": "5076:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "5076:79:5"
																		},
																		"nativeSrc": "5076:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "5076:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5049:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "5049:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5058:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5058:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5045:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5045:3:5"
																		},
																		"nativeSrc": "5045:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5045:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5070:2:5",
																		"nodeType": "YulLiteral",
																		"src": "5070:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5041:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5041:3:5"
																},
																"nativeSrc": "5041:32:5",
																"nodeType": "YulFunctionCall",
																"src": "5041:32:5"
															},
															"nativeSrc": "5038:119:5",
															"nodeType": "YulIf",
															"src": "5038:119:5"
														},
														{
															"nativeSrc": "5167:128:5",
															"nodeType": "YulBlock",
															"src": "5167:128:5",
															"statements": [
																{
																	"nativeSrc": "5182:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5182:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5196:1:5",
																		"nodeType": "YulLiteral",
																		"src": "5196:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5186:6:5",
																			"nodeType": "YulTypedName",
																			"src": "5186:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5211:74:5",
																	"nodeType": "YulAssignment",
																	"src": "5211:74:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5257:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "5257:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5268:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "5268:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5253:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "5253:3:5"
																				},
																				"nativeSrc": "5253:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "5253:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5277:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "5277:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "5221:31:5",
																			"nodeType": "YulIdentifier",
																			"src": "5221:31:5"
																		},
																		"nativeSrc": "5221:64:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5221:64:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5211:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "5211:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "4951:351:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4998:9:5",
														"nodeType": "YulTypedName",
														"src": "4998:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5009:7:5",
														"nodeType": "YulTypedName",
														"src": "5009:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5021:6:5",
														"nodeType": "YulTypedName",
														"src": "5021:6:5",
														"type": ""
													}
												],
												"src": "4951:351:5"
											},
											{
												"body": {
													"nativeSrc": "5373:53:5",
													"nodeType": "YulBlock",
													"src": "5373:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5390:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "5390:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5413:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "5413:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "5395:17:5",
																			"nodeType": "YulIdentifier",
																			"src": "5395:17:5"
																		},
																		"nativeSrc": "5395:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5395:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5383:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5383:6:5"
																},
																"nativeSrc": "5383:37:5",
																"nodeType": "YulFunctionCall",
																"src": "5383:37:5"
															},
															"nativeSrc": "5383:37:5",
															"nodeType": "YulExpressionStatement",
															"src": "5383:37:5"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "5308:118:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5361:5:5",
														"nodeType": "YulTypedName",
														"src": "5361:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5368:3:5",
														"nodeType": "YulTypedName",
														"src": "5368:3:5",
														"type": ""
													}
												],
												"src": "5308:118:5"
											},
											{
												"body": {
													"nativeSrc": "5586:288:5",
													"nodeType": "YulBlock",
													"src": "5586:288:5",
													"statements": [
														{
															"nativeSrc": "5596:26:5",
															"nodeType": "YulAssignment",
															"src": "5596:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5608:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "5608:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5619:2:5",
																		"nodeType": "YulLiteral",
																		"src": "5619:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5604:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5604:3:5"
																},
																"nativeSrc": "5604:18:5",
																"nodeType": "YulFunctionCall",
																"src": "5604:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5596:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "5596:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5676:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "5676:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5689:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5689:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5700:1:5",
																				"nodeType": "YulLiteral",
																				"src": "5700:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5685:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5685:3:5"
																		},
																		"nativeSrc": "5685:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5685:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5632:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "5632:43:5"
																},
																"nativeSrc": "5632:71:5",
																"nodeType": "YulFunctionCall",
																"src": "5632:71:5"
															},
															"nativeSrc": "5632:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "5632:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "5757:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "5757:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5770:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5770:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5781:2:5",
																				"nodeType": "YulLiteral",
																				"src": "5781:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5766:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5766:3:5"
																		},
																		"nativeSrc": "5766:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5766:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5713:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "5713:43:5"
																},
																"nativeSrc": "5713:72:5",
																"nodeType": "YulFunctionCall",
																"src": "5713:72:5"
															},
															"nativeSrc": "5713:72:5",
															"nodeType": "YulExpressionStatement",
															"src": "5713:72:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "5839:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "5839:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5852:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5852:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5863:2:5",
																				"nodeType": "YulLiteral",
																				"src": "5863:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5848:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5848:3:5"
																		},
																		"nativeSrc": "5848:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5848:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "5795:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "5795:43:5"
																},
																"nativeSrc": "5795:72:5",
																"nodeType": "YulFunctionCall",
																"src": "5795:72:5"
															},
															"nativeSrc": "5795:72:5",
															"nodeType": "YulExpressionStatement",
															"src": "5795:72:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "5432:442:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5542:9:5",
														"nodeType": "YulTypedName",
														"src": "5542:9:5",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "5554:6:5",
														"nodeType": "YulTypedName",
														"src": "5554:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5562:6:5",
														"nodeType": "YulTypedName",
														"src": "5562:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5570:6:5",
														"nodeType": "YulTypedName",
														"src": "5570:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5581:4:5",
														"nodeType": "YulTypedName",
														"src": "5581:4:5",
														"type": ""
													}
												],
												"src": "5432:442:5"
											},
											{
												"body": {
													"nativeSrc": "5938:40:5",
													"nodeType": "YulBlock",
													"src": "5938:40:5",
													"statements": [
														{
															"nativeSrc": "5949:22:5",
															"nodeType": "YulAssignment",
															"src": "5949:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5965:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "5965:5:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "5959:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "5959:5:5"
																},
																"nativeSrc": "5959:12:5",
																"nodeType": "YulFunctionCall",
																"src": "5959:12:5"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "5949:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5949:6:5"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "5880:98:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5921:5:5",
														"nodeType": "YulTypedName",
														"src": "5921:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "5931:6:5",
														"nodeType": "YulTypedName",
														"src": "5931:6:5",
														"type": ""
													}
												],
												"src": "5880:98:5"
											},
											{
												"body": {
													"nativeSrc": "6097:34:5",
													"nodeType": "YulBlock",
													"src": "6097:34:5",
													"statements": [
														{
															"nativeSrc": "6107:18:5",
															"nodeType": "YulAssignment",
															"src": "6107:18:5",
															"value": {
																"name": "pos",
																"nativeSrc": "6122:3:5",
																"nodeType": "YulIdentifier",
																"src": "6122:3:5"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "6107:11:5",
																	"nodeType": "YulIdentifier",
																	"src": "6107:11:5"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "5984:147:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6069:3:5",
														"nodeType": "YulTypedName",
														"src": "6069:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6074:6:5",
														"nodeType": "YulTypedName",
														"src": "6074:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "6085:11:5",
														"nodeType": "YulTypedName",
														"src": "6085:11:5",
														"type": ""
													}
												],
												"src": "5984:147:5"
											},
											{
												"body": {
													"nativeSrc": "6199:77:5",
													"nodeType": "YulBlock",
													"src": "6199:77:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "6216:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "6216:3:5"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "6221:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "6221:3:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6226:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "6226:6:5"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "6210:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "6210:5:5"
																},
																"nativeSrc": "6210:23:5",
																"nodeType": "YulFunctionCall",
																"src": "6210:23:5"
															},
															"nativeSrc": "6210:23:5",
															"nodeType": "YulExpressionStatement",
															"src": "6210:23:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "6253:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "6253:3:5"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "6258:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "6258:6:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6249:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "6249:3:5"
																		},
																		"nativeSrc": "6249:16:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6249:16:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6267:1:5",
																		"nodeType": "YulLiteral",
																		"src": "6267:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6242:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "6242:6:5"
																},
																"nativeSrc": "6242:27:5",
																"nodeType": "YulFunctionCall",
																"src": "6242:27:5"
															},
															"nativeSrc": "6242:27:5",
															"nodeType": "YulExpressionStatement",
															"src": "6242:27:5"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "6137:139:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "6181:3:5",
														"nodeType": "YulTypedName",
														"src": "6181:3:5",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "6186:3:5",
														"nodeType": "YulTypedName",
														"src": "6186:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6191:6:5",
														"nodeType": "YulTypedName",
														"src": "6191:6:5",
														"type": ""
													}
												],
												"src": "6137:139:5"
											},
											{
												"body": {
													"nativeSrc": "6390:278:5",
													"nodeType": "YulBlock",
													"src": "6390:278:5",
													"statements": [
														{
															"nativeSrc": "6400:52:5",
															"nodeType": "YulVariableDeclaration",
															"src": "6400:52:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6446:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "6446:5:5"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "6414:31:5",
																	"nodeType": "YulIdentifier",
																	"src": "6414:31:5"
																},
																"nativeSrc": "6414:38:5",
																"nodeType": "YulFunctionCall",
																"src": "6414:38:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "6404:6:5",
																	"nodeType": "YulTypedName",
																	"src": "6404:6:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6461:95:5",
															"nodeType": "YulAssignment",
															"src": "6461:95:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6544:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "6544:3:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6549:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "6549:6:5"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "6468:75:5",
																	"nodeType": "YulIdentifier",
																	"src": "6468:75:5"
																},
																"nativeSrc": "6468:88:5",
																"nodeType": "YulFunctionCall",
																"src": "6468:88:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6461:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "6461:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6604:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "6604:5:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6611:4:5",
																				"nodeType": "YulLiteral",
																				"src": "6611:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6600:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "6600:3:5"
																		},
																		"nativeSrc": "6600:16:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6600:16:5"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "6618:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "6618:3:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6623:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "6623:6:5"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "6565:34:5",
																	"nodeType": "YulIdentifier",
																	"src": "6565:34:5"
																},
																"nativeSrc": "6565:65:5",
																"nodeType": "YulFunctionCall",
																"src": "6565:65:5"
															},
															"nativeSrc": "6565:65:5",
															"nodeType": "YulExpressionStatement",
															"src": "6565:65:5"
														},
														{
															"nativeSrc": "6639:23:5",
															"nodeType": "YulAssignment",
															"src": "6639:23:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6650:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "6650:3:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6655:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "6655:6:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6646:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "6646:3:5"
																},
																"nativeSrc": "6646:16:5",
																"nodeType": "YulFunctionCall",
																"src": "6646:16:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6639:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "6639:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "6282:386:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6371:5:5",
														"nodeType": "YulTypedName",
														"src": "6371:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6378:3:5",
														"nodeType": "YulTypedName",
														"src": "6378:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6386:3:5",
														"nodeType": "YulTypedName",
														"src": "6386:3:5",
														"type": ""
													}
												],
												"src": "6282:386:5"
											},
											{
												"body": {
													"nativeSrc": "6808:137:5",
													"nodeType": "YulBlock",
													"src": "6808:137:5",
													"statements": [
														{
															"nativeSrc": "6819:100:5",
															"nodeType": "YulAssignment",
															"src": "6819:100:5",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6906:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "6906:6:5"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "6915:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "6915:3:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "6826:79:5",
																	"nodeType": "YulIdentifier",
																	"src": "6826:79:5"
																},
																"nativeSrc": "6826:93:5",
																"nodeType": "YulFunctionCall",
																"src": "6826:93:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6819:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "6819:3:5"
																}
															]
														},
														{
															"nativeSrc": "6929:10:5",
															"nodeType": "YulAssignment",
															"src": "6929:10:5",
															"value": {
																"name": "pos",
																"nativeSrc": "6936:3:5",
																"nodeType": "YulIdentifier",
																"src": "6936:3:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6929:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "6929:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "6674:271:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6787:3:5",
														"nodeType": "YulTypedName",
														"src": "6787:3:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6793:6:5",
														"nodeType": "YulTypedName",
														"src": "6793:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6804:3:5",
														"nodeType": "YulTypedName",
														"src": "6804:3:5",
														"type": ""
													}
												],
												"src": "6674:271:5"
											},
											{
												"body": {
													"nativeSrc": "6993:48:5",
													"nodeType": "YulBlock",
													"src": "6993:48:5",
													"statements": [
														{
															"nativeSrc": "7003:32:5",
															"nodeType": "YulAssignment",
															"src": "7003:32:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7028:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "7028:5:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "7021:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "7021:6:5"
																		},
																		"nativeSrc": "7021:13:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7021:13:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7014:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "7014:6:5"
																},
																"nativeSrc": "7014:21:5",
																"nodeType": "YulFunctionCall",
																"src": "7014:21:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "7003:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "7003:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "6951:90:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6975:5:5",
														"nodeType": "YulTypedName",
														"src": "6975:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "6985:7:5",
														"nodeType": "YulTypedName",
														"src": "6985:7:5",
														"type": ""
													}
												],
												"src": "6951:90:5"
											},
											{
												"body": {
													"nativeSrc": "7087:76:5",
													"nodeType": "YulBlock",
													"src": "7087:76:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "7141:16:5",
																"nodeType": "YulBlock",
																"src": "7141:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7150:1:5",
																					"nodeType": "YulLiteral",
																					"src": "7150:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7153:1:5",
																					"nodeType": "YulLiteral",
																					"src": "7153:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7143:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "7143:6:5"
																			},
																			"nativeSrc": "7143:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "7143:12:5"
																		},
																		"nativeSrc": "7143:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "7143:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7110:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "7110:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "7132:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "7132:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "7117:14:5",
																					"nodeType": "YulIdentifier",
																					"src": "7117:14:5"
																				},
																				"nativeSrc": "7117:21:5",
																				"nodeType": "YulFunctionCall",
																				"src": "7117:21:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "7107:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "7107:2:5"
																		},
																		"nativeSrc": "7107:32:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7107:32:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7100:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "7100:6:5"
																},
																"nativeSrc": "7100:40:5",
																"nodeType": "YulFunctionCall",
																"src": "7100:40:5"
															},
															"nativeSrc": "7097:60:5",
															"nodeType": "YulIf",
															"src": "7097:60:5"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "7047:116:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7080:5:5",
														"nodeType": "YulTypedName",
														"src": "7080:5:5",
														"type": ""
													}
												],
												"src": "7047:116:5"
											},
											{
												"body": {
													"nativeSrc": "7229:77:5",
													"nodeType": "YulBlock",
													"src": "7229:77:5",
													"statements": [
														{
															"nativeSrc": "7239:22:5",
															"nodeType": "YulAssignment",
															"src": "7239:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "7254:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "7254:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "7248:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "7248:5:5"
																},
																"nativeSrc": "7248:13:5",
																"nodeType": "YulFunctionCall",
																"src": "7248:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "7239:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "7239:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7294:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "7294:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "7270:23:5",
																	"nodeType": "YulIdentifier",
																	"src": "7270:23:5"
																},
																"nativeSrc": "7270:30:5",
																"nodeType": "YulFunctionCall",
																"src": "7270:30:5"
															},
															"nativeSrc": "7270:30:5",
															"nodeType": "YulExpressionStatement",
															"src": "7270:30:5"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "7169:137:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "7207:6:5",
														"nodeType": "YulTypedName",
														"src": "7207:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7215:3:5",
														"nodeType": "YulTypedName",
														"src": "7215:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "7223:5:5",
														"nodeType": "YulTypedName",
														"src": "7223:5:5",
														"type": ""
													}
												],
												"src": "7169:137:5"
											},
											{
												"body": {
													"nativeSrc": "7386:271:5",
													"nodeType": "YulBlock",
													"src": "7386:271:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "7432:83:5",
																"nodeType": "YulBlock",
																"src": "7432:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7434:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "7434:77:5"
																			},
																			"nativeSrc": "7434:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "7434:79:5"
																		},
																		"nativeSrc": "7434:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "7434:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7407:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "7407:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7416:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "7416:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7403:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "7403:3:5"
																		},
																		"nativeSrc": "7403:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7403:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7428:2:5",
																		"nodeType": "YulLiteral",
																		"src": "7428:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7399:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "7399:3:5"
																},
																"nativeSrc": "7399:32:5",
																"nodeType": "YulFunctionCall",
																"src": "7399:32:5"
															},
															"nativeSrc": "7396:119:5",
															"nodeType": "YulIf",
															"src": "7396:119:5"
														},
														{
															"nativeSrc": "7525:125:5",
															"nodeType": "YulBlock",
															"src": "7525:125:5",
															"statements": [
																{
																	"nativeSrc": "7540:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7540:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7554:1:5",
																		"nodeType": "YulLiteral",
																		"src": "7554:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7544:6:5",
																			"nodeType": "YulTypedName",
																			"src": "7544:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7569:71:5",
																	"nodeType": "YulAssignment",
																	"src": "7569:71:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7612:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "7612:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7623:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "7623:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7608:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "7608:3:5"
																				},
																				"nativeSrc": "7608:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "7608:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7632:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "7632:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "7579:28:5",
																			"nodeType": "YulIdentifier",
																			"src": "7579:28:5"
																		},
																		"nativeSrc": "7579:61:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7579:61:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7569:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "7569:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "7312:345:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7356:9:5",
														"nodeType": "YulTypedName",
														"src": "7356:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7367:7:5",
														"nodeType": "YulTypedName",
														"src": "7367:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7379:6:5",
														"nodeType": "YulTypedName",
														"src": "7379:6:5",
														"type": ""
													}
												],
												"src": "7312:345:5"
											},
											{
												"body": {
													"nativeSrc": "7759:73:5",
													"nodeType": "YulBlock",
													"src": "7759:73:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7776:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "7776:3:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7781:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "7781:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7769:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "7769:6:5"
																},
																"nativeSrc": "7769:19:5",
																"nodeType": "YulFunctionCall",
																"src": "7769:19:5"
															},
															"nativeSrc": "7769:19:5",
															"nodeType": "YulExpressionStatement",
															"src": "7769:19:5"
														},
														{
															"nativeSrc": "7797:29:5",
															"nodeType": "YulAssignment",
															"src": "7797:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7816:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "7816:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7821:4:5",
																		"nodeType": "YulLiteral",
																		"src": "7821:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7812:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "7812:3:5"
																},
																"nativeSrc": "7812:14:5",
																"nodeType": "YulFunctionCall",
																"src": "7812:14:5"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "7797:11:5",
																	"nodeType": "YulIdentifier",
																	"src": "7797:11:5"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "7663:169:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7731:3:5",
														"nodeType": "YulTypedName",
														"src": "7731:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "7736:6:5",
														"nodeType": "YulTypedName",
														"src": "7736:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "7747:11:5",
														"nodeType": "YulTypedName",
														"src": "7747:11:5",
														"type": ""
													}
												],
												"src": "7663:169:5"
											},
											{
												"body": {
													"nativeSrc": "7944:130:5",
													"nodeType": "YulBlock",
													"src": "7944:130:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7966:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "7966:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7974:1:5",
																				"nodeType": "YulLiteral",
																				"src": "7974:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7962:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "7962:3:5"
																		},
																		"nativeSrc": "7962:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7962:14:5"
																	},
																	{
																		"hexValue": "5472616e7366657248656c7065723a3a7472616e7366657246726f6d3a207472",
																		"kind": "string",
																		"nativeSrc": "7978:34:5",
																		"nodeType": "YulLiteral",
																		"src": "7978:34:5",
																		"type": "",
																		"value": "TransferHelper::transferFrom: tr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7955:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "7955:6:5"
																},
																"nativeSrc": "7955:58:5",
																"nodeType": "YulFunctionCall",
																"src": "7955:58:5"
															},
															"nativeSrc": "7955:58:5",
															"nodeType": "YulExpressionStatement",
															"src": "7955:58:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8034:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "8034:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8042:2:5",
																				"nodeType": "YulLiteral",
																				"src": "8042:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8030:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "8030:3:5"
																		},
																		"nativeSrc": "8030:15:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8030:15:5"
																	},
																	{
																		"hexValue": "616e7366657246726f6d206661696c6564",
																		"kind": "string",
																		"nativeSrc": "8047:19:5",
																		"nodeType": "YulLiteral",
																		"src": "8047:19:5",
																		"type": "",
																		"value": "ansferFrom failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8023:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "8023:6:5"
																},
																"nativeSrc": "8023:44:5",
																"nodeType": "YulFunctionCall",
																"src": "8023:44:5"
															},
															"nativeSrc": "8023:44:5",
															"nodeType": "YulExpressionStatement",
															"src": "8023:44:5"
														}
													]
												},
												"name": "store_literal_in_memory_3f8faf98afe9344b6d4b0e75b0101259bf282914b3b5a9320c6918b6e27ede1c",
												"nativeSrc": "7838:236:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7936:6:5",
														"nodeType": "YulTypedName",
														"src": "7936:6:5",
														"type": ""
													}
												],
												"src": "7838:236:5"
											},
											{
												"body": {
													"nativeSrc": "8226:220:5",
													"nodeType": "YulBlock",
													"src": "8226:220:5",
													"statements": [
														{
															"nativeSrc": "8236:74:5",
															"nodeType": "YulAssignment",
															"src": "8236:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8302:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "8302:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8307:2:5",
																		"nodeType": "YulLiteral",
																		"src": "8307:2:5",
																		"type": "",
																		"value": "49"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8243:58:5",
																	"nodeType": "YulIdentifier",
																	"src": "8243:58:5"
																},
																"nativeSrc": "8243:67:5",
																"nodeType": "YulFunctionCall",
																"src": "8243:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8236:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "8236:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8408:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "8408:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_3f8faf98afe9344b6d4b0e75b0101259bf282914b3b5a9320c6918b6e27ede1c",
																	"nativeSrc": "8319:88:5",
																	"nodeType": "YulIdentifier",
																	"src": "8319:88:5"
																},
																"nativeSrc": "8319:93:5",
																"nodeType": "YulFunctionCall",
																"src": "8319:93:5"
															},
															"nativeSrc": "8319:93:5",
															"nodeType": "YulExpressionStatement",
															"src": "8319:93:5"
														},
														{
															"nativeSrc": "8421:19:5",
															"nodeType": "YulAssignment",
															"src": "8421:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8432:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "8432:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8437:2:5",
																		"nodeType": "YulLiteral",
																		"src": "8437:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8428:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "8428:3:5"
																},
																"nativeSrc": "8428:12:5",
																"nodeType": "YulFunctionCall",
																"src": "8428:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8421:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "8421:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_3f8faf98afe9344b6d4b0e75b0101259bf282914b3b5a9320c6918b6e27ede1c_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "8080:366:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8214:3:5",
														"nodeType": "YulTypedName",
														"src": "8214:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8222:3:5",
														"nodeType": "YulTypedName",
														"src": "8222:3:5",
														"type": ""
													}
												],
												"src": "8080:366:5"
											},
											{
												"body": {
													"nativeSrc": "8623:248:5",
													"nodeType": "YulBlock",
													"src": "8623:248:5",
													"statements": [
														{
															"nativeSrc": "8633:26:5",
															"nodeType": "YulAssignment",
															"src": "8633:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8645:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "8645:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8656:2:5",
																		"nodeType": "YulLiteral",
																		"src": "8656:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8641:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "8641:3:5"
																},
																"nativeSrc": "8641:18:5",
																"nodeType": "YulFunctionCall",
																"src": "8641:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8633:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "8633:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8680:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "8680:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8691:1:5",
																				"nodeType": "YulLiteral",
																				"src": "8691:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8676:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "8676:3:5"
																		},
																		"nativeSrc": "8676:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8676:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8699:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "8699:4:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8705:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "8705:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8695:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "8695:3:5"
																		},
																		"nativeSrc": "8695:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8695:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8669:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "8669:6:5"
																},
																"nativeSrc": "8669:47:5",
																"nodeType": "YulFunctionCall",
																"src": "8669:47:5"
															},
															"nativeSrc": "8669:47:5",
															"nodeType": "YulExpressionStatement",
															"src": "8669:47:5"
														},
														{
															"nativeSrc": "8725:139:5",
															"nodeType": "YulAssignment",
															"src": "8725:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "8859:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "8859:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_3f8faf98afe9344b6d4b0e75b0101259bf282914b3b5a9320c6918b6e27ede1c_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8733:124:5",
																	"nodeType": "YulIdentifier",
																	"src": "8733:124:5"
																},
																"nativeSrc": "8733:131:5",
																"nodeType": "YulFunctionCall",
																"src": "8733:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8725:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "8725:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3f8faf98afe9344b6d4b0e75b0101259bf282914b3b5a9320c6918b6e27ede1c__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8452:419:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8603:9:5",
														"nodeType": "YulTypedName",
														"src": "8603:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8618:4:5",
														"nodeType": "YulTypedName",
														"src": "8618:4:5",
														"type": ""
													}
												],
												"src": "8452:419:5"
											},
											{
												"body": {
													"nativeSrc": "9003:206:5",
													"nodeType": "YulBlock",
													"src": "9003:206:5",
													"statements": [
														{
															"nativeSrc": "9013:26:5",
															"nodeType": "YulAssignment",
															"src": "9013:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9025:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "9025:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9036:2:5",
																		"nodeType": "YulLiteral",
																		"src": "9036:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9021:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "9021:3:5"
																},
																"nativeSrc": "9021:18:5",
																"nodeType": "YulFunctionCall",
																"src": "9021:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9013:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "9013:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9093:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "9093:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9106:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "9106:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9117:1:5",
																				"nodeType": "YulLiteral",
																				"src": "9117:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9102:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9102:3:5"
																		},
																		"nativeSrc": "9102:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9102:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9049:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "9049:43:5"
																},
																"nativeSrc": "9049:71:5",
																"nodeType": "YulFunctionCall",
																"src": "9049:71:5"
															},
															"nativeSrc": "9049:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "9049:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "9174:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "9174:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9187:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "9187:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9198:2:5",
																				"nodeType": "YulLiteral",
																				"src": "9198:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9183:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9183:3:5"
																		},
																		"nativeSrc": "9183:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9183:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9130:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "9130:43:5"
																},
																"nativeSrc": "9130:72:5",
																"nodeType": "YulFunctionCall",
																"src": "9130:72:5"
															},
															"nativeSrc": "9130:72:5",
															"nodeType": "YulExpressionStatement",
															"src": "9130:72:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "8877:332:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8967:9:5",
														"nodeType": "YulTypedName",
														"src": "8967:9:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8979:6:5",
														"nodeType": "YulTypedName",
														"src": "8979:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8987:6:5",
														"nodeType": "YulTypedName",
														"src": "8987:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8998:4:5",
														"nodeType": "YulTypedName",
														"src": "8998:4:5",
														"type": ""
													}
												],
												"src": "8877:332:5"
											},
											{
												"body": {
													"nativeSrc": "9321:124:5",
													"nodeType": "YulBlock",
													"src": "9321:124:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9343:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "9343:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9351:1:5",
																				"nodeType": "YulLiteral",
																				"src": "9351:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9339:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9339:3:5"
																		},
																		"nativeSrc": "9339:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9339:14:5"
																	},
																	{
																		"hexValue": "5472616e7366657248656c7065723a3a73616665417070726f76653a20617070",
																		"kind": "string",
																		"nativeSrc": "9355:34:5",
																		"nodeType": "YulLiteral",
																		"src": "9355:34:5",
																		"type": "",
																		"value": "TransferHelper::safeApprove: app"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9332:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "9332:6:5"
																},
																"nativeSrc": "9332:58:5",
																"nodeType": "YulFunctionCall",
																"src": "9332:58:5"
															},
															"nativeSrc": "9332:58:5",
															"nodeType": "YulExpressionStatement",
															"src": "9332:58:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9411:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "9411:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9419:2:5",
																				"nodeType": "YulLiteral",
																				"src": "9419:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9407:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9407:3:5"
																		},
																		"nativeSrc": "9407:15:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9407:15:5"
																	},
																	{
																		"hexValue": "726f7665206661696c6564",
																		"kind": "string",
																		"nativeSrc": "9424:13:5",
																		"nodeType": "YulLiteral",
																		"src": "9424:13:5",
																		"type": "",
																		"value": "rove failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9400:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "9400:6:5"
																},
																"nativeSrc": "9400:38:5",
																"nodeType": "YulFunctionCall",
																"src": "9400:38:5"
															},
															"nativeSrc": "9400:38:5",
															"nodeType": "YulExpressionStatement",
															"src": "9400:38:5"
														}
													]
												},
												"name": "store_literal_in_memory_b4dd1eb4be82119fd3a99acfb5dd4c57591eb0ea309359b1af3d65a4460c7123",
												"nativeSrc": "9215:230:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9313:6:5",
														"nodeType": "YulTypedName",
														"src": "9313:6:5",
														"type": ""
													}
												],
												"src": "9215:230:5"
											},
											{
												"body": {
													"nativeSrc": "9597:220:5",
													"nodeType": "YulBlock",
													"src": "9597:220:5",
													"statements": [
														{
															"nativeSrc": "9607:74:5",
															"nodeType": "YulAssignment",
															"src": "9607:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9673:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "9673:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9678:2:5",
																		"nodeType": "YulLiteral",
																		"src": "9678:2:5",
																		"type": "",
																		"value": "43"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9614:58:5",
																	"nodeType": "YulIdentifier",
																	"src": "9614:58:5"
																},
																"nativeSrc": "9614:67:5",
																"nodeType": "YulFunctionCall",
																"src": "9614:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9607:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "9607:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9779:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "9779:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b4dd1eb4be82119fd3a99acfb5dd4c57591eb0ea309359b1af3d65a4460c7123",
																	"nativeSrc": "9690:88:5",
																	"nodeType": "YulIdentifier",
																	"src": "9690:88:5"
																},
																"nativeSrc": "9690:93:5",
																"nodeType": "YulFunctionCall",
																"src": "9690:93:5"
															},
															"nativeSrc": "9690:93:5",
															"nodeType": "YulExpressionStatement",
															"src": "9690:93:5"
														},
														{
															"nativeSrc": "9792:19:5",
															"nodeType": "YulAssignment",
															"src": "9792:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9803:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "9803:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9808:2:5",
																		"nodeType": "YulLiteral",
																		"src": "9808:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9799:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "9799:3:5"
																},
																"nativeSrc": "9799:12:5",
																"nodeType": "YulFunctionCall",
																"src": "9799:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9792:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "9792:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b4dd1eb4be82119fd3a99acfb5dd4c57591eb0ea309359b1af3d65a4460c7123_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9451:366:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9585:3:5",
														"nodeType": "YulTypedName",
														"src": "9585:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9593:3:5",
														"nodeType": "YulTypedName",
														"src": "9593:3:5",
														"type": ""
													}
												],
												"src": "9451:366:5"
											},
											{
												"body": {
													"nativeSrc": "9994:248:5",
													"nodeType": "YulBlock",
													"src": "9994:248:5",
													"statements": [
														{
															"nativeSrc": "10004:26:5",
															"nodeType": "YulAssignment",
															"src": "10004:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10016:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "10016:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10027:2:5",
																		"nodeType": "YulLiteral",
																		"src": "10027:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10012:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "10012:3:5"
																},
																"nativeSrc": "10012:18:5",
																"nodeType": "YulFunctionCall",
																"src": "10012:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10004:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "10004:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10051:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "10051:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10062:1:5",
																				"nodeType": "YulLiteral",
																				"src": "10062:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10047:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "10047:3:5"
																		},
																		"nativeSrc": "10047:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "10047:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10070:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "10070:4:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10076:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "10076:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10066:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "10066:3:5"
																		},
																		"nativeSrc": "10066:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "10066:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10040:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "10040:6:5"
																},
																"nativeSrc": "10040:47:5",
																"nodeType": "YulFunctionCall",
																"src": "10040:47:5"
															},
															"nativeSrc": "10040:47:5",
															"nodeType": "YulExpressionStatement",
															"src": "10040:47:5"
														},
														{
															"nativeSrc": "10096:139:5",
															"nodeType": "YulAssignment",
															"src": "10096:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10230:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "10230:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b4dd1eb4be82119fd3a99acfb5dd4c57591eb0ea309359b1af3d65a4460c7123_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10104:124:5",
																	"nodeType": "YulIdentifier",
																	"src": "10104:124:5"
																},
																"nativeSrc": "10104:131:5",
																"nodeType": "YulFunctionCall",
																"src": "10104:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10096:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "10096:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b4dd1eb4be82119fd3a99acfb5dd4c57591eb0ea309359b1af3d65a4460c7123__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9823:419:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9974:9:5",
														"nodeType": "YulTypedName",
														"src": "9974:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9989:4:5",
														"nodeType": "YulTypedName",
														"src": "9989:4:5",
														"type": ""
													}
												],
												"src": "9823:419:5"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_addresst_addresst_address(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function cleanup_t_uint24(value) -> cleaned {\n        cleaned := and(value, 0xffffff)\n    }\n\n    function abi_encode_t_uint24_to_t_uint24(value, pos) {\n        mstore(pos, cleanup_t_uint24(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint160_to_t_uint160(value, pos) {\n        mstore(pos, cleanup_t_uint160(value))\n    }\n\n    // struct IV3SwapRouter.ExactInputSingleParams -> struct IV3SwapRouter.ExactInputSingleParams\n    function abi_encode_t_struct$_ExactInputSingleParams_$181_memory_ptr_to_t_struct$_ExactInputSingleParams_$181_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0xe0)\n\n        {\n            // tokenIn\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // tokenOut\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // fee\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint24_to_t_uint24(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // recipient\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // amountIn\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x80))\n        }\n\n        {\n            // amountOutMinimum\n\n            let memberValue0 := mload(add(value, 0xa0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xa0))\n        }\n\n        {\n            // sqrtPriceLimitX96\n\n            let memberValue0 := mload(add(value, 0xc0))\n            abi_encode_t_uint160_to_t_uint160(memberValue0, add(pos, 0xc0))\n        }\n\n    }\n\n    function abi_encode_tuple_t_struct$_ExactInputSingleParams_$181_memory_ptr__to_t_struct$_ExactInputSingleParams_$181_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 224)\n\n        abi_encode_t_struct$_ExactInputSingleParams_$181_memory_ptr_to_t_struct$_ExactInputSingleParams_$181_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_3f8faf98afe9344b6d4b0e75b0101259bf282914b3b5a9320c6918b6e27ede1c(memPtr) {\n\n        mstore(add(memPtr, 0), \"TransferHelper::transferFrom: tr\")\n\n        mstore(add(memPtr, 32), \"ansferFrom failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_3f8faf98afe9344b6d4b0e75b0101259bf282914b3b5a9320c6918b6e27ede1c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 49)\n        store_literal_in_memory_3f8faf98afe9344b6d4b0e75b0101259bf282914b3b5a9320c6918b6e27ede1c(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3f8faf98afe9344b6d4b0e75b0101259bf282914b3b5a9320c6918b6e27ede1c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3f8faf98afe9344b6d4b0e75b0101259bf282914b3b5a9320c6918b6e27ede1c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_b4dd1eb4be82119fd3a99acfb5dd4c57591eb0ea309359b1af3d65a4460c7123(memPtr) {\n\n        mstore(add(memPtr, 0), \"TransferHelper::safeApprove: app\")\n\n        mstore(add(memPtr, 32), \"rove failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_b4dd1eb4be82119fd3a99acfb5dd4c57591eb0ea309359b1af3d65a4460c7123_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 43)\n        store_literal_in_memory_b4dd1eb4be82119fd3a99acfb5dd4c57591eb0ea309359b1af3d65a4460c7123(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b4dd1eb4be82119fd3a99acfb5dd4c57591eb0ea309359b1af3d65a4460c7123__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b4dd1eb4be82119fd3a99acfb5dd4c57591eb0ea309359b1af3d65a4460c7123_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610029575f3560e01c8063212eaf841461002d575b5f80fd5b61004760048036038101906100429190610489565b61005d565b60405161005491906104fc565b60405180910390f35b5f8084905061006e84333089610195565b6100798482886102c8565b5f6040518060e001604052808673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff168152602001610bb862ffffff1681526020013073ffffffffffffffffffffffffffffffffffffffff1681526020018881526020015f81526020015f73ffffffffffffffffffffffffffffffffffffffff1681525090505f8273ffffffffffffffffffffffffffffffffffffffff166304e45aaf836040518263ffffffff1660e01b815260040161014891906105eb565b6020604051808303815f875af1158015610164573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906101889190610618565b9050505050949350505050565b5f808573ffffffffffffffffffffffffffffffffffffffff166323b872dd8686866040516024016101c893929190610652565b6040516020818303038152906040529060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505060405161021691906106d9565b5f604051808303815f865af19150503d805f811461024f576040519150601f19603f3d011682016040523d82523d5f602084013e610254565b606091505b509150915081801561028157505f8151148061028057508080602001905181019061027f9190610724565b5b5b6102c0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102b7906107cf565b60405180910390fd5b505050505050565b5f808473ffffffffffffffffffffffffffffffffffffffff1663095ea7b385856040516024016102f99291906107ed565b6040516020818303038152906040529060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505060405161034791906106d9565b5f604051808303815f865af19150503d805f8114610380576040519150601f19603f3d011682016040523d82523d5f602084013e610385565b606091505b50915091508180156103b257505f815114806103b15750808060200190518101906103b09190610724565b5b5b6103f1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103e890610884565b60405180910390fd5b5050505050565b5f80fd5b5f819050919050565b61040e816103fc565b8114610418575f80fd5b50565b5f8135905061042981610405565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6104588261042f565b9050919050565b6104688161044e565b8114610472575f80fd5b50565b5f813590506104838161045f565b92915050565b5f805f80608085870312156104a1576104a06103f8565b5b5f6104ae8782880161041b565b94505060206104bf87828801610475565b93505060406104d087828801610475565b92505060606104e187828801610475565b91505092959194509250565b6104f6816103fc565b82525050565b5f60208201905061050f5f8301846104ed565b92915050565b61051e8161044e565b82525050565b5f62ffffff82169050919050565b61053b81610524565b82525050565b61054a816103fc565b82525050565b6105598161042f565b82525050565b60e082015f8201516105735f850182610515565b5060208201516105866020850182610515565b5060408201516105996040850182610532565b5060608201516105ac6060850182610515565b5060808201516105bf6080850182610541565b5060a08201516105d260a0850182610541565b5060c08201516105e560c0850182610550565b50505050565b5f60e0820190506105fe5f83018461055f565b92915050565b5f8151905061061281610405565b92915050565b5f6020828403121561062d5761062c6103f8565b5b5f61063a84828501610604565b91505092915050565b61064c8161044e565b82525050565b5f6060820190506106655f830186610643565b6106726020830185610643565b61067f60408301846104ed565b949350505050565b5f81519050919050565b5f81905092915050565b8281835e5f83830152505050565b5f6106b382610687565b6106bd8185610691565b93506106cd81856020860161069b565b80840191505092915050565b5f6106e482846106a9565b915081905092915050565b5f8115159050919050565b610703816106ef565b811461070d575f80fd5b50565b5f8151905061071e816106fa565b92915050565b5f60208284031215610739576107386103f8565b5b5f61074684828501610710565b91505092915050565b5f82825260208201905092915050565b7f5472616e7366657248656c7065723a3a7472616e7366657246726f6d3a2074725f8201527f616e7366657246726f6d206661696c6564000000000000000000000000000000602082015250565b5f6107b960318361074f565b91506107c48261075f565b604082019050919050565b5f6020820190508181035f8301526107e6816107ad565b9050919050565b5f6040820190506108005f830185610643565b61080d60208301846104ed565b9392505050565b7f5472616e7366657248656c7065723a3a73616665417070726f76653a206170705f8201527f726f7665206661696c6564000000000000000000000000000000000000000000602082015250565b5f61086e602b8361074f565b915061087982610814565b604082019050919050565b5f6020820190508181035f83015261089b81610862565b905091905056fea264697066735822122078bc2d7b8af84d7adff942df37fea2b8d019088f10ecceb8541738b694098df564736f6c63430008190033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x29 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x212EAF84 EQ PUSH2 0x2D JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x47 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x42 SWAP2 SWAP1 PUSH2 0x489 JUMP JUMPDEST PUSH2 0x5D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x54 SWAP2 SWAP1 PUSH2 0x4FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP1 DUP5 SWAP1 POP PUSH2 0x6E DUP5 CALLER ADDRESS DUP10 PUSH2 0x195 JUMP JUMPDEST PUSH2 0x79 DUP5 DUP3 DUP9 PUSH2 0x2C8 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBB8 PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP9 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 POP PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x4E45AAF DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x148 SWAP2 SWAP1 PUSH2 0x5EB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x164 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x188 SWAP2 SWAP1 PUSH2 0x618 JUMP JUMPDEST SWAP1 POP POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1C8 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x652 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0x216 SWAP2 SWAP1 PUSH2 0x6D9 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x24F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x254 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x281 JUMPI POP PUSH0 DUP2 MLOAD EQ DUP1 PUSH2 0x280 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x27F SWAP2 SWAP1 PUSH2 0x724 JUMP JUMPDEST JUMPDEST JUMPDEST PUSH2 0x2C0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B7 SWAP1 PUSH2 0x7CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x2F9 SWAP3 SWAP2 SWAP1 PUSH2 0x7ED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0x347 SWAP2 SWAP1 PUSH2 0x6D9 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x380 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x385 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x3B2 JUMPI POP PUSH0 DUP2 MLOAD EQ DUP1 PUSH2 0x3B1 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x3B0 SWAP2 SWAP1 PUSH2 0x724 JUMP JUMPDEST JUMPDEST JUMPDEST PUSH2 0x3F1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3E8 SWAP1 PUSH2 0x884 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x40E DUP2 PUSH2 0x3FC JUMP JUMPDEST DUP2 EQ PUSH2 0x418 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x429 DUP2 PUSH2 0x405 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x458 DUP3 PUSH2 0x42F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x468 DUP2 PUSH2 0x44E JUMP JUMPDEST DUP2 EQ PUSH2 0x472 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x483 DUP2 PUSH2 0x45F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x4A1 JUMPI PUSH2 0x4A0 PUSH2 0x3F8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x4AE DUP8 DUP3 DUP9 ADD PUSH2 0x41B JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x4BF DUP8 DUP3 DUP9 ADD PUSH2 0x475 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x4D0 DUP8 DUP3 DUP9 ADD PUSH2 0x475 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x4E1 DUP8 DUP3 DUP9 ADD PUSH2 0x475 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH2 0x4F6 DUP2 PUSH2 0x3FC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x50F PUSH0 DUP4 ADD DUP5 PUSH2 0x4ED JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x51E DUP2 PUSH2 0x44E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH3 0xFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x53B DUP2 PUSH2 0x524 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x54A DUP2 PUSH2 0x3FC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x559 DUP2 PUSH2 0x42F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0xE0 DUP3 ADD PUSH0 DUP3 ADD MLOAD PUSH2 0x573 PUSH0 DUP6 ADD DUP3 PUSH2 0x515 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x586 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x515 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x599 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x532 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x5AC PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x515 JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x5BF PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x541 JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0x5D2 PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0x541 JUMP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MLOAD PUSH2 0x5E5 PUSH1 0xC0 DUP6 ADD DUP3 PUSH2 0x550 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x5FE PUSH0 DUP4 ADD DUP5 PUSH2 0x55F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x612 DUP2 PUSH2 0x405 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x62D JUMPI PUSH2 0x62C PUSH2 0x3F8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x63A DUP5 DUP3 DUP6 ADD PUSH2 0x604 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x64C DUP2 PUSH2 0x44E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x665 PUSH0 DUP4 ADD DUP7 PUSH2 0x643 JUMP JUMPDEST PUSH2 0x672 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x643 JUMP JUMPDEST PUSH2 0x67F PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x4ED JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x6B3 DUP3 PUSH2 0x687 JUMP JUMPDEST PUSH2 0x6BD DUP2 DUP6 PUSH2 0x691 JUMP JUMPDEST SWAP4 POP PUSH2 0x6CD DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x69B JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x6E4 DUP3 DUP5 PUSH2 0x6A9 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x703 DUP2 PUSH2 0x6EF JUMP JUMPDEST DUP2 EQ PUSH2 0x70D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x71E DUP2 PUSH2 0x6FA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x739 JUMPI PUSH2 0x738 PUSH2 0x3F8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x746 DUP5 DUP3 DUP6 ADD PUSH2 0x710 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5472616E7366657248656C7065723A3A7472616E7366657246726F6D3A207472 PUSH0 DUP3 ADD MSTORE PUSH32 0x616E7366657246726F6D206661696C6564000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x7B9 PUSH1 0x31 DUP4 PUSH2 0x74F JUMP JUMPDEST SWAP2 POP PUSH2 0x7C4 DUP3 PUSH2 0x75F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x7E6 DUP2 PUSH2 0x7AD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x800 PUSH0 DUP4 ADD DUP6 PUSH2 0x643 JUMP JUMPDEST PUSH2 0x80D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x4ED JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x5472616E7366657248656C7065723A3A73616665417070726F76653A20617070 PUSH0 DUP3 ADD MSTORE PUSH32 0x726F7665206661696C6564000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x86E PUSH1 0x2B DUP4 PUSH2 0x74F JUMP JUMPDEST SWAP2 POP PUSH2 0x879 DUP3 PUSH2 0x814 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x89B DUP2 PUSH2 0x862 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH25 0xBC2D7B8AF84D7ADFF942DF37FEA2B8D019088F10ECCEB85417 CODESIZE 0xB6 SWAP5 MULMOD DUP14 CREATE2 PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ",
							"sourceMap": "295:2647:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;366:2574;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;484:17;518:24;559:6;518:48;;755:175;800:4;828:10;870:4;902:8;755:31;:175::i;:::-;996:63;1023:4;1037:10;1050:8;996:26;:63::i;:::-;1172:50;1225:384;;;;;;;;1302:4;1225:384;;;;;;1334:5;1225:384;;;;;;1362:4;1225:384;;;;;;1446:4;1225:384;;;;;;1511:8;1225:384;;;;1555:1;1225:384;;;;1593:1;1225:384;;;;;1172:437;;1807:18;1828:10;:27;;;1856:6;1828:35;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1807:56;;507:2433;;;366:2574;;;;;;:::o;1096:486:0:-;1314:12;1328:17;1349:5;:10;;1383;1395:4;1401:2;1405:5;1360:51;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1349:63;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1313:99;;;;1443:7;:57;;;;;1470:1;1455:4;:11;:16;:44;;;;1486:4;1475:24;;;;;;;;;;;;:::i;:::-;1455:44;1443:57;1422:153;;;;;;;;;;;;:::i;:::-;;;;;;;;;1225:357;;1096:486;;;;:::o;212:434::-;390:12;404:17;425:5;:10;;459;471:2;475:5;436:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;425:57;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;389:93;;;;513:7;:57;;;;;540:1;525:4;:11;:16;:44;;;;556:4;545:24;;;;;;;;;;;;:::i;:::-;525:44;513:57;492:147;;;;;;;;;;;;:::i;:::-;;;;;;;;;314:332;;212:434;;;:::o;88:117:5:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:126::-;727:7;767:42;760:5;756:54;745:65;;690:126;;;:::o;822:96::-;859:7;888:24;906:5;888:24;:::i;:::-;877:35;;822:96;;;:::o;924:122::-;997:24;1015:5;997:24;:::i;:::-;990:5;987:35;977:63;;1036:1;1033;1026:12;977:63;924:122;:::o;1052:139::-;1098:5;1136:6;1123:20;1114:29;;1152:33;1179:5;1152:33;:::i;:::-;1052:139;;;;:::o;1197:765::-;1283:6;1291;1299;1307;1356:3;1344:9;1335:7;1331:23;1327:33;1324:120;;;1363:79;;:::i;:::-;1324:120;1483:1;1508:53;1553:7;1544:6;1533:9;1529:22;1508:53;:::i;:::-;1498:63;;1454:117;1610:2;1636:53;1681:7;1672:6;1661:9;1657:22;1636:53;:::i;:::-;1626:63;;1581:118;1738:2;1764:53;1809:7;1800:6;1789:9;1785:22;1764:53;:::i;:::-;1754:63;;1709:118;1866:2;1892:53;1937:7;1928:6;1917:9;1913:22;1892:53;:::i;:::-;1882:63;;1837:118;1197:765;;;;;;;:::o;1968:118::-;2055:24;2073:5;2055:24;:::i;:::-;2050:3;2043:37;1968:118;;:::o;2092:222::-;2185:4;2223:2;2212:9;2208:18;2200:26;;2236:71;2304:1;2293:9;2289:17;2280:6;2236:71;:::i;:::-;2092:222;;;;:::o;2320:108::-;2397:24;2415:5;2397:24;:::i;:::-;2392:3;2385:37;2320:108;;:::o;2434:91::-;2470:7;2510:8;2503:5;2499:20;2488:31;;2434:91;;;:::o;2531:105::-;2606:23;2623:5;2606:23;:::i;:::-;2601:3;2594:36;2531:105;;:::o;2642:108::-;2719:24;2737:5;2719:24;:::i;:::-;2714:3;2707:37;2642:108;;:::o;2756:::-;2833:24;2851:5;2833:24;:::i;:::-;2828:3;2821:37;2756:108;;:::o;2968:1443::-;3143:4;3138:3;3134:14;3233:4;3226:5;3222:16;3216:23;3252:63;3309:4;3304:3;3300:14;3286:12;3252:63;:::i;:::-;3158:167;3411:4;3404:5;3400:16;3394:23;3430:63;3487:4;3482:3;3478:14;3464:12;3430:63;:::i;:::-;3335:168;3584:4;3577:5;3573:16;3567:23;3603:61;3658:4;3653:3;3649:14;3635:12;3603:61;:::i;:::-;3513:161;3761:4;3754:5;3750:16;3744:23;3780:63;3837:4;3832:3;3828:14;3814:12;3780:63;:::i;:::-;3684:169;3939:4;3932:5;3928:16;3922:23;3958:63;4015:4;4010:3;4006:14;3992:12;3958:63;:::i;:::-;3863:168;4125:4;4118:5;4114:16;4108:23;4144:63;4201:4;4196:3;4192:14;4178:12;4144:63;:::i;:::-;4041:176;4312:4;4305:5;4301:16;4295:23;4331:63;4388:4;4383:3;4379:14;4365:12;4331:63;:::i;:::-;4227:177;3112:1299;2968:1443;;:::o;4417:379::-;4588:4;4626:3;4615:9;4611:19;4603:27;;4640:149;4786:1;4775:9;4771:17;4762:6;4640:149;:::i;:::-;4417:379;;;;:::o;4802:143::-;4859:5;4890:6;4884:13;4875:22;;4906:33;4933:5;4906:33;:::i;:::-;4802:143;;;;:::o;4951:351::-;5021:6;5070:2;5058:9;5049:7;5045:23;5041:32;5038:119;;;5076:79;;:::i;:::-;5038:119;5196:1;5221:64;5277:7;5268:6;5257:9;5253:22;5221:64;:::i;:::-;5211:74;;5167:128;4951:351;;;;:::o;5308:118::-;5395:24;5413:5;5395:24;:::i;:::-;5390:3;5383:37;5308:118;;:::o;5432:442::-;5581:4;5619:2;5608:9;5604:18;5596:26;;5632:71;5700:1;5689:9;5685:17;5676:6;5632:71;:::i;:::-;5713:72;5781:2;5770:9;5766:18;5757:6;5713:72;:::i;:::-;5795;5863:2;5852:9;5848:18;5839:6;5795:72;:::i;:::-;5432:442;;;;;;:::o;5880:98::-;5931:6;5965:5;5959:12;5949:22;;5880:98;;;:::o;5984:147::-;6085:11;6122:3;6107:18;;5984:147;;;;:::o;6137:139::-;6226:6;6221:3;6216;6210:23;6267:1;6258:6;6253:3;6249:16;6242:27;6137:139;;;:::o;6282:386::-;6386:3;6414:38;6446:5;6414:38;:::i;:::-;6468:88;6549:6;6544:3;6468:88;:::i;:::-;6461:95;;6565:65;6623:6;6618:3;6611:4;6604:5;6600:16;6565:65;:::i;:::-;6655:6;6650:3;6646:16;6639:23;;6390:278;6282:386;;;;:::o;6674:271::-;6804:3;6826:93;6915:3;6906:6;6826:93;:::i;:::-;6819:100;;6936:3;6929:10;;6674:271;;;;:::o;6951:90::-;6985:7;7028:5;7021:13;7014:21;7003:32;;6951:90;;;:::o;7047:116::-;7117:21;7132:5;7117:21;:::i;:::-;7110:5;7107:32;7097:60;;7153:1;7150;7143:12;7097:60;7047:116;:::o;7169:137::-;7223:5;7254:6;7248:13;7239:22;;7270:30;7294:5;7270:30;:::i;:::-;7169:137;;;;:::o;7312:345::-;7379:6;7428:2;7416:9;7407:7;7403:23;7399:32;7396:119;;;7434:79;;:::i;:::-;7396:119;7554:1;7579:61;7632:7;7623:6;7612:9;7608:22;7579:61;:::i;:::-;7569:71;;7525:125;7312:345;;;;:::o;7663:169::-;7747:11;7781:6;7776:3;7769:19;7821:4;7816:3;7812:14;7797:29;;7663:169;;;;:::o;7838:236::-;7978:34;7974:1;7966:6;7962:14;7955:58;8047:19;8042:2;8034:6;8030:15;8023:44;7838:236;:::o;8080:366::-;8222:3;8243:67;8307:2;8302:3;8243:67;:::i;:::-;8236:74;;8319:93;8408:3;8319:93;:::i;:::-;8437:2;8432:3;8428:12;8421:19;;8080:366;;;:::o;8452:419::-;8618:4;8656:2;8645:9;8641:18;8633:26;;8705:9;8699:4;8695:20;8691:1;8680:9;8676:17;8669:47;8733:131;8859:4;8733:131;:::i;:::-;8725:139;;8452:419;;;:::o;8877:332::-;8998:4;9036:2;9025:9;9021:18;9013:26;;9049:71;9117:1;9106:9;9102:17;9093:6;9049:71;:::i;:::-;9130:72;9198:2;9187:9;9183:18;9174:6;9130:72;:::i;:::-;8877:332;;;;;:::o;9215:230::-;9355:34;9351:1;9343:6;9339:14;9332:58;9424:13;9419:2;9411:6;9407:15;9400:38;9215:230;:::o;9451:366::-;9593:3;9614:67;9678:2;9673:3;9614:67;:::i;:::-;9607:74;;9690:93;9779:3;9690:93;:::i;:::-;9808:2;9803:3;9799:12;9792:19;;9451:366;;;:::o;9823:419::-;9989:4;10027:2;10016:9;10012:18;10004:26;;10076:9;10070:4;10066:20;10062:1;10051:9;10047:17;10040:47;10104:131;10230:4;10104:131;:::i;:::-;10096:139;;9823:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "452800",
								"executionCost": "484",
								"totalCost": "453284"
							},
							"external": {
								"doArbitrage(uint256,address,address,address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 295,
									"end": 2942,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 295,
									"end": 2942,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 295,
									"end": 2942,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 295,
									"end": 2942,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 295,
									"end": 2942,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 295,
									"end": 2942,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 295,
									"end": 2942,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 295,
									"end": 2942,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 295,
									"end": 2942,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 295,
									"end": 2942,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 295,
									"end": 2942,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 295,
									"end": 2942,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 295,
									"end": 2942,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 295,
									"end": 2942,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 295,
									"end": 2942,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 295,
									"end": 2942,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 295,
									"end": 2942,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 295,
									"end": 2942,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 295,
									"end": 2942,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 295,
									"end": 2942,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 295,
									"end": 2942,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122078bc2d7b8af84d7adff942df37fea2b8d019088f10ecceb8541738b694098df564736f6c63430008190033",
									".code": [
										{
											"begin": 295,
											"end": 2942,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 295,
											"end": 2942,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 295,
											"end": 2942,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 295,
											"end": 2942,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 295,
											"end": 2942,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 295,
											"end": 2942,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 295,
											"end": 2942,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 295,
											"end": 2942,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 295,
											"end": 2942,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 295,
											"end": 2942,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 295,
											"end": 2942,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 295,
											"end": 2942,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 295,
											"end": 2942,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 295,
											"end": 2942,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 295,
											"end": 2942,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 295,
											"end": 2942,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 295,
											"end": 2942,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 295,
											"end": 2942,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 295,
											"end": 2942,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 295,
											"end": 2942,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 295,
											"end": 2942,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 295,
											"end": 2942,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 295,
											"end": 2942,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 295,
											"end": 2942,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 295,
											"end": 2942,
											"name": "PUSH",
											"source": 4,
											"value": "212EAF84"
										},
										{
											"begin": 295,
											"end": 2942,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 295,
											"end": 2942,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 295,
											"end": 2942,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 295,
											"end": 2942,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 295,
											"end": 2942,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 295,
											"end": 2942,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 295,
											"end": 2942,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 295,
											"end": 2942,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 366,
											"end": 2940,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 366,
											"end": 2940,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 366,
											"end": 2940,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 366,
											"end": 2940,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 366,
											"end": 2940,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 366,
											"end": 2940,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 366,
											"end": 2940,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 366,
											"end": 2940,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 366,
											"end": 2940,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 366,
											"end": 2940,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 366,
											"end": 2940,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 366,
											"end": 2940,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 366,
											"end": 2940,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 366,
											"end": 2940,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 366,
											"end": 2940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 366,
											"end": 2940,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 366,
											"end": 2940,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 366,
											"end": 2940,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 366,
											"end": 2940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 366,
											"end": 2940,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 366,
											"end": 2940,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 366,
											"end": 2940,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 366,
											"end": 2940,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 366,
											"end": 2940,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 366,
											"end": 2940,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 366,
											"end": 2940,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 366,
											"end": 2940,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 366,
											"end": 2940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 366,
											"end": 2940,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 366,
											"end": 2940,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 366,
											"end": 2940,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 366,
											"end": 2940,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 366,
											"end": 2940,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 366,
											"end": 2940,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 366,
											"end": 2940,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 366,
											"end": 2940,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 366,
											"end": 2940,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 366,
											"end": 2940,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 366,
											"end": 2940,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 484,
											"end": 501,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 518,
											"end": 542,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 559,
											"end": 565,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 518,
											"end": 566,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 518,
											"end": 566,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 755,
											"end": 930,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 800,
											"end": 804,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 828,
											"end": 838,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 870,
											"end": 874,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 902,
											"end": 910,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 755,
											"end": 786,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 755,
											"end": 930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 755,
											"end": 930,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 755,
											"end": 930,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 996,
											"end": 1059,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 1023,
											"end": 1027,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1037,
											"end": 1047,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1050,
											"end": 1058,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 996,
											"end": 1022,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 996,
											"end": 1059,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 996,
											"end": 1059,
											"name": "tag",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 996,
											"end": 1059,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1172,
											"end": 1222,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1225,
											"end": 1609,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1225,
											"end": 1609,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1225,
											"end": 1609,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1225,
											"end": 1609,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 1225,
											"end": 1609,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1225,
											"end": 1609,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1225,
											"end": 1609,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1225,
											"end": 1609,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1302,
											"end": 1306,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1225,
											"end": 1609,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1225,
											"end": 1609,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1225,
											"end": 1609,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1225,
											"end": 1609,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1225,
											"end": 1609,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1225,
											"end": 1609,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1334,
											"end": 1339,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1225,
											"end": 1609,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1225,
											"end": 1609,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1225,
											"end": 1609,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1225,
											"end": 1609,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1225,
											"end": 1609,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1225,
											"end": 1609,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1362,
											"end": 1366,
											"name": "PUSH",
											"source": 4,
											"value": "BB8"
										},
										{
											"begin": 1225,
											"end": 1609,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFF"
										},
										{
											"begin": 1225,
											"end": 1609,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1225,
											"end": 1609,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1225,
											"end": 1609,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1225,
											"end": 1609,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1225,
											"end": 1609,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1446,
											"end": 1450,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 1225,
											"end": 1609,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1225,
											"end": 1609,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1225,
											"end": 1609,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1225,
											"end": 1609,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1225,
											"end": 1609,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1225,
											"end": 1609,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1511,
											"end": 1519,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 1225,
											"end": 1609,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1225,
											"end": 1609,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1225,
											"end": 1609,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1225,
											"end": 1609,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1555,
											"end": 1556,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1225,
											"end": 1609,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1225,
											"end": 1609,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1225,
											"end": 1609,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1225,
											"end": 1609,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1593,
											"end": 1594,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1225,
											"end": 1609,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1225,
											"end": 1609,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1225,
											"end": 1609,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1225,
											"end": 1609,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1225,
											"end": 1609,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1172,
											"end": 1609,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1172,
											"end": 1609,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1807,
											"end": 1825,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1828,
											"end": 1838,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1828,
											"end": 1855,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1828,
											"end": 1855,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1828,
											"end": 1855,
											"name": "PUSH",
											"source": 4,
											"value": "4E45AAF"
										},
										{
											"begin": 1856,
											"end": 1862,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1828,
											"end": 1863,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1828,
											"end": 1863,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1828,
											"end": 1863,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1828,
											"end": 1863,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1828,
											"end": 1863,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1828,
											"end": 1863,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 1828,
											"end": 1863,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 1828,
											"end": 1863,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1828,
											"end": 1863,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1828,
											"end": 1863,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1828,
											"end": 1863,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1828,
											"end": 1863,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 1828,
											"end": 1863,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1828,
											"end": 1863,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1828,
											"end": 1863,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 1828,
											"end": 1863,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1828,
											"end": 1863,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 1828,
											"end": 1863,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1828,
											"end": 1863,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1828,
											"end": 1863,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1828,
											"end": 1863,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1828,
											"end": 1863,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1828,
											"end": 1863,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1828,
											"end": 1863,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1828,
											"end": 1863,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1828,
											"end": 1863,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1828,
											"end": 1863,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 1828,
											"end": 1863,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 1828,
											"end": 1863,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 1828,
											"end": 1863,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1828,
											"end": 1863,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1828,
											"end": 1863,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1828,
											"end": 1863,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 1828,
											"end": 1863,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1828,
											"end": 1863,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1828,
											"end": 1863,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1828,
											"end": 1863,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1828,
											"end": 1863,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 1828,
											"end": 1863,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1828,
											"end": 1863,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1828,
											"end": 1863,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1828,
											"end": 1863,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 1828,
											"end": 1863,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1828,
											"end": 1863,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1828,
											"end": 1863,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1828,
											"end": 1863,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1828,
											"end": 1863,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1828,
											"end": 1863,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1828,
											"end": 1863,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1828,
											"end": 1863,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1828,
											"end": 1863,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1828,
											"end": 1863,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1828,
											"end": 1863,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1828,
											"end": 1863,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1828,
											"end": 1863,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1828,
											"end": 1863,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1828,
											"end": 1863,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1828,
											"end": 1863,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1828,
											"end": 1863,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1828,
											"end": 1863,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1828,
											"end": 1863,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1828,
											"end": 1863,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1828,
											"end": 1863,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1828,
											"end": 1863,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1828,
											"end": 1863,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1828,
											"end": 1863,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 1828,
											"end": 1863,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1828,
											"end": 1863,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1828,
											"end": 1863,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1828,
											"end": 1863,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1828,
											"end": 1863,
											"name": "tag",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 1828,
											"end": 1863,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1807,
											"end": 1863,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1807,
											"end": 1863,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 507,
											"end": 2940,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 507,
											"end": 2940,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 507,
											"end": 2940,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 366,
											"end": 2940,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 366,
											"end": 2940,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 366,
											"end": 2940,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 366,
											"end": 2940,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 366,
											"end": 2940,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 366,
											"end": 2940,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 366,
											"end": 2940,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1096,
											"end": 1582,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1096,
											"end": 1582,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1314,
											"end": 1326,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1328,
											"end": 1345,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1354,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1359,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1349,
											"end": 1359,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1383,
											"end": 1393,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 1395,
											"end": 1399,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 1403,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 1405,
											"end": 1410,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1411,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1360,
											"end": 1411,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1411,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1360,
											"end": 1411,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1411,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1360,
											"end": 1411,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1411,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1411,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1411,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1411,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1360,
											"end": 1411,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1411,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1360,
											"end": 1411,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1411,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1360,
											"end": 1411,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1411,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1360,
											"end": 1411,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1411,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1411,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1411,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1411,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1411,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1411,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1411,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1360,
											"end": 1411,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1411,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1411,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 1360,
											"end": 1411,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1411,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1360,
											"end": 1411,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1411,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1411,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1411,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1411,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1360,
											"end": 1411,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1411,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1411,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1411,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1411,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1411,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1411,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1411,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1411,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1411,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1411,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1349,
											"end": 1412,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1313,
											"end": 1412,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1313,
											"end": 1412,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1313,
											"end": 1412,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1313,
											"end": 1412,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 1450,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 1500,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 1500,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 1500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 1443,
											"end": 1500,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 1500,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1470,
											"end": 1471,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1455,
											"end": 1459,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1455,
											"end": 1466,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1455,
											"end": 1471,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1455,
											"end": 1499,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1455,
											"end": 1499,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1455,
											"end": 1499,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1455,
											"end": 1499,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1486,
											"end": 1490,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1475,
											"end": 1499,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1475,
											"end": 1499,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1475,
											"end": 1499,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1475,
											"end": 1499,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1475,
											"end": 1499,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1475,
											"end": 1499,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1475,
											"end": 1499,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1475,
											"end": 1499,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1475,
											"end": 1499,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1475,
											"end": 1499,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1475,
											"end": 1499,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1475,
											"end": 1499,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1475,
											"end": 1499,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1475,
											"end": 1499,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1475,
											"end": 1499,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1455,
											"end": 1499,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1455,
											"end": 1499,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 1500,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 1443,
											"end": 1500,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1575,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1422,
											"end": 1575,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1575,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1422,
											"end": 1575,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1575,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1422,
											"end": 1575,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1575,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1575,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1422,
											"end": 1575,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1575,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1422,
											"end": 1575,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1575,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1422,
											"end": 1575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1575,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1422,
											"end": 1575,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1575,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1422,
											"end": 1575,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1575,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1575,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1575,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1575,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1575,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1575,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1422,
											"end": 1575,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1225,
											"end": 1582,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1225,
											"end": 1582,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 1582,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 1582,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 1582,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 1582,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 1582,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 212,
											"end": 646,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 212,
											"end": 646,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 390,
											"end": 402,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 404,
											"end": 421,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 425,
											"end": 430,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 425,
											"end": 435,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 425,
											"end": 435,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 459,
											"end": 469,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 471,
											"end": 473,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 475,
											"end": 480,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 436,
											"end": 481,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 436,
											"end": 481,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 436,
											"end": 481,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 436,
											"end": 481,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 436,
											"end": 481,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 436,
											"end": 481,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 436,
											"end": 481,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 436,
											"end": 481,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 436,
											"end": 481,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 436,
											"end": 481,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 436,
											"end": 481,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 436,
											"end": 481,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 436,
											"end": 481,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 436,
											"end": 481,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 436,
											"end": 481,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 436,
											"end": 481,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 436,
											"end": 481,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 436,
											"end": 481,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 436,
											"end": 481,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 436,
											"end": 481,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 436,
											"end": 481,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 436,
											"end": 481,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 436,
											"end": 481,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 436,
											"end": 481,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 436,
											"end": 481,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 436,
											"end": 481,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 436,
											"end": 481,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 436,
											"end": 481,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 436,
											"end": 481,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 436,
											"end": 481,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 436,
											"end": 481,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 436,
											"end": 481,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 436,
											"end": 481,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 436,
											"end": 481,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 436,
											"end": 481,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 436,
											"end": 481,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 436,
											"end": 481,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 436,
											"end": 481,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 436,
											"end": 481,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 436,
											"end": 481,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 436,
											"end": 481,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 436,
											"end": 481,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 436,
											"end": 481,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 436,
											"end": 481,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 425,
											"end": 482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 425,
											"end": 482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 425,
											"end": 482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 425,
											"end": 482,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 425,
											"end": 482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 425,
											"end": 482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 425,
											"end": 482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 425,
											"end": 482,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 425,
											"end": 482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 425,
											"end": 482,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 425,
											"end": 482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 425,
											"end": 482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 425,
											"end": 482,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 425,
											"end": 482,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 425,
											"end": 482,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 425,
											"end": 482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 425,
											"end": 482,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 425,
											"end": 482,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 425,
											"end": 482,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 425,
											"end": 482,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 425,
											"end": 482,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 425,
											"end": 482,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 425,
											"end": 482,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 425,
											"end": 482,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 425,
											"end": 482,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 425,
											"end": 482,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 425,
											"end": 482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 425,
											"end": 482,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 425,
											"end": 482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 425,
											"end": 482,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 425,
											"end": 482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 425,
											"end": 482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 425,
											"end": 482,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 425,
											"end": 482,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 425,
											"end": 482,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 425,
											"end": 482,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 425,
											"end": 482,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 425,
											"end": 482,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 425,
											"end": 482,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 425,
											"end": 482,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 425,
											"end": 482,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 425,
											"end": 482,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 425,
											"end": 482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 425,
											"end": 482,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 425,
											"end": 482,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 425,
											"end": 482,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 425,
											"end": 482,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 425,
											"end": 482,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 425,
											"end": 482,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 425,
											"end": 482,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 425,
											"end": 482,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 425,
											"end": 482,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 425,
											"end": 482,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 425,
											"end": 482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 425,
											"end": 482,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 425,
											"end": 482,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 425,
											"end": 482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 425,
											"end": 482,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 425,
											"end": 482,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 425,
											"end": 482,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 425,
											"end": 482,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 425,
											"end": 482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 425,
											"end": 482,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 389,
											"end": 482,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 389,
											"end": 482,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 389,
											"end": 482,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 389,
											"end": 482,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 513,
											"end": 520,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 513,
											"end": 570,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 513,
											"end": 570,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 513,
											"end": 570,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 513,
											"end": 570,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 513,
											"end": 570,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 540,
											"end": 541,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 525,
											"end": 529,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 525,
											"end": 536,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 525,
											"end": 541,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 525,
											"end": 569,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 525,
											"end": 569,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 525,
											"end": 569,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 525,
											"end": 569,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 556,
											"end": 560,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 545,
											"end": 569,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 545,
											"end": 569,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 545,
											"end": 569,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 545,
											"end": 569,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 545,
											"end": 569,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 545,
											"end": 569,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 545,
											"end": 569,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 545,
											"end": 569,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 545,
											"end": 569,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 545,
											"end": 569,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 545,
											"end": 569,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 545,
											"end": 569,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 545,
											"end": 569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 545,
											"end": 569,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 545,
											"end": 569,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 525,
											"end": 569,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 525,
											"end": 569,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 513,
											"end": 570,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 513,
											"end": 570,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 492,
											"end": 639,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 492,
											"end": 639,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 492,
											"end": 639,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 492,
											"end": 639,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 492,
											"end": 639,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 492,
											"end": 639,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 492,
											"end": 639,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 492,
											"end": 639,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 492,
											"end": 639,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 492,
											"end": 639,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 492,
											"end": 639,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 492,
											"end": 639,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 492,
											"end": 639,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 492,
											"end": 639,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 492,
											"end": 639,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 492,
											"end": 639,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 492,
											"end": 639,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 492,
											"end": 639,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 492,
											"end": 639,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 492,
											"end": 639,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 492,
											"end": 639,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 492,
											"end": 639,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 492,
											"end": 639,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 492,
											"end": 639,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 314,
											"end": 646,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 314,
											"end": 646,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 212,
											"end": 646,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 212,
											"end": 646,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 212,
											"end": 646,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 212,
											"end": 646,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 334,
											"end": 411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 490,
											"end": 514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 417,
											"end": 539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 645,
											"end": 678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 545,
											"end": 684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 690,
											"end": 816,
											"name": "tag",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 690,
											"end": 816,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 727,
											"end": 734,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 767,
											"end": 809,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 760,
											"end": 765,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 756,
											"end": 810,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 745,
											"end": 810,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 745,
											"end": 810,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 690,
											"end": 816,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 690,
											"end": 816,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 690,
											"end": 816,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 690,
											"end": 816,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 822,
											"end": 918,
											"name": "tag",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 822,
											"end": 918,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 859,
											"end": 866,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 888,
											"end": 912,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 906,
											"end": 911,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 888,
											"end": 912,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 888,
											"end": 912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 888,
											"end": 912,
											"name": "tag",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 888,
											"end": 912,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 877,
											"end": 912,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 877,
											"end": 912,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 822,
											"end": 918,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 822,
											"end": 918,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 822,
											"end": 918,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 822,
											"end": 918,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "tag",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 1015,
											"end": 1020,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 997,
											"end": 1021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "tag",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 990,
											"end": 995,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 987,
											"end": 1022,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1036,
											"end": 1037,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1033,
											"end": 1034,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1026,
											"end": 1038,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "tag",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 924,
											"end": 1046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "tag",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1098,
											"end": 1103,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1123,
											"end": 1143,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 1179,
											"end": 1184,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 1152,
											"end": 1185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "tag",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1052,
											"end": 1191,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1197,
											"end": 1962,
											"name": "tag",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 1197,
											"end": 1962,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1283,
											"end": 1289,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1291,
											"end": 1297,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1299,
											"end": 1305,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1307,
											"end": 1313,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1356,
											"end": 1359,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 1344,
											"end": 1353,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1335,
											"end": 1342,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 1331,
											"end": 1354,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1327,
											"end": 1360,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1324,
											"end": 1444,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1324,
											"end": 1444,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 1324,
											"end": 1444,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1363,
											"end": 1442,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1363,
											"end": 1442,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 1363,
											"end": 1442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1363,
											"end": 1442,
											"name": "tag",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1363,
											"end": 1442,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1324,
											"end": 1444,
											"name": "tag",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 1324,
											"end": 1444,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1483,
											"end": 1484,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1508,
											"end": 1561,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 1553,
											"end": 1560,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 1544,
											"end": 1550,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1533,
											"end": 1542,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 1529,
											"end": 1551,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1508,
											"end": 1561,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 1508,
											"end": 1561,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1508,
											"end": 1561,
											"name": "tag",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 1508,
											"end": 1561,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1498,
											"end": 1561,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 1498,
											"end": 1561,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1454,
											"end": 1571,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1610,
											"end": 1612,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1636,
											"end": 1689,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 1681,
											"end": 1688,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 1672,
											"end": 1678,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1661,
											"end": 1670,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 1657,
											"end": 1679,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1636,
											"end": 1689,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 1636,
											"end": 1689,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1636,
											"end": 1689,
											"name": "tag",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 1636,
											"end": 1689,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1626,
											"end": 1689,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1626,
											"end": 1689,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1581,
											"end": 1699,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1738,
											"end": 1740,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1764,
											"end": 1817,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 1809,
											"end": 1816,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 1800,
											"end": 1806,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1789,
											"end": 1798,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 1785,
											"end": 1807,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1764,
											"end": 1817,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 1764,
											"end": 1817,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1764,
											"end": 1817,
											"name": "tag",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 1764,
											"end": 1817,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1754,
											"end": 1817,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1754,
											"end": 1817,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1709,
											"end": 1827,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1866,
											"end": 1868,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 1892,
											"end": 1945,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 1937,
											"end": 1944,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 1928,
											"end": 1934,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1917,
											"end": 1926,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 1913,
											"end": 1935,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1892,
											"end": 1945,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 1892,
											"end": 1945,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1892,
											"end": 1945,
											"name": "tag",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 1892,
											"end": 1945,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1882,
											"end": 1945,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1882,
											"end": 1945,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1837,
											"end": 1955,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1197,
											"end": 1962,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1197,
											"end": 1962,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 1197,
											"end": 1962,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1197,
											"end": 1962,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 1197,
											"end": 1962,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1197,
											"end": 1962,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1197,
											"end": 1962,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1197,
											"end": 1962,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1968,
											"end": 2086,
											"name": "tag",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 1968,
											"end": 2086,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2055,
											"end": 2079,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 2073,
											"end": 2078,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2055,
											"end": 2079,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 2055,
											"end": 2079,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2055,
											"end": 2079,
											"name": "tag",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 2055,
											"end": 2079,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2050,
											"end": 2053,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2043,
											"end": 2080,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1968,
											"end": 2086,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1968,
											"end": 2086,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1968,
											"end": 2086,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2092,
											"end": 2314,
											"name": "tag",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 2092,
											"end": 2314,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2189,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2223,
											"end": 2225,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2212,
											"end": 2221,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2208,
											"end": 2226,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2200,
											"end": 2226,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2200,
											"end": 2226,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2236,
											"end": 2307,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 2304,
											"end": 2305,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2293,
											"end": 2302,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2289,
											"end": 2306,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2280,
											"end": 2286,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2236,
											"end": 2307,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 2236,
											"end": 2307,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2236,
											"end": 2307,
											"name": "tag",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 2236,
											"end": 2307,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2092,
											"end": 2314,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2092,
											"end": 2314,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2092,
											"end": 2314,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2092,
											"end": 2314,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2092,
											"end": 2314,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2320,
											"end": 2428,
											"name": "tag",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 2320,
											"end": 2428,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2397,
											"end": 2421,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 2415,
											"end": 2420,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2397,
											"end": 2421,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 2397,
											"end": 2421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2397,
											"end": 2421,
											"name": "tag",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 2397,
											"end": 2421,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2392,
											"end": 2395,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2385,
											"end": 2422,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2320,
											"end": 2428,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2320,
											"end": 2428,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2320,
											"end": 2428,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2434,
											"end": 2525,
											"name": "tag",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 2434,
											"end": 2525,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2470,
											"end": 2477,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2510,
											"end": 2518,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFF"
										},
										{
											"begin": 2503,
											"end": 2508,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2499,
											"end": 2519,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2488,
											"end": 2519,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2488,
											"end": 2519,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2434,
											"end": 2525,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2434,
											"end": 2525,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2434,
											"end": 2525,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2434,
											"end": 2525,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2531,
											"end": 2636,
											"name": "tag",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 2531,
											"end": 2636,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2606,
											"end": 2629,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 2623,
											"end": 2628,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2606,
											"end": 2629,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 2606,
											"end": 2629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2606,
											"end": 2629,
											"name": "tag",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 2606,
											"end": 2629,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2601,
											"end": 2604,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2594,
											"end": 2630,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2531,
											"end": 2636,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2531,
											"end": 2636,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2531,
											"end": 2636,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2642,
											"end": 2750,
											"name": "tag",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 2642,
											"end": 2750,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2719,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 2737,
											"end": 2742,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2719,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 2719,
											"end": 2743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2719,
											"end": 2743,
											"name": "tag",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 2719,
											"end": 2743,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2714,
											"end": 2717,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2707,
											"end": 2744,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2642,
											"end": 2750,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2642,
											"end": 2750,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2642,
											"end": 2750,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2756,
											"end": 2864,
											"name": "tag",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 2756,
											"end": 2864,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2833,
											"end": 2857,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 2851,
											"end": 2856,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2833,
											"end": 2857,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 2833,
											"end": 2857,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2833,
											"end": 2857,
											"name": "tag",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 2833,
											"end": 2857,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2828,
											"end": 2831,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2821,
											"end": 2858,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2756,
											"end": 2864,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2756,
											"end": 2864,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2756,
											"end": 2864,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2968,
											"end": 4411,
											"name": "tag",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 2968,
											"end": 4411,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3143,
											"end": 3147,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 3138,
											"end": 3141,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3233,
											"end": 3237,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3226,
											"end": 3231,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3222,
											"end": 3238,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3216,
											"end": 3239,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3252,
											"end": 3315,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 3309,
											"end": 3313,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3304,
											"end": 3307,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3300,
											"end": 3314,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3286,
											"end": 3298,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3252,
											"end": 3315,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 3252,
											"end": 3315,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3252,
											"end": 3315,
											"name": "tag",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 3252,
											"end": 3315,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3158,
											"end": 3325,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3411,
											"end": 3415,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3404,
											"end": 3409,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3400,
											"end": 3416,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3394,
											"end": 3417,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3430,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 3487,
											"end": 3491,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3482,
											"end": 3485,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3478,
											"end": 3492,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3464,
											"end": 3476,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3430,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 3430,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3430,
											"end": 3493,
											"name": "tag",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 3430,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3335,
											"end": 3503,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3584,
											"end": 3588,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3577,
											"end": 3582,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3573,
											"end": 3589,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3567,
											"end": 3590,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3603,
											"end": 3664,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 3658,
											"end": 3662,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3653,
											"end": 3656,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3649,
											"end": 3663,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3635,
											"end": 3647,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3603,
											"end": 3664,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 3603,
											"end": 3664,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3603,
											"end": 3664,
											"name": "tag",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 3603,
											"end": 3664,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3513,
											"end": 3674,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3761,
											"end": 3765,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 3754,
											"end": 3759,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3750,
											"end": 3766,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3744,
											"end": 3767,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3780,
											"end": 3843,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 3837,
											"end": 3841,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 3832,
											"end": 3835,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3828,
											"end": 3842,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3814,
											"end": 3826,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3780,
											"end": 3843,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 3780,
											"end": 3843,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3780,
											"end": 3843,
											"name": "tag",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 3780,
											"end": 3843,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3684,
											"end": 3853,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3939,
											"end": 3943,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 3932,
											"end": 3937,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 3944,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3922,
											"end": 3945,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3958,
											"end": 4021,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 4015,
											"end": 4019,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 4010,
											"end": 4013,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4006,
											"end": 4020,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3992,
											"end": 4004,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3958,
											"end": 4021,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 3958,
											"end": 4021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3958,
											"end": 4021,
											"name": "tag",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 3958,
											"end": 4021,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3863,
											"end": 4031,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4125,
											"end": 4129,
											"name": "PUSH",
											"source": 5,
											"value": "A0"
										},
										{
											"begin": 4118,
											"end": 4123,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4114,
											"end": 4130,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4108,
											"end": 4131,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4144,
											"end": 4207,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 4201,
											"end": 4205,
											"name": "PUSH",
											"source": 5,
											"value": "A0"
										},
										{
											"begin": 4196,
											"end": 4199,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4192,
											"end": 4206,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4178,
											"end": 4190,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4144,
											"end": 4207,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 4144,
											"end": 4207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4144,
											"end": 4207,
											"name": "tag",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 4144,
											"end": 4207,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4041,
											"end": 4217,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4312,
											"end": 4316,
											"name": "PUSH",
											"source": 5,
											"value": "C0"
										},
										{
											"begin": 4305,
											"end": 4310,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4301,
											"end": 4317,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4295,
											"end": 4318,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4331,
											"end": 4394,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 4388,
											"end": 4392,
											"name": "PUSH",
											"source": 5,
											"value": "C0"
										},
										{
											"begin": 4383,
											"end": 4386,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4379,
											"end": 4393,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4365,
											"end": 4377,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4331,
											"end": 4394,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 4331,
											"end": 4394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4331,
											"end": 4394,
											"name": "tag",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 4331,
											"end": 4394,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4227,
											"end": 4404,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3112,
											"end": 4411,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2968,
											"end": 4411,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2968,
											"end": 4411,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2968,
											"end": 4411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4417,
											"end": 4796,
											"name": "tag",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 4417,
											"end": 4796,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4588,
											"end": 4592,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4626,
											"end": 4629,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 4615,
											"end": 4624,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4611,
											"end": 4630,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4603,
											"end": 4630,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4603,
											"end": 4630,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4640,
											"end": 4789,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 4786,
											"end": 4787,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4775,
											"end": 4784,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4771,
											"end": 4788,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4762,
											"end": 4768,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4640,
											"end": 4789,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 4640,
											"end": 4789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4640,
											"end": 4789,
											"name": "tag",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 4640,
											"end": 4789,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4417,
											"end": 4796,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4417,
											"end": 4796,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4417,
											"end": 4796,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4417,
											"end": 4796,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4417,
											"end": 4796,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4802,
											"end": 4945,
											"name": "tag",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 4802,
											"end": 4945,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4859,
											"end": 4864,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4890,
											"end": 4896,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4884,
											"end": 4897,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4875,
											"end": 4897,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4875,
											"end": 4897,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4906,
											"end": 4939,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 4933,
											"end": 4938,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4906,
											"end": 4939,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 4906,
											"end": 4939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4906,
											"end": 4939,
											"name": "tag",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 4906,
											"end": 4939,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4802,
											"end": 4945,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4802,
											"end": 4945,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4802,
											"end": 4945,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4802,
											"end": 4945,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4802,
											"end": 4945,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4951,
											"end": 5302,
											"name": "tag",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4951,
											"end": 5302,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5021,
											"end": 5027,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5070,
											"end": 5072,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5058,
											"end": 5067,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5049,
											"end": 5056,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5045,
											"end": 5068,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5041,
											"end": 5073,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 5038,
											"end": 5157,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5038,
											"end": 5157,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 5038,
											"end": 5157,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5076,
											"end": 5155,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 5076,
											"end": 5155,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 5076,
											"end": 5155,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5076,
											"end": 5155,
											"name": "tag",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 5076,
											"end": 5155,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5038,
											"end": 5157,
											"name": "tag",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 5038,
											"end": 5157,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5196,
											"end": 5197,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5221,
											"end": 5285,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 5277,
											"end": 5284,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5268,
											"end": 5274,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5257,
											"end": 5266,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5253,
											"end": 5275,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5221,
											"end": 5285,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 5221,
											"end": 5285,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5221,
											"end": 5285,
											"name": "tag",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 5221,
											"end": 5285,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5211,
											"end": 5285,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5211,
											"end": 5285,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5167,
											"end": 5295,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4951,
											"end": 5302,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4951,
											"end": 5302,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4951,
											"end": 5302,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4951,
											"end": 5302,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4951,
											"end": 5302,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5308,
											"end": 5426,
											"name": "tag",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 5308,
											"end": 5426,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5395,
											"end": 5419,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 5413,
											"end": 5418,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5395,
											"end": 5419,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 5395,
											"end": 5419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5395,
											"end": 5419,
											"name": "tag",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 5395,
											"end": 5419,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5390,
											"end": 5393,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5383,
											"end": 5420,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5308,
											"end": 5426,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5308,
											"end": 5426,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5308,
											"end": 5426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5432,
											"end": 5874,
											"name": "tag",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 5432,
											"end": 5874,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5581,
											"end": 5585,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5619,
											"end": 5621,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 5608,
											"end": 5617,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5604,
											"end": 5622,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5596,
											"end": 5622,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5596,
											"end": 5622,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5632,
											"end": 5703,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 5700,
											"end": 5701,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5689,
											"end": 5698,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5685,
											"end": 5702,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5676,
											"end": 5682,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 5632,
											"end": 5703,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 5632,
											"end": 5703,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5632,
											"end": 5703,
											"name": "tag",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 5632,
											"end": 5703,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5713,
											"end": 5785,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 5781,
											"end": 5783,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5770,
											"end": 5779,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5766,
											"end": 5784,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5757,
											"end": 5763,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5713,
											"end": 5785,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 5713,
											"end": 5785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5713,
											"end": 5785,
											"name": "tag",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 5713,
											"end": 5785,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5795,
											"end": 5867,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 5863,
											"end": 5865,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5852,
											"end": 5861,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5848,
											"end": 5866,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5839,
											"end": 5845,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5795,
											"end": 5867,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 5795,
											"end": 5867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5795,
											"end": 5867,
											"name": "tag",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 5795,
											"end": 5867,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5432,
											"end": 5874,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 5432,
											"end": 5874,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 5432,
											"end": 5874,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5432,
											"end": 5874,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5432,
											"end": 5874,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5432,
											"end": 5874,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5432,
											"end": 5874,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5880,
											"end": 5978,
											"name": "tag",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 5880,
											"end": 5978,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5931,
											"end": 5937,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5965,
											"end": 5970,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5959,
											"end": 5971,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5949,
											"end": 5971,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5949,
											"end": 5971,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5880,
											"end": 5978,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5880,
											"end": 5978,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5880,
											"end": 5978,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5880,
											"end": 5978,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5984,
											"end": 6131,
											"name": "tag",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 5984,
											"end": 6131,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6085,
											"end": 6096,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6122,
											"end": 6125,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6107,
											"end": 6125,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6107,
											"end": 6125,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5984,
											"end": 6131,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5984,
											"end": 6131,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5984,
											"end": 6131,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5984,
											"end": 6131,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5984,
											"end": 6131,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6137,
											"end": 6276,
											"name": "tag",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 6137,
											"end": 6276,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6226,
											"end": 6232,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6221,
											"end": 6224,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6216,
											"end": 6219,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6210,
											"end": 6233,
											"name": "MCOPY",
											"source": 5
										},
										{
											"begin": 6267,
											"end": 6268,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6258,
											"end": 6264,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6253,
											"end": 6256,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6249,
											"end": 6265,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6242,
											"end": 6269,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6137,
											"end": 6276,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6137,
											"end": 6276,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6137,
											"end": 6276,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6137,
											"end": 6276,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6282,
											"end": 6668,
											"name": "tag",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 6282,
											"end": 6668,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6386,
											"end": 6389,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6414,
											"end": 6452,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 6446,
											"end": 6451,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6414,
											"end": 6452,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 6414,
											"end": 6452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6414,
											"end": 6452,
											"name": "tag",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 6414,
											"end": 6452,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6468,
											"end": 6556,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 6549,
											"end": 6555,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6544,
											"end": 6547,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 6468,
											"end": 6556,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 6468,
											"end": 6556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6468,
											"end": 6556,
											"name": "tag",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 6468,
											"end": 6556,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6461,
											"end": 6556,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 6461,
											"end": 6556,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6565,
											"end": 6630,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 6623,
											"end": 6629,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6618,
											"end": 6621,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 6611,
											"end": 6615,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6604,
											"end": 6609,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 6600,
											"end": 6616,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6565,
											"end": 6630,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 6565,
											"end": 6630,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6565,
											"end": 6630,
											"name": "tag",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 6565,
											"end": 6630,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6655,
											"end": 6661,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6650,
											"end": 6653,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6646,
											"end": 6662,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6639,
											"end": 6662,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6639,
											"end": 6662,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6390,
											"end": 6668,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6282,
											"end": 6668,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6282,
											"end": 6668,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6282,
											"end": 6668,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6282,
											"end": 6668,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6282,
											"end": 6668,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6674,
											"end": 6945,
											"name": "tag",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 6674,
											"end": 6945,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6804,
											"end": 6807,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6826,
											"end": 6919,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 6915,
											"end": 6918,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6906,
											"end": 6912,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6826,
											"end": 6919,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 6826,
											"end": 6919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6826,
											"end": 6919,
											"name": "tag",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 6826,
											"end": 6919,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6819,
											"end": 6919,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6819,
											"end": 6919,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6936,
											"end": 6939,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6929,
											"end": 6939,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6929,
											"end": 6939,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6674,
											"end": 6945,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6674,
											"end": 6945,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6674,
											"end": 6945,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6674,
											"end": 6945,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6674,
											"end": 6945,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6951,
											"end": 7041,
											"name": "tag",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 6951,
											"end": 7041,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6985,
											"end": 6992,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7028,
											"end": 7033,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7014,
											"end": 7035,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7003,
											"end": 7035,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7003,
											"end": 7035,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6951,
											"end": 7041,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6951,
											"end": 7041,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6951,
											"end": 7041,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6951,
											"end": 7041,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7047,
											"end": 7163,
											"name": "tag",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 7047,
											"end": 7163,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7117,
											"end": 7138,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 7132,
											"end": 7137,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7117,
											"end": 7138,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 7117,
											"end": 7138,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7117,
											"end": 7138,
											"name": "tag",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 7117,
											"end": 7138,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7110,
											"end": 7115,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7107,
											"end": 7139,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 7097,
											"end": 7157,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 7097,
											"end": 7157,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7153,
											"end": 7154,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7150,
											"end": 7151,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7143,
											"end": 7155,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 7097,
											"end": 7157,
											"name": "tag",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 7097,
											"end": 7157,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7047,
											"end": 7163,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7047,
											"end": 7163,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7169,
											"end": 7306,
											"name": "tag",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 7169,
											"end": 7306,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7223,
											"end": 7228,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7254,
											"end": 7260,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7248,
											"end": 7261,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7239,
											"end": 7261,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7239,
											"end": 7261,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7270,
											"end": 7300,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 7294,
											"end": 7299,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7270,
											"end": 7300,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 7270,
											"end": 7300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7270,
											"end": 7300,
											"name": "tag",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 7270,
											"end": 7300,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7169,
											"end": 7306,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7169,
											"end": 7306,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7169,
											"end": 7306,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7169,
											"end": 7306,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7169,
											"end": 7306,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7312,
											"end": 7657,
											"name": "tag",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 7312,
											"end": 7657,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7379,
											"end": 7385,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7428,
											"end": 7430,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7416,
											"end": 7425,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7407,
											"end": 7414,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7403,
											"end": 7426,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7399,
											"end": 7431,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 7396,
											"end": 7515,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7396,
											"end": 7515,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 7396,
											"end": 7515,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7434,
											"end": 7513,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 7434,
											"end": 7513,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 7434,
											"end": 7513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7434,
											"end": 7513,
											"name": "tag",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 7434,
											"end": 7513,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7396,
											"end": 7515,
											"name": "tag",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 7396,
											"end": 7515,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7554,
											"end": 7555,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7579,
											"end": 7640,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 7632,
											"end": 7639,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7623,
											"end": 7629,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7612,
											"end": 7621,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 7608,
											"end": 7630,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7579,
											"end": 7640,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 7579,
											"end": 7640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7579,
											"end": 7640,
											"name": "tag",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 7579,
											"end": 7640,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7569,
											"end": 7640,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7569,
											"end": 7640,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7525,
											"end": 7650,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7312,
											"end": 7657,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7312,
											"end": 7657,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7312,
											"end": 7657,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7312,
											"end": 7657,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7312,
											"end": 7657,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7663,
											"end": 7832,
											"name": "tag",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 7663,
											"end": 7832,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7747,
											"end": 7758,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7781,
											"end": 7787,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7776,
											"end": 7779,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7769,
											"end": 7788,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7821,
											"end": 7825,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7816,
											"end": 7819,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7812,
											"end": 7826,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7797,
											"end": 7826,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7797,
											"end": 7826,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7663,
											"end": 7832,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7663,
											"end": 7832,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7663,
											"end": 7832,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7663,
											"end": 7832,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7663,
											"end": 7832,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7838,
											"end": 8074,
											"name": "tag",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 7838,
											"end": 8074,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7978,
											"end": 8012,
											"name": "PUSH",
											"source": 5,
											"value": "5472616E7366657248656C7065723A3A7472616E7366657246726F6D3A207472"
										},
										{
											"begin": 7974,
											"end": 7975,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7966,
											"end": 7972,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7962,
											"end": 7976,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7955,
											"end": 8013,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8047,
											"end": 8066,
											"name": "PUSH",
											"source": 5,
											"value": "616E7366657246726F6D206661696C6564000000000000000000000000000000"
										},
										{
											"begin": 8042,
											"end": 8044,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8034,
											"end": 8040,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8030,
											"end": 8045,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8023,
											"end": 8067,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7838,
											"end": 8074,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7838,
											"end": 8074,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8080,
											"end": 8446,
											"name": "tag",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 8080,
											"end": 8446,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8222,
											"end": 8225,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8243,
											"end": 8310,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 8307,
											"end": 8309,
											"name": "PUSH",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 8302,
											"end": 8305,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8243,
											"end": 8310,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 8243,
											"end": 8310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8243,
											"end": 8310,
											"name": "tag",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 8243,
											"end": 8310,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8236,
											"end": 8310,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8236,
											"end": 8310,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8319,
											"end": 8412,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 8408,
											"end": 8411,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8319,
											"end": 8412,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 8319,
											"end": 8412,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8319,
											"end": 8412,
											"name": "tag",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 8319,
											"end": 8412,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8437,
											"end": 8439,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 8432,
											"end": 8435,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8428,
											"end": 8440,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8421,
											"end": 8440,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8421,
											"end": 8440,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8080,
											"end": 8446,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8080,
											"end": 8446,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8080,
											"end": 8446,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8080,
											"end": 8446,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8452,
											"end": 8871,
											"name": "tag",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 8452,
											"end": 8871,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8618,
											"end": 8622,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8656,
											"end": 8658,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8645,
											"end": 8654,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8641,
											"end": 8659,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8633,
											"end": 8659,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8633,
											"end": 8659,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8705,
											"end": 8714,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8699,
											"end": 8703,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8695,
											"end": 8715,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 8691,
											"end": 8692,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8680,
											"end": 8689,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8676,
											"end": 8693,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8669,
											"end": 8716,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8733,
											"end": 8864,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 8859,
											"end": 8863,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8733,
											"end": 8864,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 8733,
											"end": 8864,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8733,
											"end": 8864,
											"name": "tag",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 8733,
											"end": 8864,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8725,
											"end": 8864,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8725,
											"end": 8864,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8452,
											"end": 8871,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8452,
											"end": 8871,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8452,
											"end": 8871,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8452,
											"end": 8871,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8877,
											"end": 9209,
											"name": "tag",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 8877,
											"end": 9209,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8998,
											"end": 9002,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9036,
											"end": 9038,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9025,
											"end": 9034,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9021,
											"end": 9039,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9013,
											"end": 9039,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9013,
											"end": 9039,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9049,
											"end": 9120,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 9117,
											"end": 9118,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9106,
											"end": 9115,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9102,
											"end": 9119,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9093,
											"end": 9099,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 9049,
											"end": 9120,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 9049,
											"end": 9120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9049,
											"end": 9120,
											"name": "tag",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 9049,
											"end": 9120,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9130,
											"end": 9202,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 9198,
											"end": 9200,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9187,
											"end": 9196,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9183,
											"end": 9201,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9174,
											"end": 9180,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 9130,
											"end": 9202,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 9130,
											"end": 9202,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9130,
											"end": 9202,
											"name": "tag",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 9130,
											"end": 9202,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8877,
											"end": 9209,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 8877,
											"end": 9209,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 8877,
											"end": 9209,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8877,
											"end": 9209,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8877,
											"end": 9209,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8877,
											"end": 9209,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9215,
											"end": 9445,
											"name": "tag",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 9215,
											"end": 9445,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9355,
											"end": 9389,
											"name": "PUSH",
											"source": 5,
											"value": "5472616E7366657248656C7065723A3A73616665417070726F76653A20617070"
										},
										{
											"begin": 9351,
											"end": 9352,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9343,
											"end": 9349,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9339,
											"end": 9353,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9332,
											"end": 9390,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9424,
											"end": 9437,
											"name": "PUSH",
											"source": 5,
											"value": "726F7665206661696C6564000000000000000000000000000000000000000000"
										},
										{
											"begin": 9419,
											"end": 9421,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9411,
											"end": 9417,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9407,
											"end": 9422,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9400,
											"end": 9438,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9215,
											"end": 9445,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9215,
											"end": 9445,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9451,
											"end": 9817,
											"name": "tag",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 9451,
											"end": 9817,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9593,
											"end": 9596,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9614,
											"end": 9681,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 9678,
											"end": 9680,
											"name": "PUSH",
											"source": 5,
											"value": "2B"
										},
										{
											"begin": 9673,
											"end": 9676,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9614,
											"end": 9681,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 9614,
											"end": 9681,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9614,
											"end": 9681,
											"name": "tag",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 9614,
											"end": 9681,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9607,
											"end": 9681,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9607,
											"end": 9681,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9690,
											"end": 9783,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 9779,
											"end": 9782,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9690,
											"end": 9783,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 9690,
											"end": 9783,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9690,
											"end": 9783,
											"name": "tag",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 9690,
											"end": 9783,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9808,
											"end": 9810,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9803,
											"end": 9806,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9799,
											"end": 9811,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9792,
											"end": 9811,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9792,
											"end": 9811,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9451,
											"end": 9817,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9451,
											"end": 9817,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9451,
											"end": 9817,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9451,
											"end": 9817,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9823,
											"end": 10242,
											"name": "tag",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 9823,
											"end": 10242,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9989,
											"end": 9993,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10027,
											"end": 10029,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10016,
											"end": 10025,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10012,
											"end": 10030,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10004,
											"end": 10030,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10004,
											"end": 10030,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10076,
											"end": 10085,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10070,
											"end": 10074,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10066,
											"end": 10086,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 10062,
											"end": 10063,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10051,
											"end": 10060,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10047,
											"end": 10064,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10040,
											"end": 10087,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10104,
											"end": 10235,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 10230,
											"end": 10234,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10104,
											"end": 10235,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 10104,
											"end": 10235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10104,
											"end": 10235,
											"name": "tag",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 10104,
											"end": 10235,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10096,
											"end": 10235,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10096,
											"end": 10235,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9823,
											"end": 10242,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9823,
											"end": 10242,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9823,
											"end": 10242,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9823,
											"end": 10242,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@uniswap/lib/contracts/libraries/TransferHelper.sol",
								"@uniswap/swap-router-contracts/contracts/interfaces/IV3SwapRouter.sol",
								"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
								"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
								"FinalProject/contracts/AtomicArbitrage/benchmark.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"doArbitrage(uint256,address,address,address)": "212eaf84"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"router\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"LUSD\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"TIGER\",\"type\":\"address\"}],\"name\":\"doArbitrage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"FinalProject/contracts/AtomicArbitrage/benchmark.sol\":\"Arbitrage\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/lib/contracts/libraries/TransferHelper.sol\":{\"keccak256\":\"0xaff99b54915f57e2a4e71b8d15afd4ee425410e5a6f45c07517ae1beb806f8bd\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://15432ec031f4cfa6709921289e198b030a0c5eac75b5a3e0eb64827a2b3b5595\",\"dweb:/ipfs/QmZvR1KuuDvuzXFiADCngTKyMCTy31uhq9U6CazP59B55j\"]},\"@uniswap/swap-router-contracts/contracts/interfaces/IV3SwapRouter.sol\":{\"keccak256\":\"0xa2300af2b82af292216a8f3f301a86e65463655fff9fb791515e3fd2ccf4a14c\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a0a9bece58527fb5c1773d86666c7a71884a78f413e230dfa8c8a7f8ea564ef9\",\"dweb:/ipfs/QmbDhvpoZJN1KntxUUxkYV89RPTwqVBiyHBkvVh4QHSveo\"]},\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]},\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"keccak256\":\"0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53\",\"dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM\"]},\"FinalProject/contracts/AtomicArbitrage/benchmark.sol\":{\"keccak256\":\"0x035c0de0185a0a0925b7fe3ac035e993b961f131bbe9d32779a3112a9eff8344\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://d2a72cbb912a46d1e6ebff6e74c794ee73d6188ebbe75299fdaae68805d2c8b5\",\"dweb:/ipfs/QmXSrKKnQWypihdD9Ehw76rEUngsjDn7YtWDbxRG6arcQB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> FinalProject/contracts/AtomicArbitrage/benchmark.sol:15:18:\n   |\n15 |         returns (uint256 amountOut)\n   |                  ^^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 501,
					"file": "FinalProject/contracts/AtomicArbitrage/benchmark.sol",
					"start": 484
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2072",
				"formattedMessage": "Warning: Unused local variable.\n  --> FinalProject/contracts/AtomicArbitrage/benchmark.sol:49:9:\n   |\n49 |         uint256 amountOut1 = swapRouter.exactInputSingle(params);\n   |         ^^^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused local variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 1825,
					"file": "FinalProject/contracts/AtomicArbitrage/benchmark.sol",
					"start": 1807
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@uniswap/lib/contracts/libraries/TransferHelper.sol": {
				"ast": {
					"absolutePath": "@uniswap/lib/contracts/libraries/TransferHelper.sol",
					"exportedSymbols": {
						"TransferHelper": [
							159
						]
					},
					"id": 160,
					"license": "GPL-3.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "46:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "TransferHelper",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 159,
							"linearizedBaseContracts": [
								159
							],
							"name": "TransferHelper",
							"nameLocation": "191:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 43,
										"nodeType": "Block",
										"src": "314:332:0",
										"statements": [
											{
												"assignments": [
													11,
													13
												],
												"declarations": [
													{
														"constant": false,
														"id": 11,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "395:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 43,
														"src": "390:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 10,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "390:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 13,
														"mutability": "mutable",
														"name": "data",
														"nameLocation": "417:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 43,
														"src": "404:17:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 12,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "404:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 23,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30783039356561376233",
																	"id": 18,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "459:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_157198259_by_1",
																		"typeString": "int_const 157198259"
																	},
																	"value": "0x095ea7b3"
																},
																{
																	"id": 19,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 5,
																	"src": "471:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 20,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 7,
																	"src": "475:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_157198259_by_1",
																		"typeString": "int_const 157198259"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 16,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "436:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 17,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "440:18:0",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "436:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 21,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "436:45:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 14,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3,
															"src": "425:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 15,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "431:4:0",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "425:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 22,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "425:57:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "389:93:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 39,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 25,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 11,
																"src": "513:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 37,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 29,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 26,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 13,
																					"src": "525:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 27,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "530:6:0",
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "525:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 28,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "540:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "525:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 32,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 13,
																					"src": "556:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				{
																					"components": [
																						{
																							"id": 34,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "563:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_bool_$",
																								"typeString": "type(bool)"
																							},
																							"typeName": {
																								"id": 33,
																								"name": "bool",
																								"nodeType": "ElementaryTypeName",
																								"src": "563:4:0",
																								"typeDescriptions": {}
																							}
																						}
																					],
																					"id": 35,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "562:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					},
																					{
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				],
																				"expression": {
																					"id": 30,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "545:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 31,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberLocation": "549:6:0",
																				"memberName": "decode",
																				"nodeType": "MemberAccess",
																				"src": "545:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 36,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "545:24:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "525:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 38,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "524:46:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "513:57:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e7366657248656c7065723a3a73616665417070726f76653a20617070726f7665206661696c6564",
															"id": 40,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "584:45:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b4dd1eb4be82119fd3a99acfb5dd4c57591eb0ea309359b1af3d65a4460c7123",
																"typeString": "literal_string \"TransferHelper::safeApprove: approve failed\""
															},
															"value": "TransferHelper::safeApprove: approve failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b4dd1eb4be82119fd3a99acfb5dd4c57591eb0ea309359b1af3d65a4460c7123",
																"typeString": "literal_string \"TransferHelper::safeApprove: approve failed\""
															}
														],
														"id": 24,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "492:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 41,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "492:147:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 42,
												"nodeType": "ExpressionStatement",
												"src": "492:147:0"
											}
										]
									},
									"id": 44,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "221:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "250:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "242:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "242:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "273:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "265:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "265:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "293:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "285:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "285:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "232:72:0"
									},
									"returnParameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "314:0:0"
									},
									"scope": 159,
									"src": "212:434:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 86,
										"nodeType": "Block",
										"src": "755:335:0",
										"statements": [
											{
												"assignments": [
													54,
													56
												],
												"declarations": [
													{
														"constant": false,
														"id": 54,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "837:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 86,
														"src": "832:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 53,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "832:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 56,
														"mutability": "mutable",
														"name": "data",
														"nameLocation": "859:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 86,
														"src": "846:17:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 55,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "846:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 66,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30786139303539636262",
																	"id": 61,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "901:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2835717307_by_1",
																		"typeString": "int_const 2835717307"
																	},
																	"value": "0xa9059cbb"
																},
																{
																	"id": 62,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 48,
																	"src": "913:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 63,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 50,
																	"src": "917:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_2835717307_by_1",
																		"typeString": "int_const 2835717307"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 59,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "878:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 60,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "882:18:0",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "878:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "878:45:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 57,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 46,
															"src": "867:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 58,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "873:4:0",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "867:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "867:57:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "831:93:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 68,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 54,
																"src": "955:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 80,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 72,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 69,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 56,
																					"src": "967:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 70,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "972:6:0",
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "967:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 71,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "982:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "967:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 75,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 56,
																					"src": "998:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				{
																					"components": [
																						{
																							"id": 77,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "1005:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_bool_$",
																								"typeString": "type(bool)"
																							},
																							"typeName": {
																								"id": 76,
																								"name": "bool",
																								"nodeType": "ElementaryTypeName",
																								"src": "1005:4:0",
																								"typeDescriptions": {}
																							}
																						}
																					],
																					"id": 78,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "1004:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					},
																					{
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				],
																				"expression": {
																					"id": 73,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "987:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 74,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberLocation": "991:6:0",
																				"memberName": "decode",
																				"nodeType": "MemberAccess",
																				"src": "987:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 79,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "987:24:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "967:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 81,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "966:46:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "955:57:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e7366657248656c7065723a3a736166655472616e736665723a207472616e73666572206661696c6564",
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1026:47:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_daea69421eeb1164e163c36f3d4349f0db3ec4e0d1381bd5bf4faf53496c2611",
																"typeString": "literal_string \"TransferHelper::safeTransfer: transfer failed\""
															},
															"value": "TransferHelper::safeTransfer: transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_daea69421eeb1164e163c36f3d4349f0db3ec4e0d1381bd5bf4faf53496c2611",
																"typeString": "literal_string \"TransferHelper::safeTransfer: transfer failed\""
															}
														],
														"id": 67,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "934:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "934:149:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "934:149:0"
											}
										]
									},
									"id": 87,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "661:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 46,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "691:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "683:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 45,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 48,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "714:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "706:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 47,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "706:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "734:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "726:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 49,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "726:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:72:0"
									},
									"returnParameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "755:0:0"
									},
									"scope": 159,
									"src": "652:438:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 132,
										"nodeType": "Block",
										"src": "1225:357:0",
										"statements": [
											{
												"assignments": [
													99,
													101
												],
												"declarations": [
													{
														"constant": false,
														"id": 99,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1319:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 132,
														"src": "1314:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 98,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1314:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 101,
														"mutability": "mutable",
														"name": "data",
														"nameLocation": "1341:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 132,
														"src": "1328:17:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 100,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1328:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 112,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30783233623837326464",
																	"id": 106,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1383:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_599290589_by_1",
																		"typeString": "int_const 599290589"
																	},
																	"value": "0x23b872dd"
																},
																{
																	"id": 107,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 91,
																	"src": "1395:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 108,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 93,
																	"src": "1401:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 109,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 95,
																	"src": "1405:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_599290589_by_1",
																		"typeString": "int_const 599290589"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 104,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1360:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 105,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1364:18:0",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1360:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 110,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1360:51:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 102,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 89,
															"src": "1349:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 103,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1355:4:0",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "1349:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1349:63:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1313:99:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 128,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 114,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 99,
																"src": "1443:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 126,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 118,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 115,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 101,
																					"src": "1455:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 116,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "1460:6:0",
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "1455:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 117,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1470:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "1455:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 121,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 101,
																					"src": "1486:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				{
																					"components": [
																						{
																							"id": 123,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "1493:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_bool_$",
																								"typeString": "type(bool)"
																							},
																							"typeName": {
																								"id": 122,
																								"name": "bool",
																								"nodeType": "ElementaryTypeName",
																								"src": "1493:4:0",
																								"typeDescriptions": {}
																							}
																						}
																					],
																					"id": 124,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "1492:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					},
																					{
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				],
																				"expression": {
																					"id": 119,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "1475:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 120,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberLocation": "1479:6:0",
																				"memberName": "decode",
																				"nodeType": "MemberAccess",
																				"src": "1475:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 125,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1475:24:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "1455:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 127,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1454:46:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1443:57:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e7366657248656c7065723a3a7472616e7366657246726f6d3a207472616e7366657246726f6d206661696c6564",
															"id": 129,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1514:51:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3f8faf98afe9344b6d4b0e75b0101259bf282914b3b5a9320c6918b6e27ede1c",
																"typeString": "literal_string \"TransferHelper::transferFrom: transferFrom failed\""
															},
															"value": "TransferHelper::transferFrom: transferFrom failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3f8faf98afe9344b6d4b0e75b0101259bf282914b3b5a9320c6918b6e27ede1c",
																"typeString": "literal_string \"TransferHelper::transferFrom: transferFrom failed\""
															}
														],
														"id": 113,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1422:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1422:153:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 131,
												"nodeType": "ExpressionStatement",
												"src": "1422:153:0"
											}
										]
									},
									"id": 133,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1105:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 89,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1139:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "1131:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 88,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1131:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1162:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "1154:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 90,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1154:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1184:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "1176:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1176:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1204:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "1196:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1196:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1121:94:0"
									},
									"returnParameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1225:0:0"
									},
									"scope": 159,
									"src": "1096:486:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 157,
										"nodeType": "Block",
										"src": "1649:153:0",
										"statements": [
											{
												"assignments": [
													141,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 141,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1665:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 157,
														"src": "1660:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 140,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1660:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 151,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 148,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1710:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 147,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "1700:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (bytes memory)"
																},
																"typeName": {
																	"id": 146,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "1704:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_storage_ptr",
																		"typeString": "bytes"
																	}
																}
															},
															"id": 149,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1700:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 142,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 135,
																"src": "1678:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 143,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1681:4:0",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1678:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 145,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 144,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 137,
																"src": "1693:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1678:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1678:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1659:54:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 153,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 141,
															"src": "1731:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e7366657248656c7065723a3a736166655472616e736665724554483a20455448207472616e73666572206661696c6564",
															"id": 154,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1740:54:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_43d7bec223ecf9eb06ea147e7d564bc71c2448662d62a4ea86ce71fc4518b350",
																"typeString": "literal_string \"TransferHelper::safeTransferETH: ETH transfer failed\""
															},
															"value": "TransferHelper::safeTransferETH: ETH transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_43d7bec223ecf9eb06ea147e7d564bc71c2448662d62a4ea86ce71fc4518b350",
																"typeString": "literal_string \"TransferHelper::safeTransferETH: ETH transfer failed\""
															}
														],
														"id": 152,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1723:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 155,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1723:72:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 156,
												"nodeType": "ExpressionStatement",
												"src": "1723:72:0"
											}
										]
									},
									"id": 158,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferETH",
									"nameLocation": "1597:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1621:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "1613:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 134,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1613:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1633:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "1625:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1625:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1612:27:0"
									},
									"returnParameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1649:0:0"
									},
									"scope": 159,
									"src": "1588:214:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 160,
							"src": "183:1621:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "46:1759:0"
				},
				"id": 0
			},
			"@uniswap/swap-router-contracts/contracts/interfaces/IV3SwapRouter.sol": {
				"ast": {
					"absolutePath": "@uniswap/swap-router-contracts/contracts/interfaces/IV3SwapRouter.sol",
					"exportedSymbols": {
						"IUniswapV3SwapCallback": [
							265
						],
						"IV3SwapRouter": [
							251
						]
					},
					"id": 252,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 161,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:1"
						},
						{
							"id": 162,
							"literals": [
								"abicoder",
								"v2"
							],
							"nodeType": "PragmaDirective",
							"src": "70:19:1"
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
							"file": "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
							"id": 163,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 252,
							"sourceUnit": 266,
							"src": "91:83:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 165,
										"name": "IUniswapV3SwapCallback",
										"nameLocations": [
											"307:22:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 265,
										"src": "307:22:1"
									},
									"id": 166,
									"nodeType": "InheritanceSpecifier",
									"src": "307:22:1"
								}
							],
							"canonicalName": "IV3SwapRouter",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 164,
								"nodeType": "StructuredDocumentation",
								"src": "176:104:1",
								"text": "@title Router token swapping functionality\n @notice Functions for swapping tokens via Uniswap V3"
							},
							"fullyImplemented": false,
							"id": 251,
							"linearizedBaseContracts": [
								251,
								265
							],
							"name": "IV3SwapRouter",
							"nameLocation": "290:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "IV3SwapRouter.ExactInputSingleParams",
									"id": 181,
									"members": [
										{
											"constant": false,
											"id": 168,
											"mutability": "mutable",
											"name": "tokenIn",
											"nameLocation": "384:7:1",
											"nodeType": "VariableDeclaration",
											"scope": 181,
											"src": "376:15:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 167,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "376:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 170,
											"mutability": "mutable",
											"name": "tokenOut",
											"nameLocation": "409:8:1",
											"nodeType": "VariableDeclaration",
											"scope": 181,
											"src": "401:16:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 169,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "401:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 172,
											"mutability": "mutable",
											"name": "fee",
											"nameLocation": "434:3:1",
											"nodeType": "VariableDeclaration",
											"scope": 181,
											"src": "427:10:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint24",
												"typeString": "uint24"
											},
											"typeName": {
												"id": 171,
												"name": "uint24",
												"nodeType": "ElementaryTypeName",
												"src": "427:6:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 174,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "455:9:1",
											"nodeType": "VariableDeclaration",
											"scope": 181,
											"src": "447:17:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 173,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "447:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 176,
											"mutability": "mutable",
											"name": "amountIn",
											"nameLocation": "482:8:1",
											"nodeType": "VariableDeclaration",
											"scope": 181,
											"src": "474:16:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 175,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "474:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 178,
											"mutability": "mutable",
											"name": "amountOutMinimum",
											"nameLocation": "508:16:1",
											"nodeType": "VariableDeclaration",
											"scope": 181,
											"src": "500:24:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 177,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "500:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 180,
											"mutability": "mutable",
											"name": "sqrtPriceLimitX96",
											"nameLocation": "542:17:1",
											"nodeType": "VariableDeclaration",
											"scope": 181,
											"src": "534:25:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint160",
												"typeString": "uint160"
											},
											"typeName": {
												"id": 179,
												"name": "uint160",
												"nodeType": "ElementaryTypeName",
												"src": "534:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactInputSingleParams",
									"nameLocation": "343:22:1",
									"nodeType": "StructDefinition",
									"scope": 251,
									"src": "336:230:1",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 182,
										"nodeType": "StructuredDocumentation",
										"src": "572:439:1",
										"text": "@notice Swaps `amountIn` of one token for as much as possible of another token\n @dev Setting `amountIn` to 0 will cause the contract to look up its own balance,\n and swap the entire amount, enabling contracts to send tokens before calling this function.\n @param params The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\n @return amountOut The amount of the received token"
									},
									"functionSelector": "04e45aaf",
									"id": 190,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exactInputSingle",
									"nameLocation": "1025:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "1074:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "1042:38:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactInputSingleParams_$181_calldata_ptr",
													"typeString": "struct IV3SwapRouter.ExactInputSingleParams"
												},
												"typeName": {
													"id": 184,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 183,
														"name": "ExactInputSingleParams",
														"nameLocations": [
															"1042:22:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 181,
														"src": "1042:22:1"
													},
													"referencedDeclaration": 181,
													"src": "1042:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactInputSingleParams_$181_storage_ptr",
														"typeString": "struct IV3SwapRouter.ExactInputSingleParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:40:1"
									},
									"returnParameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 188,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "1116:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "1108:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 187,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1108:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1107:19:1"
									},
									"scope": 251,
									"src": "1016:111:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "IV3SwapRouter.ExactInputParams",
									"id": 199,
									"members": [
										{
											"constant": false,
											"id": 192,
											"mutability": "mutable",
											"name": "path",
											"nameLocation": "1173:4:1",
											"nodeType": "VariableDeclaration",
											"scope": 199,
											"src": "1167:10:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 191,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "1167:5:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 194,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "1195:9:1",
											"nodeType": "VariableDeclaration",
											"scope": 199,
											"src": "1187:17:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 193,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1187:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 196,
											"mutability": "mutable",
											"name": "amountIn",
											"nameLocation": "1222:8:1",
											"nodeType": "VariableDeclaration",
											"scope": 199,
											"src": "1214:16:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 195,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1214:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 198,
											"mutability": "mutable",
											"name": "amountOutMinimum",
											"nameLocation": "1248:16:1",
											"nodeType": "VariableDeclaration",
											"scope": 199,
											"src": "1240:24:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 197,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1240:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactInputParams",
									"nameLocation": "1140:16:1",
									"nodeType": "StructDefinition",
									"scope": 251,
									"src": "1133:138:1",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 200,
										"nodeType": "StructuredDocumentation",
										"src": "1277:462:1",
										"text": "@notice Swaps `amountIn` of one token for as much as possible of another along the specified path\n @dev Setting `amountIn` to 0 will cause the contract to look up its own balance,\n and swap the entire amount, enabling contracts to send tokens before calling this function.\n @param params The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\n @return amountOut The amount of the received token"
									},
									"functionSelector": "b858183f",
									"id": 208,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exactInput",
									"nameLocation": "1753:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "1790:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 208,
												"src": "1764:32:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactInputParams_$199_calldata_ptr",
													"typeString": "struct IV3SwapRouter.ExactInputParams"
												},
												"typeName": {
													"id": 202,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 201,
														"name": "ExactInputParams",
														"nameLocations": [
															"1764:16:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 199,
														"src": "1764:16:1"
													},
													"referencedDeclaration": 199,
													"src": "1764:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactInputParams_$199_storage_ptr",
														"typeString": "struct IV3SwapRouter.ExactInputParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1763:34:1"
									},
									"returnParameters": {
										"id": 207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "1832:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 208,
												"src": "1824:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 205,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1824:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1823:19:1"
									},
									"scope": 251,
									"src": "1744:99:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "IV3SwapRouter.ExactOutputSingleParams",
									"id": 223,
									"members": [
										{
											"constant": false,
											"id": 210,
											"mutability": "mutable",
											"name": "tokenIn",
											"nameLocation": "1898:7:1",
											"nodeType": "VariableDeclaration",
											"scope": 223,
											"src": "1890:15:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 209,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1890:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 212,
											"mutability": "mutable",
											"name": "tokenOut",
											"nameLocation": "1923:8:1",
											"nodeType": "VariableDeclaration",
											"scope": 223,
											"src": "1915:16:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 211,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1915:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 214,
											"mutability": "mutable",
											"name": "fee",
											"nameLocation": "1948:3:1",
											"nodeType": "VariableDeclaration",
											"scope": 223,
											"src": "1941:10:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint24",
												"typeString": "uint24"
											},
											"typeName": {
												"id": 213,
												"name": "uint24",
												"nodeType": "ElementaryTypeName",
												"src": "1941:6:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 216,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "1969:9:1",
											"nodeType": "VariableDeclaration",
											"scope": 223,
											"src": "1961:17:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 215,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1961:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 218,
											"mutability": "mutable",
											"name": "amountOut",
											"nameLocation": "1996:9:1",
											"nodeType": "VariableDeclaration",
											"scope": 223,
											"src": "1988:17:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 217,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1988:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 220,
											"mutability": "mutable",
											"name": "amountInMaximum",
											"nameLocation": "2023:15:1",
											"nodeType": "VariableDeclaration",
											"scope": 223,
											"src": "2015:23:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 219,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2015:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 222,
											"mutability": "mutable",
											"name": "sqrtPriceLimitX96",
											"nameLocation": "2056:17:1",
											"nodeType": "VariableDeclaration",
											"scope": 223,
											"src": "2048:25:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint160",
												"typeString": "uint160"
											},
											"typeName": {
												"id": 221,
												"name": "uint160",
												"nodeType": "ElementaryTypeName",
												"src": "2048:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactOutputSingleParams",
									"nameLocation": "1856:23:1",
									"nodeType": "StructDefinition",
									"scope": 251,
									"src": "1849:231:1",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 224,
										"nodeType": "StructuredDocumentation",
										"src": "2086:304:1",
										"text": "@notice Swaps as little as possible of one token for `amountOut` of another token\n that may remain in the router after the swap.\n @param params The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\n @return amountIn The amount of the input token"
									},
									"functionSelector": "5023b4df",
									"id": 232,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exactOutputSingle",
									"nameLocation": "2404:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "2455:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "2422:39:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactOutputSingleParams_$223_calldata_ptr",
													"typeString": "struct IV3SwapRouter.ExactOutputSingleParams"
												},
												"typeName": {
													"id": 226,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 225,
														"name": "ExactOutputSingleParams",
														"nameLocations": [
															"2422:23:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 223,
														"src": "2422:23:1"
													},
													"referencedDeclaration": 223,
													"src": "2422:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactOutputSingleParams_$223_storage_ptr",
														"typeString": "struct IV3SwapRouter.ExactOutputSingleParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2421:41:1"
									},
									"returnParameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "2497:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "2489:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2489:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2488:18:1"
									},
									"scope": 251,
									"src": "2395:112:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "IV3SwapRouter.ExactOutputParams",
									"id": 241,
									"members": [
										{
											"constant": false,
											"id": 234,
											"mutability": "mutable",
											"name": "path",
											"nameLocation": "2554:4:1",
											"nodeType": "VariableDeclaration",
											"scope": 241,
											"src": "2548:10:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 233,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "2548:5:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 236,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "2576:9:1",
											"nodeType": "VariableDeclaration",
											"scope": 241,
											"src": "2568:17:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 235,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2568:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 238,
											"mutability": "mutable",
											"name": "amountOut",
											"nameLocation": "2603:9:1",
											"nodeType": "VariableDeclaration",
											"scope": 241,
											"src": "2595:17:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 237,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2595:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 240,
											"mutability": "mutable",
											"name": "amountInMaximum",
											"nameLocation": "2630:15:1",
											"nodeType": "VariableDeclaration",
											"scope": 241,
											"src": "2622:23:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 239,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2622:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactOutputParams",
									"nameLocation": "2520:17:1",
									"nodeType": "StructDefinition",
									"scope": 251,
									"src": "2513:139:1",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 242,
										"nodeType": "StructuredDocumentation",
										"src": "2658:338:1",
										"text": "@notice Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\n that may remain in the router after the swap.\n @param params The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\n @return amountIn The amount of the input token"
									},
									"functionSelector": "09b81346",
									"id": 250,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exactOutput",
									"nameLocation": "3010:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "3049:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 250,
												"src": "3022:33:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactOutputParams_$241_calldata_ptr",
													"typeString": "struct IV3SwapRouter.ExactOutputParams"
												},
												"typeName": {
													"id": 244,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 243,
														"name": "ExactOutputParams",
														"nameLocations": [
															"3022:17:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 241,
														"src": "3022:17:1"
													},
													"referencedDeclaration": 241,
													"src": "3022:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactOutputParams_$241_storage_ptr",
														"typeString": "struct IV3SwapRouter.ExactOutputParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3021:35:1"
									},
									"returnParameters": {
										"id": 249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 248,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "3091:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 250,
												"src": "3083:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 247,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3083:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3082:18:1"
									},
									"scope": 251,
									"src": "3001:100:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 252,
							"src": "280:2823:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:3059:1"
				},
				"id": 1
			},
			"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
					"exportedSymbols": {
						"IUniswapV3SwapCallback": [
							265
						]
					},
					"id": 266,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 253,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3SwapCallback",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 254,
								"nodeType": "StructuredDocumentation",
								"src": "71:144:2",
								"text": "@title Callback for IUniswapV3PoolActions#swap\n @notice Any contract that calls IUniswapV3PoolActions#swap must implement this interface"
							},
							"fullyImplemented": false,
							"id": 265,
							"linearizedBaseContracts": [
								265
							],
							"name": "IUniswapV3SwapCallback",
							"nameLocation": "225:22:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "254:898:2",
										"text": "@notice Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\n @dev In the implementation you must pay the pool tokens owed for the swap.\n The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\n amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\n @param amount0Delta The amount of token0 that was sent (negative) or must be received (positive) by the pool by\n the end of the swap. If positive, the callback must send that amount of token0 to the pool.\n @param amount1Delta The amount of token1 that was sent (negative) or must be received (positive) by the pool by\n the end of the swap. If positive, the callback must send that amount of token1 to the pool.\n @param data Any data passed through by the caller via the IUniswapV3PoolActions#swap call"
									},
									"functionSelector": "fa461e33",
									"id": 264,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "uniswapV3SwapCallback",
									"nameLocation": "1166:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "amount0Delta",
												"nameLocation": "1204:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "1197:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 256,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1197:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "amount1Delta",
												"nameLocation": "1233:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "1226:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 258,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1226:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1270:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "1255:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 260,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1255:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1187:93:2"
									},
									"returnParameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1289:0:2"
									},
									"scope": 265,
									"src": "1157:133:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 266,
							"src": "215:1077:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:1248:2"
				},
				"id": 2
			},
			"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
					"exportedSymbols": {
						"ISwapRouter": [
							365
						],
						"IUniswapV3SwapCallback": [
							265
						]
					},
					"id": 366,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 267,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:3"
						},
						{
							"id": 268,
							"literals": [
								"abicoder",
								"v2"
							],
							"nodeType": "PragmaDirective",
							"src": "70:19:3"
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
							"file": "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
							"id": 269,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 366,
							"sourceUnit": 266,
							"src": "91:83:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 271,
										"name": "IUniswapV3SwapCallback",
										"nameLocations": [
											"305:22:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 265,
										"src": "305:22:3"
									},
									"id": 272,
									"nodeType": "InheritanceSpecifier",
									"src": "305:22:3"
								}
							],
							"canonicalName": "ISwapRouter",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 270,
								"nodeType": "StructuredDocumentation",
								"src": "176:104:3",
								"text": "@title Router token swapping functionality\n @notice Functions for swapping tokens via Uniswap V3"
							},
							"fullyImplemented": false,
							"id": 365,
							"linearizedBaseContracts": [
								365,
								265
							],
							"name": "ISwapRouter",
							"nameLocation": "290:11:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "ISwapRouter.ExactInputSingleParams",
									"id": 289,
									"members": [
										{
											"constant": false,
											"id": 274,
											"mutability": "mutable",
											"name": "tokenIn",
											"nameLocation": "382:7:3",
											"nodeType": "VariableDeclaration",
											"scope": 289,
											"src": "374:15:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 273,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "374:7:3",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 276,
											"mutability": "mutable",
											"name": "tokenOut",
											"nameLocation": "407:8:3",
											"nodeType": "VariableDeclaration",
											"scope": 289,
											"src": "399:16:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 275,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "399:7:3",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 278,
											"mutability": "mutable",
											"name": "fee",
											"nameLocation": "432:3:3",
											"nodeType": "VariableDeclaration",
											"scope": 289,
											"src": "425:10:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint24",
												"typeString": "uint24"
											},
											"typeName": {
												"id": 277,
												"name": "uint24",
												"nodeType": "ElementaryTypeName",
												"src": "425:6:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 280,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "453:9:3",
											"nodeType": "VariableDeclaration",
											"scope": 289,
											"src": "445:17:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 279,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "445:7:3",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 282,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "480:8:3",
											"nodeType": "VariableDeclaration",
											"scope": 289,
											"src": "472:16:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 281,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "472:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 284,
											"mutability": "mutable",
											"name": "amountIn",
											"nameLocation": "506:8:3",
											"nodeType": "VariableDeclaration",
											"scope": 289,
											"src": "498:16:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 283,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "498:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 286,
											"mutability": "mutable",
											"name": "amountOutMinimum",
											"nameLocation": "532:16:3",
											"nodeType": "VariableDeclaration",
											"scope": 289,
											"src": "524:24:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 285,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "524:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 288,
											"mutability": "mutable",
											"name": "sqrtPriceLimitX96",
											"nameLocation": "566:17:3",
											"nodeType": "VariableDeclaration",
											"scope": 289,
											"src": "558:25:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint160",
												"typeString": "uint160"
											},
											"typeName": {
												"id": 287,
												"name": "uint160",
												"nodeType": "ElementaryTypeName",
												"src": "558:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactInputSingleParams",
									"nameLocation": "341:22:3",
									"nodeType": "StructDefinition",
									"scope": 365,
									"src": "334:256:3",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 290,
										"nodeType": "StructuredDocumentation",
										"src": "596:250:3",
										"text": "@notice Swaps `amountIn` of one token for as much as possible of another token\n @param params The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\n @return amountOut The amount of the received token"
									},
									"functionSelector": "414bf389",
									"id": 298,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exactInputSingle",
									"nameLocation": "860:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 293,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "909:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "877:38:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactInputSingleParams_$289_calldata_ptr",
													"typeString": "struct ISwapRouter.ExactInputSingleParams"
												},
												"typeName": {
													"id": 292,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 291,
														"name": "ExactInputSingleParams",
														"nameLocations": [
															"877:22:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 289,
														"src": "877:22:3"
													},
													"referencedDeclaration": 289,
													"src": "877:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactInputSingleParams_$289_storage_ptr",
														"typeString": "struct ISwapRouter.ExactInputSingleParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "876:40:3"
									},
									"returnParameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "951:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "943:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 295,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "943:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "942:19:3"
									},
									"scope": 365,
									"src": "851:111:3",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "ISwapRouter.ExactInputParams",
									"id": 309,
									"members": [
										{
											"constant": false,
											"id": 300,
											"mutability": "mutable",
											"name": "path",
											"nameLocation": "1008:4:3",
											"nodeType": "VariableDeclaration",
											"scope": 309,
											"src": "1002:10:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 299,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "1002:5:3",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 302,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "1030:9:3",
											"nodeType": "VariableDeclaration",
											"scope": 309,
											"src": "1022:17:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 301,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1022:7:3",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 304,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "1057:8:3",
											"nodeType": "VariableDeclaration",
											"scope": 309,
											"src": "1049:16:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 303,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1049:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 306,
											"mutability": "mutable",
											"name": "amountIn",
											"nameLocation": "1083:8:3",
											"nodeType": "VariableDeclaration",
											"scope": 309,
											"src": "1075:16:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 305,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1075:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 308,
											"mutability": "mutable",
											"name": "amountOutMinimum",
											"nameLocation": "1109:16:3",
											"nodeType": "VariableDeclaration",
											"scope": 309,
											"src": "1101:24:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 307,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1101:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactInputParams",
									"nameLocation": "975:16:3",
									"nodeType": "StructDefinition",
									"scope": 365,
									"src": "968:164:3",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 310,
										"nodeType": "StructuredDocumentation",
										"src": "1138:273:3",
										"text": "@notice Swaps `amountIn` of one token for as much as possible of another along the specified path\n @param params The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\n @return amountOut The amount of the received token"
									},
									"functionSelector": "c04b8d59",
									"id": 318,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exactInput",
									"nameLocation": "1425:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 313,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "1462:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "1436:32:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactInputParams_$309_calldata_ptr",
													"typeString": "struct ISwapRouter.ExactInputParams"
												},
												"typeName": {
													"id": 312,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 311,
														"name": "ExactInputParams",
														"nameLocations": [
															"1436:16:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 309,
														"src": "1436:16:3"
													},
													"referencedDeclaration": 309,
													"src": "1436:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactInputParams_$309_storage_ptr",
														"typeString": "struct ISwapRouter.ExactInputParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1435:34:3"
									},
									"returnParameters": {
										"id": 317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 316,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "1504:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "1496:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 315,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1496:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1495:19:3"
									},
									"scope": 365,
									"src": "1416:99:3",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "ISwapRouter.ExactOutputSingleParams",
									"id": 335,
									"members": [
										{
											"constant": false,
											"id": 320,
											"mutability": "mutable",
											"name": "tokenIn",
											"nameLocation": "1570:7:3",
											"nodeType": "VariableDeclaration",
											"scope": 335,
											"src": "1562:15:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 319,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1562:7:3",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 322,
											"mutability": "mutable",
											"name": "tokenOut",
											"nameLocation": "1595:8:3",
											"nodeType": "VariableDeclaration",
											"scope": 335,
											"src": "1587:16:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 321,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1587:7:3",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 324,
											"mutability": "mutable",
											"name": "fee",
											"nameLocation": "1620:3:3",
											"nodeType": "VariableDeclaration",
											"scope": 335,
											"src": "1613:10:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint24",
												"typeString": "uint24"
											},
											"typeName": {
												"id": 323,
												"name": "uint24",
												"nodeType": "ElementaryTypeName",
												"src": "1613:6:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 326,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "1641:9:3",
											"nodeType": "VariableDeclaration",
											"scope": 335,
											"src": "1633:17:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 325,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1633:7:3",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 328,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "1668:8:3",
											"nodeType": "VariableDeclaration",
											"scope": 335,
											"src": "1660:16:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 327,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1660:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 330,
											"mutability": "mutable",
											"name": "amountOut",
											"nameLocation": "1694:9:3",
											"nodeType": "VariableDeclaration",
											"scope": 335,
											"src": "1686:17:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 329,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1686:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 332,
											"mutability": "mutable",
											"name": "amountInMaximum",
											"nameLocation": "1721:15:3",
											"nodeType": "VariableDeclaration",
											"scope": 335,
											"src": "1713:23:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 331,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1713:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 334,
											"mutability": "mutable",
											"name": "sqrtPriceLimitX96",
											"nameLocation": "1754:17:3",
											"nodeType": "VariableDeclaration",
											"scope": 335,
											"src": "1746:25:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint160",
												"typeString": "uint160"
											},
											"typeName": {
												"id": 333,
												"name": "uint160",
												"nodeType": "ElementaryTypeName",
												"src": "1746:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactOutputSingleParams",
									"nameLocation": "1528:23:3",
									"nodeType": "StructDefinition",
									"scope": 365,
									"src": "1521:257:3",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 336,
										"nodeType": "StructuredDocumentation",
										"src": "1784:250:3",
										"text": "@notice Swaps as little as possible of one token for `amountOut` of another token\n @param params The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\n @return amountIn The amount of the input token"
									},
									"functionSelector": "db3e2198",
									"id": 344,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exactOutputSingle",
									"nameLocation": "2048:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "2099:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "2066:39:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactOutputSingleParams_$335_calldata_ptr",
													"typeString": "struct ISwapRouter.ExactOutputSingleParams"
												},
												"typeName": {
													"id": 338,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 337,
														"name": "ExactOutputSingleParams",
														"nameLocations": [
															"2066:23:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 335,
														"src": "2066:23:3"
													},
													"referencedDeclaration": 335,
													"src": "2066:23:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactOutputSingleParams_$335_storage_ptr",
														"typeString": "struct ISwapRouter.ExactOutputSingleParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2065:41:3"
									},
									"returnParameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "2141:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "2133:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 341,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2133:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2132:18:3"
									},
									"scope": 365,
									"src": "2039:112:3",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "ISwapRouter.ExactOutputParams",
									"id": 355,
									"members": [
										{
											"constant": false,
											"id": 346,
											"mutability": "mutable",
											"name": "path",
											"nameLocation": "2198:4:3",
											"nodeType": "VariableDeclaration",
											"scope": 355,
											"src": "2192:10:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 345,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "2192:5:3",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 348,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "2220:9:3",
											"nodeType": "VariableDeclaration",
											"scope": 355,
											"src": "2212:17:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 347,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2212:7:3",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 350,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "2247:8:3",
											"nodeType": "VariableDeclaration",
											"scope": 355,
											"src": "2239:16:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 349,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2239:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 352,
											"mutability": "mutable",
											"name": "amountOut",
											"nameLocation": "2273:9:3",
											"nodeType": "VariableDeclaration",
											"scope": 355,
											"src": "2265:17:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 351,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2265:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 354,
											"mutability": "mutable",
											"name": "amountInMaximum",
											"nameLocation": "2300:15:3",
											"nodeType": "VariableDeclaration",
											"scope": 355,
											"src": "2292:23:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 353,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2292:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactOutputParams",
									"nameLocation": "2164:17:3",
									"nodeType": "StructDefinition",
									"scope": 365,
									"src": "2157:165:3",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 356,
										"nodeType": "StructuredDocumentation",
										"src": "2328:284:3",
										"text": "@notice Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\n @param params The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\n @return amountIn The amount of the input token"
									},
									"functionSelector": "f28c0498",
									"id": 364,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exactOutput",
									"nameLocation": "2626:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 359,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "2665:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "2638:33:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactOutputParams_$355_calldata_ptr",
													"typeString": "struct ISwapRouter.ExactOutputParams"
												},
												"typeName": {
													"id": 358,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 357,
														"name": "ExactOutputParams",
														"nameLocations": [
															"2638:17:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 355,
														"src": "2638:17:3"
													},
													"referencedDeclaration": 355,
													"src": "2638:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactOutputParams_$355_storage_ptr",
														"typeString": "struct ISwapRouter.ExactOutputParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2637:35:3"
									},
									"returnParameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "2707:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "2699:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 361,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2698:18:3"
									},
									"scope": 365,
									"src": "2617:100:3",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 366,
							"src": "280:2439:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:2675:3"
				},
				"id": 3
			},
			"FinalProject/contracts/AtomicArbitrage/benchmark.sol": {
				"ast": {
					"absolutePath": "FinalProject/contracts/AtomicArbitrage/benchmark.sol",
					"exportedSymbols": {
						"Arbitrage": [
							450
						],
						"ISwapRouter": [
							365
						],
						"IUniswapV3SwapCallback": [
							265
						],
						"IV3SwapRouter": [
							251
						],
						"TransferHelper": [
							159
						]
					},
					"id": 451,
					"license": "Unlicense",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 367,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "37:24:4"
						},
						{
							"id": 368,
							"literals": [
								"abicoder",
								"v2"
							],
							"nodeType": "PragmaDirective",
							"src": "62:19:4"
						},
						{
							"absolutePath": "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
							"file": "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
							"id": 369,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 451,
							"sourceUnit": 366,
							"src": "83:68:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/lib/contracts/libraries/TransferHelper.sol",
							"file": "@uniswap/lib/contracts/libraries/TransferHelper.sol",
							"id": 370,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 451,
							"sourceUnit": 160,
							"src": "152:61:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/swap-router-contracts/contracts/interfaces/IV3SwapRouter.sol",
							"file": "@uniswap/swap-router-contracts/contracts/interfaces/IV3SwapRouter.sol",
							"id": 371,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 451,
							"sourceUnit": 252,
							"src": "214:79:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Arbitrage",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 450,
							"linearizedBaseContracts": [
								450
							],
							"name": "Arbitrage",
							"nameLocation": "304:9:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 378,
									"mutability": "constant",
									"name": "MAX_UINT",
									"nameLocation": "338:8:4",
									"nodeType": "VariableDeclaration",
									"scope": 450,
									"src": "321:38:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 372,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "321:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639935_by_1",
											"typeString": "int_const 1157...(70 digits omitted)...9935"
										},
										"id": 377,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639936_by_1",
												"typeString": "int_const 1157...(70 digits omitted)...9936"
											},
											"id": 375,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "32",
												"id": 373,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "349:1:4",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_2_by_1",
													"typeString": "int_const 2"
												},
												"value": "2"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "323536",
												"id": 374,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "352:3:4",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_256_by_1",
													"typeString": "int_const 256"
												},
												"value": "256"
											},
											"src": "349:6:4",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639936_by_1",
												"typeString": "int_const 1157...(70 digits omitted)...9936"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "-",
										"rightExpression": {
											"hexValue": "31",
											"id": 376,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "358:1:4",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "349:10:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639935_by_1",
											"typeString": "int_const 1157...(70 digits omitted)...9935"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 448,
										"nodeType": "Block",
										"src": "507:2433:4",
										"statements": [
											{
												"assignments": [
													393
												],
												"declarations": [
													{
														"constant": false,
														"id": 393,
														"mutability": "mutable",
														"name": "swapRouter",
														"nameLocation": "532:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 448,
														"src": "518:24:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IV3SwapRouter_$251",
															"typeString": "contract IV3SwapRouter"
														},
														"typeName": {
															"id": 392,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 391,
																"name": "IV3SwapRouter",
																"nameLocations": [
																	"518:13:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 251,
																"src": "518:13:4"
															},
															"referencedDeclaration": 251,
															"src": "518:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IV3SwapRouter_$251",
																"typeString": "contract IV3SwapRouter"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 397,
												"initialValue": {
													"arguments": [
														{
															"id": 395,
															"name": "router",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 382,
															"src": "559:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 394,
														"name": "IV3SwapRouter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 251,
														"src": "545:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IV3SwapRouter_$251_$",
															"typeString": "type(contract IV3SwapRouter)"
														}
													},
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "545:21:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IV3SwapRouter_$251",
														"typeString": "contract IV3SwapRouter"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "518:48:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 401,
															"name": "LUSD",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "800:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 402,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "828:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 403,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "832:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "828:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 406,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "870:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Arbitrage_$450",
																		"typeString": "contract Arbitrage"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Arbitrage_$450",
																		"typeString": "contract Arbitrage"
																	}
																],
																"id": 405,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "862:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 404,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "862:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 407,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "862:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 408,
															"name": "amountIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 380,
															"src": "902:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 398,
															"name": "TransferHelper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 159,
															"src": "755:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TransferHelper_$159_$",
																"typeString": "type(library TransferHelper)"
															}
														},
														"id": 400,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "770:16:4",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 133,
														"src": "755:31:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256)"
														}
													},
													"id": 409,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "755:175:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 410,
												"nodeType": "ExpressionStatement",
												"src": "755:175:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 414,
															"name": "LUSD",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "1023:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 417,
																	"name": "swapRouter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 393,
																	"src": "1037:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IV3SwapRouter_$251",
																		"typeString": "contract IV3SwapRouter"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IV3SwapRouter_$251",
																		"typeString": "contract IV3SwapRouter"
																	}
																],
																"id": 416,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1029:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 415,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1029:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 418,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1029:19:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 419,
															"name": "amountIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 380,
															"src": "1050:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 411,
															"name": "TransferHelper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 159,
															"src": "996:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TransferHelper_$159_$",
																"typeString": "type(library TransferHelper)"
															}
														},
														"id": 413,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1011:11:4",
														"memberName": "safeApprove",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 44,
														"src": "996:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 420,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "996:63:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 421,
												"nodeType": "ExpressionStatement",
												"src": "996:63:4"
											},
											{
												"assignments": [
													426
												],
												"declarations": [
													{
														"constant": false,
														"id": 426,
														"mutability": "mutable",
														"name": "params",
														"nameLocation": "1216:6:4",
														"nodeType": "VariableDeclaration",
														"scope": 448,
														"src": "1172:50:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ExactInputSingleParams_$181_memory_ptr",
															"typeString": "struct IV3SwapRouter.ExactInputSingleParams"
														},
														"typeName": {
															"id": 425,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 424,
																"name": "IV3SwapRouter.ExactInputSingleParams",
																"nameLocations": [
																	"1172:13:4",
																	"1186:22:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 181,
																"src": "1172:36:4"
															},
															"referencedDeclaration": 181,
															"src": "1172:36:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ExactInputSingleParams_$181_storage_ptr",
																"typeString": "struct IV3SwapRouter.ExactInputSingleParams"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 440,
												"initialValue": {
													"arguments": [
														{
															"id": 429,
															"name": "LUSD",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "1302:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 430,
															"name": "TIGER",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 386,
															"src": "1334:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "33303030",
															"id": 431,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1362:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_3000_by_1",
																"typeString": "int_const 3000"
															},
															"value": "3000"
														},
														{
															"arguments": [
																{
																	"id": 434,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1446:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Arbitrage_$450",
																		"typeString": "contract Arbitrage"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Arbitrage_$450",
																		"typeString": "contract Arbitrage"
																	}
																],
																"id": 433,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1438:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 432,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1438:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 435,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1438:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 436,
															"name": "amountIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 380,
															"src": "1511:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "30",
															"id": 437,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1555:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "30",
															"id": 438,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1593:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_3000_by_1",
																"typeString": "int_const 3000"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"expression": {
															"id": 427,
															"name": "IV3SwapRouter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 251,
															"src": "1225:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IV3SwapRouter_$251_$",
																"typeString": "type(contract IV3SwapRouter)"
															}
														},
														"id": 428,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1252:22:4",
														"memberName": "ExactInputSingleParams",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 181,
														"src": "1225:49:4",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_ExactInputSingleParams_$181_storage_ptr_$",
															"typeString": "type(struct IV3SwapRouter.ExactInputSingleParams storage pointer)"
														}
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"nameLocations": [
														"1293:7:4",
														"1324:8:4",
														"1357:3:4",
														"1427:9:4",
														"1501:8:4",
														"1537:16:4",
														"1574:17:4"
													],
													"names": [
														"tokenIn",
														"tokenOut",
														"fee",
														"recipient",
														"amountIn",
														"amountOutMinimum",
														"sqrtPriceLimitX96"
													],
													"nodeType": "FunctionCall",
													"src": "1225:384:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactInputSingleParams_$181_memory_ptr",
														"typeString": "struct IV3SwapRouter.ExactInputSingleParams memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1172:437:4"
											},
											{
												"assignments": [
													442
												],
												"declarations": [
													{
														"constant": false,
														"id": 442,
														"mutability": "mutable",
														"name": "amountOut1",
														"nameLocation": "1815:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 448,
														"src": "1807:18:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 441,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1807:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 447,
												"initialValue": {
													"arguments": [
														{
															"id": 445,
															"name": "params",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 426,
															"src": "1856:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ExactInputSingleParams_$181_memory_ptr",
																"typeString": "struct IV3SwapRouter.ExactInputSingleParams memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_ExactInputSingleParams_$181_memory_ptr",
																"typeString": "struct IV3SwapRouter.ExactInputSingleParams memory"
															}
														],
														"expression": {
															"id": 443,
															"name": "swapRouter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 393,
															"src": "1828:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IV3SwapRouter_$251",
																"typeString": "contract IV3SwapRouter"
															}
														},
														"id": 444,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1839:16:4",
														"memberName": "exactInputSingle",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 190,
														"src": "1828:27:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_payable$_t_struct$_ExactInputSingleParams_$181_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct IV3SwapRouter.ExactInputSingleParams memory) payable external returns (uint256)"
														}
													},
													"id": 446,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1828:35:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1807:56:4"
											}
										]
									},
									"functionSelector": "212eaf84",
									"id": 449,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "doArbitrage",
									"nameLocation": "375:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 387,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 380,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "395:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 449,
												"src": "387:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 379,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "387:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 382,
												"mutability": "mutable",
												"name": "router",
												"nameLocation": "413:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 449,
												"src": "405:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 381,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "LUSD",
												"nameLocation": "429:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 449,
												"src": "421:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "421:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "TIGER",
												"nameLocation": "443:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 449,
												"src": "435:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "435:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "386:63:4"
									},
									"returnParameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "492:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 449,
												"src": "484:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 388,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "484:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "483:19:4"
									},
									"scope": 450,
									"src": "366:2574:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 451,
							"src": "295:2647:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "37:2905:4"
				},
				"id": 4
			}
		}
	}
}